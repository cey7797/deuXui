<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Ac02SQL">

    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
    
    <!--
    #########################################################################################################################################
    # 결의서등록(admi/ac/ac02/ac02010.xfdl)
    #########################################################################################################################################
    -->
    
	<select id="ac02DAO.selectAc02010_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		
		SELECT DISTINCT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , (
		        SELECT ACNT_UNT_NM
		          FROM BG_UNT WITH(NOLOCK)
		         WHERE 1=1
		           AND ACNT_UNT = A.ACNT_UNT 
		       ) AS ACNT_UNT_NM
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_ORG_ID AS VOU_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.VOU_ORG_ID, 'DEPT_NM_KOR') AS VOU_ORG_ID_NM
		     , A.VOU_KND AS VOU_KND 
		     , dbo.F_COM_CODE_NM('AC001', A.VOU_KND, 'KOR') AS VOU_KND_NM 
		     , A.VOU_TTL AS VOU_TTL 
		     , A.STA_CD AS STA_CD 
		     , dbo.F_COM_CODE_NM('AC002', A.STA_CD, 'KOR') AS STA_CD_NM 
		     , ISNULL(C.VOU_SEQ, 0) AS VOU_SEQ_CNT
		     , ISNULL(dbo.F_AC_GET_VOU_AMT_SUM(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO), 0) AS APLY_AMT_SUM
		     , A.APLY_USER_ID AS APLY_USER_ID
       		 , dbo.F_COM_USER_NM(A.APLY_USER_ID, 'NM') AS APLY_USER_ID_NM
       		 , A.APLY_DT AS APLY_DT
	         , A.CTRL_USER_ID AS CTRL_USER_ID
       		 , dbo.F_COM_USER_NM(A.CTRL_USER_ID, 'NM') AS CTRL_USER_ID_NM
       		 , A.CTRL_DT AS CTRL_DT
       	     , A.APPRO_USER_ID AS APPRO_USER_ID
       		 , dbo.F_COM_USER_NM(A.APPRO_USER_ID, 'NM') AS APPRO_USER_ID_NM
             , A.APPRO_DT AS APPRO_DT
		     , A.RECV_USER_ID AS RECV_USER_ID
       		 , dbo.F_COM_USER_NM(A.RECV_USER_ID, 'NM') AS RECV_USER_ID_NM
       		 , A.RECV_DT AS RECV_DT
	         , D.SLIP_CFM_USER_ID AS SLIP_CFM_USER_ID
             , dbo.F_COM_USER_NM(D.SLIP_CFM_USER_ID, 'NM') AS SLIP_CFM_USER_ID_NM
             , D.SLIP_CFM_DT AS SLIP_CFM_DT
             , A.LINK_ID AS LINK_ID
             , A.ELEC_APPRO_ID
             , A.APPROVAL_DOCID
             , ISNULL(A.PRE_EXP_YN, '0') AS PRE_EXP_YN
             , ISNULL(E.PRE_EXP_YN, '') AS PRE_EXP_YN_BILL
             , ISNULL(F.PRE_EXP_YN, '') AS PRE_EXP_YN_INC
             , ISNULL(A.PRE_EXP_CFM_YN, '0') AS PRE_EXP_CFM_YN
		  FROM AC_VOU A WITH(NOLOCK)
		 INNER 
		  JOIN (
		        SELECT DISTINCT A.ACNT_UNT
		             , A.ACNT_YY
		             , A.VOU_NO
		          FROM AC_VOU A WITH(NOLOCK)
		          LEFT 
		         OUTER 
		          JOIN AC_VOU_DET B WITH(NOLOCK)
		            ON A.ACNT_UNT = B.ACNT_UNT
		           AND A.ACNT_YY = B.ACNT_YY
		           AND A.VOU_NO = B.VOU_NO
		         WHERE 1=1         
		        <isNotEmpty property="bizCd">
		           AND B.BIZ_CD = #bizCd#
		        </isNotEmpty>
		        <isNotEmpty property="acntCd">
		           AND B.ACNT_CD = #acntCd#
		        </isNotEmpty>
		      ) B
		   ON A.ACNT_UNT = B.ACNT_UNT
		  AND A.ACNT_YY = B.ACNT_YY
		  AND A.VOU_NO = B.VOU_NO
		 LEFT 
		OUTER 
		 JOIN ( 
		        SELECT ACNT_UNT
		             , ACNT_YY
		             , VOU_NO
		             , SUM(APLY_AMT) AS APLY_AMT
		             , COUNT(1) AS VOU_SEQ
		          FROM AC_VOU_DET WITH(NOLOCK)
		         GROUP BY ACNT_UNT, ACNT_YY, VOU_NO 
		      ) C
		   ON A.ACNT_UNT = C.ACNT_UNT
		  AND A.ACNT_YY = C.ACNT_YY
		  AND A.VOU_NO = C.VOU_NO
		 LEFT
		OUTER
		 JOIN AC_SLIP D WITH(NOLOCK)
		   ON A.ACNT_UNT = D.ACNT_UNT
		  AND A.ACNT_YY = D.ACNT_YY
		  AND A.SLIP_NO = D.SLIP_NO
		  AND A.VOU_NO = D.VOU_NO
		 LEFT
		OUTER
		 JOIN (SELECT A.ACNT_UNT
                 ,A.ACNT_YY
                 ,A.VOU_NO
                 ,E.PRE_EXP_YN
             FROM AC_BILL A WITH(NOLOCK)
             JOIN AC_BILL_EVDC E WITH(NOLOCK)
               ON A.ACNT_UNT = E.ACNT_UNT
              AND A.ACNT_YY = E.ACNT_YY
              AND A.VOU_NO = E.VOU_NO
              AND A.EVDC_SEQ = E.EVDC_SEQ) E
		   ON A.ACNT_UNT = E.ACNT_UNT
		  AND A.ACNT_YY = E.ACNT_YY
		  AND A.VOU_NO = E.VOU_NO
         LEFT
		OUTER
		 JOIN (SELECT A.ACNT_UNT
                 ,A.ACNT_YY
                 ,A.VOU_NO
                 ,F.EVDC_SEQ
                 ,F.PRE_EXP_YN
             FROM AC_INC A WITH(NOLOCK)
             JOIN AC_INC_EVDC F WITH(NOLOCK)
               ON A.ACNT_UNT = F.ACNT_UNT
              AND A.ACNT_YY = F.ACNT_YY
              AND A.VOU_NO = F.VOU_NO
              AND A.EVDC_SEQ = F.EVDC_SEQ) F
		   ON A.ACNT_UNT = F.ACNT_UNT
		  AND A.ACNT_YY = F.ACNT_YY
		  AND A.VOU_NO = F.VOU_NO 
		WHERE 1=1
		  AND A.ACNT_YY = #acntYy#
		  AND A.ACNT_UNT = #acntUnt#
				  
		<isNotEmpty property="vouOrgId">
		  AND A.VOU_ORG_ID = #vouOrgId#
		</isNotEmpty>
			   
		<isNotEmpty property="vouKnd">
		  AND A.VOU_KND = #vouKnd#
		</isNotEmpty>
		   
		<isNotEmpty property="staCd">
		  AND A.STA_CD = #staCd#
		</isNotEmpty>

		  	
		<isNotEmpty property="dtDiv">

			<isEqual property="dtDiv" compareValue="10">
		  		<isNotEmpty property="sttDt">
		  			AND A.APLY_DT &gt;= #sttDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="endDt">
		  			AND A.APLY_DT &lt;= #endDt# 
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userId">
		  			AND A.APLY_USER_ID = #userId# 
		  		</isNotEmpty>  		  	
		  		
		  		<isNotEmpty property="userNm">
		  			AND (    A.APLY_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(A.APLY_USER_ID, 'NM') LIKE '%' + #userNm# + '%' )
		  		</isNotEmpty>  	  		
		  	</isEqual>
			
			<isEqual property="dtDiv" compareValue="20">
		  		<isNotEmpty property="sttDt">
		  			AND A.CTRL_DT &gt;= #sttDt#
				</isNotEmpty>
				
				<isNotEmpty property="endDt">
		  			AND A.CTRL_DT &lt;= #endDt#
				</isNotEmpty>
				
				<isNotEmpty property="userId">
		  			AND A.CTRL_USER_ID = #userId#
				</isNotEmpty>
				
		  		<isNotEmpty property="userNm">
		  			AND (    A.CTRL_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(A.CTRL_USER_ID, 'NM') LIKE '%' + #userNm# + '%' )
		  		</isNotEmpty> 
		  	</isEqual>
		  	
		  	<isEqual property="dtDiv" compareValue="30">
		  		<isNotEmpty property="sttDt">
		  			AND A.APPRO_DT &gt;= #sttDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="endDt">
		  			AND A.APPRO_DT &lt;= #endDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userId">
		  			AND A.APPRO_USER_ID = #userId#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userNm">
		  			AND (    A.APPRO_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(A.APPRO_USER_ID, 'NM') LIKE '%' + #userNm# + '%' )
		  		</isNotEmpty> 
		  	</isEqual>
		  	
		  	<isEqual property="dtDiv" compareValue="40">
		  		<isNotEmpty property="sttDt">
		  			AND A.RECV_DT &gt;= #sttDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="endDt">
		  			AND A.RECV_DT &lt;= #endDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userId">
		  			AND A.RECV_USER_ID = #userId#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userNm">
		  			AND (    A.RECV_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(A.RECV_USER_ID, 'NM') LIKE '%' + #userNm# + '%' )
		  		</isNotEmpty> 
		  	</isEqual>
		  	
		  	<isEqual property="dtDiv" compareValue="50">
		  		<isNotEmpty property="sttDt">
		  			AND A.SLIP_CFM_DT &gt;= #sttDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="endDt">
		  			AND A.SLIP_CFM_DT &lt;= #endDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userId">
		  			AND A.SLIP_CFM_USER_ID = #userId#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userNm">
		  			AND (    A.SLIP_CFM_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(A.SLIP_CFM_USER_ID, 'NM') LIKE '%' + #userNm# + '%' )
		  		</isNotEmpty> 
		  	</isEqual>
		  	
		</isNotEmpty>
		
			   
		<isNotEmpty property="vouNo">
		  AND A.VOU_NO LIKE '%' + #vouNo# + '%'
		</isNotEmpty>
		   
		<isNotEmpty property="vouTtl">
		  AND A.VOU_TTL LIKE '%' + #vouTtl# + '%'
		</isNotEmpty>
		    		 
		 <isNotEmpty property="aplyAmtSt">
		  AND CONVERT(BIGINT, dbo.F_AC_GET_VOU_AMT_SUM(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO)) &gt;= #aplyAmtSt#
		</isNotEmpty>
		   
		<isNotEmpty property="aplyAmtEnd">
		  AND CONVERT(BIGINT, dbo.F_AC_GET_VOU_AMT_SUM(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO)) &lt;= #aplyAmtEnd#
		</isNotEmpty>
		
		<isEqual property="preExpCfmYn" compareValue="1">
		  AND A.PRE_EXP_YN = '1'
		  AND ISNULL(A.PRE_EXP_YN, '0') != '1'
		  AND A.STA_CD = '51'
		</isEqual>
				
     ORDER BY A.ACNT_YY, A.ACNT_UNT, A.VOU_NO DESC, A.STA_CD
  	 
    </select>
    
    
    <select id="ac02DAO.selectAc02010_excelMember"  parameterClass="java.util.HashMap" resultClass="egovMap">
		/* adcomDAO.selectAc02010_excelMember 엑셀업로드용 교직원 조회 */
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , MEMBER_NO
		     , NM
		     , DEPT_CD
		     , dbo.F_COM_DEPT_NM(DEPT_CD, 'DEPT_NM_KOR') AS DEPT_CD_NM
		     , HOFC_DIV
		     , dbo.F_COM_CODE_NM('CS006', HOFC_DIV, 'KOR') AS HOFC_DIV_NM
		     , RESI_CNTY
		     , dbo.F_COM_CODE_NM('CS004', RESI_CNTY, 'KOR') AS RESI_CNTY_NM
		     , ZIP_NO
		     , ADDR 
		     , ADDR_DET
		     , ADDR + ' ' + ADDR_DET AS ADDR_F
		     , JUMIN_NO
		  FROM VW_USER_LIST
		 WHERE 1=1
		   AND NM = #userNm#
		   AND MEMBER_NO = #userId#
    </select>
    
    
    <!--
    #########################################################################################################################################
    # 수입/여입결의서등록(admi/ac/ac02/ac02010_p01.xfdl)
    #########################################################################################################################################
    -->
    
    <select id="ac02DAO.selectAc02010p01_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '0' AS CHK
    	     , '' AS ROW_STATUS
		     , A.ACNT_YY
		     , A.ACNT_UNT
		     , A.VOU_NO
		     , A.ORIGY_VOU_NO
		     , A.VOU_ORG_ID
		     , A.VOU_KND
             , CASE WHEN dbo.F_COM_CODE_NM('AC001', A.VOU_KND, 'COM_CD_REF1') IS NULL THEN CASE WHEN dbo.F_AC_GET_VOU_KND(A.ACNT_UNT, A.ACNT_YY, A.ORIGY_VOU_NO) =  '11' THEN '10' ELSE '20' END
                                                                                  ELSE dbo.F_COM_CODE_NM('AC001', A.VOU_KND, 'COM_CD_REF1')
                                                                                  END
       
       		   AS BAL_DIV
             , CASE WHEN dbo.F_AC_GET_VOU_KND(A.ACNT_UNT, A.ACNT_YY, A.ORIGY_VOU_NO) = '11' THEN '20' ELSE '10' END AS DRCR_CD
		     , A.VOU_TTL
		     , A.DRAFT_DESC
		     , A.STA_CD
		     , A.APLY_USER_ID
		     , dbo.F_COM_USER_NM(A.APLY_USER_ID, 'NM') AS APLY_USER_ID_NM 
		     , A.APLY_DT
		     , A.APPRO_USER_ID
		     , dbo.F_COM_USER_NM(A.APPRO_USER_ID, 'NM') AS APPRO_USER_ID_NM
		     , A.APPRO_DT
		     , A.CTRL_USER_ID
		     , dbo.F_COM_USER_NM(A.CTRL_USER_ID, 'NM') AS CTRL_USER_ID_NM
		     , A.CTRL_DT
		     , A.SLIP_NO
		     , A.SLIP_CFM_DT
		     , A.RECV_USER_ID
		     , dbo.F_COM_USER_NM(A.RECV_USER_ID, 'NM') AS RECV_USER_ID_NM
		     , A.RECV_DT
		     , A.FILE_ID
		     , A.LINK_ID
		     , dbo.F_AC_GET_VOU_AMT_SUM(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO) AS APLY_AMT_SUM
		     , A.PRE_EXP_YN
		     , A.CALC_YN
		     , A.APPROVAL_DOCID
		     , A.RECV_ORG_ID
		     , A.ADDR_DEPT
		     , B.APLY_USER_ID AS SLIP_APLY_USER_ID
		     , B.APPROVAL_DOCID AS SLIP_APPROVAL_DOCID
		     , A.APPROVAL_DOCID2
		  FROM AC_VOU A WITH(NOLOCK)
		       LEFT OUTER JOIN AC_SLIP B
		        ON A.ACNT_YY = B.ACNT_YY
		        AND A.ACNT_UNT = B.ACNT_UNT
		        AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
    </select>
    
    <select id="ac02DAO.selectAc02010p01_01_link"  parameterClass="java.util.HashMap" resultClass="egovMap">
    		SELECT A.ACNT_YY
    		      ,A.ACNT_UNT
    		      ,A.VOU_NO
    		      ,A.VOU_ORG_ID
    		      ,A.STA_CD
    		  FROM AC_VOU A WITH(NOLOCK)
		 WHERE A.LINK_ID = #linkId#
    		 
    </select>
    
    <select id="ac02DAO.selectAc02010p01_02"  parameterClass="java.util.HashMap" resultClass="egovMap">
		
		SELECT A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , (
		        SELECT ACNT_UNT_NM
		          FROM BG_UNT
		         WHERE 1=1
		           AND ACNT_UNT = A.ACNT_UNT 
		       ) AS ACNT_UNT_NM
		     , A.VOU_NO AS VOU_NO 
		     , A.RCL_SEQ AS RCL_SEQ
		     , A.STA_CD AS STA_CD
		     , dbo.F_COM_CODE_NM('AC002', A.STA_CD, 'KOR') AS STA_CD_NM 
		     , A.RCL_RSN AS RCL_RSN
		     , A.RCL_USER_ID AS RCL_USER_ID
		     , dbo.F_COM_USER_NM(A.RCL_USER_ID, 'NM') AS RCL_USER_ID_NM
		     , A.RCL_DT AS RCL_DT
		  FROM AC_VOU_RCL A WITH(NOLOCK)
		 WHERE 1=1
		   AND A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
		 ORDER BY A.ACNT_YY, A.ACNT_UNT, A.VOU_NO, A.RCL_SEQ DESC
  	 
    </select>
    
    
    <select id="ac02DAO.selectAc02010p01_03"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT MIN(CASE A.TB_NAME WHEN 'AC_VOU_DET' THEN A.AC_VOU_DET_CNT
                                  END) AS AC_VOU_DET_CNT
		     , MIN(CASE A.TB_NAME WHEN 'AC_BILL_EVDC' THEN A.AC_VOU_DET_CNT
                                  END) AS AC_BILL_EVDC_CNT
		     , MIN(CASE A.TB_NAME WHEN 'AC_INC_EVDC' THEN A.AC_VOU_DET_CNT
		                          END) AS AC_INC_EVDC_CNT
		     , MIN(CASE A.TB_NAME WHEN 'AC_RCPT_DESC' THEN A.AC_VOU_DET_CNT
                       			  END) AS AC_RCPT_DESC_CNT
       		 , MIN(CASE A.TB_NAME WHEN 'AC_PYMT' THEN A.AC_VOU_DET_CNT
                                  END) AS AC_PYMT_CNT                    
		  FROM (
		  		SELECT 'AC_VOU_DET' AS TB_NAME 
		  		     , COUNT(VOU_SEQ) AS AC_VOU_DET_CNT
		          FROM AC_VOU_DET WITH(NOLOCK)
		         WHERE 1=1
		  		   AND ACNT_YY = #acntYy# 
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#
		        
		        UNION
		           
		        SELECT 'AC_BILL_EVDC' AS TB_NAME
		             , COUNT(EVDC_SEQ) AS AC_BILL_EVDC_CNT
		          FROM AC_BILL_EVDC  WITH(NOLOCK)
		         WHERE 1=1
		           AND ACNT_YY = #acntYy# 
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#
		        
		        UNION
		        
		        SELECT 'AC_INC_EVDC' AS TB_NAME
		             , COUNT(EVDC_SEQ) AS AC_INC_EVDC_CNT
		          FROM AC_INC_EVDC WITH(NOLOCK)
		         WHERE 1=1
		           AND ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#
		           
				UNION
		        
		        SELECT 'AC_INC_EVDC' AS TB_NAME
		             , COUNT(EVDC_SEQ) AS AC_INC_EVDC_CNT
		          FROM AC_INC_EVDC WITH(NOLOCK)
		         WHERE 1=1
		           AND ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#
		           
	            UNION
	            
				SELECT 'AC_RCPT_DESC' AS TB_NAME 
				     , COUNT(RCPT_SEQ) AS AC_RCPT_DESC
				  FROM AC_RCPT_DESC WITH(NOLOCK)
				 WHERE 1=1
				   AND ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#
				
				UNION
				  
				SELECT 'AC_PYMT' AS TB_NAME 
				     , COUNT(PYMT_SEQ) AS AC_PYMT
				  FROM AC_PYMT WITH(NOLOCK)
				 WHERE 1=1
	           	   AND ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#
				) A
			WHERE 1=1
    </select>
    
    
    
    <select id="ac02DAO.selectAc02010p01_04"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT COUNT(dbo.F_AC_GET_BIZ_NM(ACNT_UNT, BIZ_CD, 'BIZ_NM')) AS BIZ_CNT
		  FROM AC_VOU_DET WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_UNT = #acntUnt#
		   AND ACNT_YY = #acntYy#
		   AND VOU_NO = #vouNo#
    </select>
    

    
    <insert id="ac02DAO.insertAc02010p01_01" parameterClass="java.util.HashMap">
		INSERT INTO AC_VOU
					(
					  ACNT_YY
					, ACNT_UNT
					, VOU_NO
					, VOU_ORG_ID
					, VOU_KND
					, VOU_TTL
					, DRAFT_DESC
					, STA_CD
					, APLY_USER_ID
					, APLY_DT
					, APPRO_USER_ID
					, APPRO_DT
					, CTRL_USER_ID
					, CTRL_DT
					, SLIP_NO
					, SLIP_CFM_DT
					, RECV_USER_ID
					, RECV_DT
					, ORIGY_VOU_NO
					, PRE_EXP_YN
					, RECV_ORG_ID
					, ADDR_DEPT
					, INSERT_DT
					, INSERT_ID
					, INSERT_IP
					, INSERT_PGM		
					)
				VALUES
					(
					  #acntYy#
					, #acntUnt#
					, ( 
						SELECT ISNULL(MAX(CONVERT(BIGINT, VOU_NO)), #acntYy#+SUBSTRING(CONVERT(CHAR(10),GETDATE(),112),5,4)+'0000') + 1
  					      FROM AC_VOU WITH(NOLOCK)
 					     WHERE 1=1
   						   AND ACNT_YY = #acntYy#
   						   AND SUBSTRING(VOU_NO,1,8) =  CONVERT(CHAR(10),GETDATE(),112)
   					  )
					, #vouOrgId#
					, #vouKnd#
					, #vouTtl#
					, #draftDesc#
					, #staCd#
					, #aplyUserId#
					, #aplyDt#
					, #approUserId#
					, #approDt#
					, #ctrlUserId#
					, #ctrlDt#
					, #slipNo#
					, #slipCfmDt#
					, #recvUserId#
					, #recvDt#
					, #origyVouNo#
					, #preExpYn#
					, #recvOrgId#
					, #addrDept#
					, GETDATE()
					, #insertId#
					, #insertIp#
					, 'ac02010_p01.xfdl'
					)
	</insert>
	
	<update id="ac02DAO.updateAc02010p01_01" parameterClass="java.util.HashMap">
		UPDATE AC_VOU
		   SET VOU_ORG_ID = #vouOrgId#
			 , VOU_KND = #vouKnd#
			 , VOU_TTL = #vouTtl#
			 , DRAFT_DESC = #draftDesc#
			 , STA_CD = #staCd#
			 , APLY_USER_ID = #aplyUserId#
			 , APLY_DT = #aplyDt#
			 , APPRO_USER_ID = #approUserId#
			 , APPRO_DT = #approDt#
			 , CTRL_USER_ID = #ctrlUserId#
			 , CTRL_DT = #ctrlDt#
			 , SLIP_NO = #slipNo#
			 , SLIP_CFM_DT = #slipCfmDt#
			 , RECV_USER_ID = #recvUserId#
			 , RECV_DT = #recvDt#
			 , ORIGY_VOU_NO = #origyVouNo#
			 , PRE_EXP_YN = #preExpYn#
			 , RECV_ORG_ID = #recvOrgId#
			 , ADDR_DEPT  = #addrDept# 
			 , UPDATE_DT = GETDATE()
			 , UPDATE_ID = #updateId#
			 , UPDATE_IP = #updateIp#
			 , UPDATE_PGM = 'ac02010_p01.xfdl'
	     WHERE 1=1
	       AND ACNT_YY = #acntYy#
	       AND ACNT_UNT = #acntUnt#
	       AND VOU_NO = #vouNo#
	</update>
	
	<delete id="ac02DAO.deleteAc02010p01_01" parameterClass="java.util.HashMap">
		DELETE
		  FROM AC_VOU
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
	       AND ACNT_UNT = #acntUnt#
	       AND VOU_NO = #vouNo#
	</delete>
    
    <!--
    #########################################################################################################################################
    # 수입/여입결의서등록(admi/ac/ac02/ac02010_p01.xfdl)
    #########################################################################################################################################
    -->
    
    <parameterMap id="saveVouNoSp_param" class="java.util.HashMap">
        
        <parameter property="acntYy" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="acntUnt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="vouOrgId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="vouKnd" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="vouTtl" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="draftDesc" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="staCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="aplyUserId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="aplyDt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="approUserId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="approDt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="ctrlUserId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="ctrlDt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="slipNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="slipCfmDt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="recvUserId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="recvDt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="fileId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="linkId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="origyVouNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="preExpYn" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="recvOrgId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="addrDept" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="insertId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="insertIp" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="insertPgms" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="OUT_RTN" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
        <parameter property="OUT_ACNT_YY" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
        <parameter property="OUT_ACNT_UNT" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
        <parameter property="OUT_VOU_NO" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.saveVouNoSp" parameterMap = "saveVouNoSp_param"> 
           {call dbo.SP_AC_CREATE_VOU_NO(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)}              
    </procedure>
    
	
	 <!--
    #########################################################################################################################################
    # 수입/여입 TAB 계정내역 (admi/ac/ac02/ac02010_p01_t01.xfdl)
    #########################################################################################################################################
    -->
    
    <!-- 계정내역 조회 -->
    <select id="ac02DAO.selectAc02010p01_t01_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		/* ac02DAO.selectAc02010p01_t01_01 계정내역 조회 */	
			SELECT '' AS CHK
			     , '' AS ROW_STATUS
			     , AVD.ACNT_YY AS ACNT_YY
			     , AVD.ACNT_UNT AS ACNT_UNT
			     , AVD.VOU_NO AS VOU_NO
			     , AVD.VOU_SEQ AS VOU_SEQ
			     , AVD.BUDG_ORG_ID AS BUDG_ORG_ID
			     , dbo.F_COM_DEPT_NM(AVD.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
			     , AVD.BIZ_CD
			     , dbo.F_AC_GET_BIZ_NM(AVD.ACNT_UNT, AVD.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
			     , dbo.F_AC_GET_ACNT_INFO(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.ACNT_CD, '40', '') AS ACNT_CD_MOK_NM
			     , AVD.ACNT_CD
			     , dbo.F_AC_GET_ACNT_INFO(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.ACNT_CD, '', CASE WHEN AVD.BAL_DIV = '10' THEN 'ACNT_INC_NM' ELSE 'ACNT_EXP_NM' END) AS ACNT_CD_NM
			     , AVD.BAL_DIV
			     , AVD.DRCR_CD
			     , AVD.FINC_CD
			     , dbo.F_AC_GET_BIZ_NM(AVD.ACNT_UNT, AVD.BIZ_CD, 'FINC_NM') AS FINC_CD_NM
			     , AVD.ACNT_NO
			     , ABS(AVD.APLY_AMT) AS APLY_AMT
			     , dbo.F_AC_ASGN_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, '') AS ASGN_AMT_SUM
			     , dbo.F_AC_EXEC_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, '') AS EXEC_AMT_SUM
			     , (dbo.F_AC_ASGN_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''))
					-
				   (dbo.F_AC_EXEC_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, '')) AS BUDG_BAL
			     , AVD.CFM_AMT
			     , AVD.USE_ORG_ID
			     , dbo.F_COM_DEPT_NM(AVD.USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
	             , AV.PRE_EXP_YN
	             , BAC.USAGE_CD
	             , AV.SLIP_NO
			  FROM AC_VOU_DET AVD WITH(NOLOCK)
	               INNER JOIN AC_VOU AV WITH(NOLOCK)
	                ON AVD.ACNT_YY  = AV.ACNT_YY
		           AND AVD.ACNT_UNT = AV.ACNT_UNT
		           AND AVD.VOU_NO   = AV.VOU_NO
		           INNER JOIN BG_ACNT_CD BAC WITH(NOLOCK)
		            ON AVD.ACNT_YY = BAC.ACNT_YY
		            AND AVD.ACNT_UNT = BAC.ACNT_UNT
		            AND AVD.ACNT_CD = BAC.ACNT_CD
			 WHERE AVD.ACNT_YY = #acntYy#
			   AND AVD.ACNT_UNT = #acntUnt#
			   AND AVD.VOU_NO = #vouNo#
			 ORDER BY AVD.ACNT_YY, AVD.ACNT_UNT, AVD.VOU_NO, AVD.VOU_SEQ
    </select> 
    
    <!-- 계정내역(전자결재용) 조회 -->
    <select id="ac02DAO.selectAc02010p01_t01_01(elec)"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , AVD.ACNT_YY AS ACNT_YY
		     , AVD.ACNT_UNT AS ACNT_UNT
		     , ( SELECT ACNT_UNT_NM FROM BG_UNT WHERE ACNT_UNT = AVD.ACNT_UNT) AS ACNT_UNT_NM
		     , SUBSTRING(AVD.VOU_NO,1,8) + '-' + SUBSTRING(AVD.VOU_NO,9,4) AS VOU_NO
		     , AVD.VOU_SEQ AS VOU_SEQ
		     , AVD.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(AVD.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , AVD.BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(AVD.ACNT_UNT, AVD.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , dbo.F_AC_GET_ACNT_INFO(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.ACNT_CD, '20', CASE WHEN AVD.BAL_DIV = '10' THEN 'ACNT_INC_NM' 
		                                                                               WHEN AVD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                               ELSE 'ACNT_NM' END) AS ACNT_NM1
		     , dbo.F_AC_GET_ACNT_INFO(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.ACNT_CD, '30', CASE WHEN AVD.BAL_DIV = '10' THEN 'ACNT_INC_NM' 
		                                                                               WHEN AVD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                               ELSE 'ACNT_NM' END) AS ACNT_NM2
		     , dbo.F_AC_GET_ACNT_INFO(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.ACNT_CD, '40', CASE WHEN AVD.BAL_DIV = '10' THEN 'ACNT_INC_NM' 
		                                                                               WHEN AVD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                               ELSE 'ACNT_NM' END) AS ACNT_NM3
		     , dbo.F_AC_GET_ACNT_INFO(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.ACNT_CD, '40', CASE WHEN AVD.BAL_DIV = '10' THEN 'ACNT_INC_NM' 
		                                                                               WHEN AVD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                               ELSE 'ACNT_NM' END) AS ACNT_CD_MOK_NM
		     , AVD.ACNT_CD
		     , dbo.F_AC_GET_ACNT_INFO(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.ACNT_CD, '', CASE WHEN AVD.BAL_DIV = '10' THEN 'ACNT_INC_NM' 
		                                                                               WHEN AVD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                               ELSE 'ACNT_NM' END) AS ACNT_CD_NM
		     , AVD.BAL_DIV
		     , AVD.DRCR_CD
		     ,(SELECT dbo.F_COM_CODE_NM('BG003', AVD.DRCR_CD, 'KOR')) AS DRCR_NM
		     , AVD.FINC_CD
		     , dbo.F_AC_GET_BIZ_NM(AVD.ACNT_UNT, AVD.BIZ_CD, 'FINC_NM') AS FINC_CD_NM
		     , AVD.ACNT_NO
		     , AV.VOU_KND
	         , REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(AVD.APLY_AMT,0)), 1), '.00', '') AS APLY_AMT
             , REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(dbo.F_AC_ASGN_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''),0)), 1), '.00', '') AS BUDG_AMT1
		     , REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(dbo.F_AC_EXEC_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, '')+ISNULL(AVD.APLY_AMT,0),0)), 1), '.00', '') AS BUDG_AMT2
		     , CASE WHEN ISNULL(dbo.F_AC_ASGN_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''),0) = 0 THEN '0' ELSE REPLACE(CONVERT(varchar, CONVERT(money, (ISNULL(dbo.F_AC_ASGN_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''),0))
                        	-ISNULL(dbo.F_AC_EXEC_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''),0)
                        	-ISNULL(AVD.APLY_AMT,0)), 1), '.00', '') END AS BUDG_AMT3
		     , REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(AVD.APLY_AMT,0)), 1), '.00', '') AS BUDG_AMT4
             , CASE WHEN ISNULL(dbo.F_AC_ASGN_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''),0) = 0 THEN '0' ELSE REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(dbo.F_AC_EXEC_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, '')-ISNULL(AVD.APLY_AMT,0),0)), 1), '.00', '') END AS BUDG_AMT5
             , REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(dbo.F_AC_EXEC_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''),0)), 1), '.00', '') AS BUDG_AMT6
		     , REPLACE(CONVERT(varchar, CONVERT(money, (ISNULL(dbo.F_AC_ASGN_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''),0))
                        	-ISNULL(dbo.F_AC_EXEC_AMT_SUM(AVD.ACNT_YY, AVD.ACNT_UNT, AVD.BUDG_ORG_ID, AVD.BIZ_CD, AVD.ACNT_CD, AVD.BAL_DIV, ''),0)), 1), '.00', '') AS BUDG_AMT7
		     , REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(AVD.APLY_AMT,0)), 1), '.00', '') AS CFM_AMT
		     , AVD.USE_ORG_ID
		     , dbo.F_COM_DEPT_NM(AVD.USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
             , AV.VOU_TTL
             , AV.DRAFT_DESC
             , (SELECT ACNT_UNT_NM FROM BG_UNT WHERE ACNT_UNT = AVD.ACNT_UNT) AS ACNT_UNT_NM
             , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, SUM(ABS(AVD.APLY_AMT)) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO)), 1), '.00', ''),'') AS APLY_AMT_TOT
             , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, SUM(AVD.APLY_AMT) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO)), 1), '.00', ''),'') AS APLY_AMT_TOT3
             , dbo.FN_NUM2HAN(SUM(ABS(AVD.APLY_AMT)) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO)) AS APLY_AMT_TOT_HAN
             , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, CASE WHEN AV.ELEC_AMT IS NOT NULL AND AV.ELEC_AMT != 0 THEN AV.ELEC_AMT
                                                                   ELSE SUM(ABS(AVD.APLY_AMT)) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO) END), 1), '.00', ''),'') AS APLY_AMT_TOT2
             , dbo.FN_NUM2HAN(CASE WHEN AV.ELEC_AMT IS NOT NULL AND AV.ELEC_AMT != 0 THEN AV.ELEC_AMT
                                   ELSE SUM(ABS(AVD.APLY_AMT)) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO) END) AS APLY_AMT_TOT_HAN2
             , AV.APLY_DT
             , SUBSTRING(AV.VOU_NO,1,4)+CASE WHEN AV.VOU_NO IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(AV.VOU_NO,5,2)+CASE WHEN AV.VOU_NO IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(AV.VOU_NO,7,2) AS APLY_DT1
             , SUBSTRING(AV.RECV_DT,1,4)+CASE WHEN AV.RECV_DT IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(AV.RECV_DT,5,2)+CASE WHEN AV.RECV_DT IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(AV.RECV_DT,7,2) AS RECV_DT
             , CASE AVD.BAL_DIV WHEN '10' THEN '수입처' ELSE '영수란' END sub_title1
             , CASE WHEN AV.VOU_KND IN ('11','22') THEN '입 금 전 표'
                    WHEN AV.VOU_KND IN ('21','12') THEN '출 금 전 표'
                    WHEN AV.VOU_KND IN ('31','32','33') THEN '대 체 전 표'
                    ELSE ''
                    END AS sub_title2
             , '전기' AS date_gb    
             , SUBSTRING(AV.PROMISE_DT,1,4)+CASE WHEN AV.PROMISE_DT IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(AV.PROMISE_DT,5,2)+CASE WHEN AV.PROMISE_DT IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(AV.PROMISE_DT,7,2) AS PROMISE_DT
             , REPLACE(REPLACE(REPLACE(REPLACE(ASL.SD_VENDOR_DESC, ' ', <![CDATA['&nbsp;']]>),<![CDATA['<']]>, '&lt;'), <![CDATA['>']]>, '&gt;'),CHAR(10), <![CDATA['<br>']]>) AS SD_VENDOR_DESC
             , CASE WHEN AV.APPROVAL_DOCNO2 IS NOT NULL AND AV.APPROVAL_DOCNO2 != '' THEN '* 기안 공문번호 : ' + AV.APPROVAL_DOCNO2 ELSE '' END AS APPROVAL_DOCNO2
             , CASE WHEN ASL.JUKYO IS NULL OR ASL.JUKYO = '' THEN AV.VOU_TTL ELSE REPLACE(REPLACE(REPLACE(REPLACE(ASL.JUKYO, ' ', <![CDATA['&nbsp;']]>),<![CDATA['<']]>, '&lt;'),<![CDATA['>']]>,'&gt;'),CHAR(10),<![CDATA['<br>']]>) END AS JUKYO
             , ( SELECT STUFF((SELECT ',' + dbo.F_AC_GET_BIZ_NM(RAVD.ACNT_UNT, RAVD.BIZ_CD, 'BIZ_NM')
				  FROM AC_VOU_DET RAVD
				 WHERE RAVD.ACNT_UNT = AVD.ACNT_UNT
				   AND RAVD.ACNT_YY = AVD.ACNT_YY
				   AND RAVD.VOU_NO = AVD.VOU_NO
				   AND RAVD.BIZ_CD IS NOT NULL
				   AND RAVD.BIZ_CD != ''
				 ORDER BY RAVD.VOU_SEQ
				  FOR XML PATH('')),1,1,'')) AS BIZ_NM_TOT
			 , ISNULL(( SELECT SUM(ISNULL(SLIP_AMT, 0))
			       FROM AC_SLIP_DET ASD
			      WHERE ASL.ACNT_UNT = ASD.ACNT_UNT
			        AND ASL.ACNT_YY = ASD.ACNT_YY
			        AND ASL.SLIP_NO = ASD.SLIP_NO
			        AND ASD.DRCR_CD = '10'  ), 0) AS CR_SUM
			 , ISNULL(( SELECT SUM(ISNULL(SLIP_AMT, 0))
			       FROM AC_SLIP_DET ASD
			      WHERE ASL.ACNT_UNT = ASD.ACNT_UNT
			        AND ASL.ACNT_YY = ASD.ACNT_YY
			        AND ASL.SLIP_NO = ASD.SLIP_NO
			        AND ASD.DRCR_CD = '20'  ), 0) AS DR_SUM
		  FROM AC_VOU_DET AVD WITH(NOLOCK)
		       INNER JOIN AC_VOU AV WITH(NOLOCK)
		         ON AVD.ACNT_UNT = AV.ACNT_UNT
			       AND AVD.ACNT_YY = AV.ACNT_YY
			       AND AVD.VOU_NO = AV.VOU_NO 
			   LEFT OUTER JOIN AC_SLIP ASL WITH(NOLOCK)
			     ON AV.ACNT_UNT = ASL.ACNT_UNT
			       AND AV.ACNT_YY = ASL.ACNT_YY
			       AND AV.SLIP_NO = ASL.SLIP_NO
		 WHERE AVD.ACNT_YY = #acntYy#
		   AND AVD.ACNT_UNT = #acntUnt#
		   AND AVD.VOU_NO = #vouNo#
		   AND (  ( AVD.BIZ_CD IS NOT NULL AND AVD.BIZ_CD != '' AND AVD.BAL_DIV IS NOT NULL AND AVD.BAL_DIV != '' )
		        OR AVD.ACNT_CD LIKE '112%'
		        OR AVD.ACNT_CD LIKE '21%' )
		 ORDER BY AVD.ACNT_YY, AVD.ACNT_UNT, AVD.VOU_NO, AVD.VOU_SEQ
    </select> 
    
    <select id="ac02DAO.selectAc02010p01_t01_01(elec2)"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT TOP 1 '' AS CHK
		     , '' AS ROW_STATUS
		     , AVD.ACNT_YY AS ACNT_YY
		     , AVD.ACNT_UNT AS ACNT_UNT
		     , ( SELECT ACNT_UNT_NM FROM BG_UNT WHERE ACNT_UNT = AVD.ACNT_UNT) AS ACNT_UNT_NM
		     , SUBSTRING(AVD.VOU_NO,1,8) + '-' + SUBSTRING(AVD.VOU_NO,9,4) AS VOU_NO
		     , AVD.VOU_SEQ AS VOU_SEQ
		     , AVD.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(AVD.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , '' BIZ_CD
		     , '' AS BIZ_CD_NM
		     , '' AS ACNT_NM1
		     , '' AS ACNT_NM2
		     , '' AS ACNT_NM3
		     , '' AS ACNT_CD_MOK_NM
		     , '' AS ACNT_CD
		     , '' AS ACNT_CD_NM
		     , '' AS BAL_DIV
		     , '' AS DRCR_CD
		     , '' AS DRCR_NM
		     , '' AS FINC_CD
		     , '' AS FINC_CD_NM
		     , '' AS ACNT_NO
		     , '' AS VOU_KND
	         , NULL AS APLY_AMT
             , NULL AS BUDG_AMT1
		     , NULL AS BUDG_AMT2
		     , NULL AS BUDG_AMT3
		     , NULL AS BUDG_AMT4
             , NULL AS BUDG_AMT5
             , NULL AS BUDG_AMT6
		     , NULL AS BUDG_AMT7
		     , NULL AS CFM_AMT
		     , AVD.USE_ORG_ID
		     , dbo.F_COM_DEPT_NM(AVD.USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
             , AV.VOU_TTL
             , AV.DRAFT_DESC
             , '' AS ACNT_UNT_NM
             , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, SUM(ABS(AVD.APLY_AMT)) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO)), 1), '.00', ''),'') AS APLY_AMT_TOT
             , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, SUM(AVD.APLY_AMT) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO)), 1), '.00', ''),'') AS APLY_AMT_TOT3
             , dbo.FN_NUM2HAN(SUM(ABS(AVD.APLY_AMT)) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO)) AS APLY_AMT_TOT_HAN
             , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, CASE WHEN AV.ELEC_AMT IS NOT NULL AND AV.ELEC_AMT != 0 THEN AV.ELEC_AMT
                                                                   ELSE SUM(ABS(AVD.APLY_AMT)) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO) END), 1), '.00', ''),'') AS APLY_AMT_TOT2
             , dbo.FN_NUM2HAN(CASE WHEN AV.ELEC_AMT IS NOT NULL AND AV.ELEC_AMT != 0 THEN AV.ELEC_AMT
                                   ELSE SUM(ABS(AVD.APLY_AMT)) OVER(PARTITION BY AVD.ACNT_YY,AVD.ACNT_UNT,AVD.VOU_NO) END) AS APLY_AMT_TOT_HAN2
             , AV.APLY_DT
             , SUBSTRING(AV.VOU_NO,1,4)+CASE WHEN AV.VOU_NO IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(AV.VOU_NO,5,2)+CASE WHEN AV.VOU_NO IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(AV.VOU_NO,7,2) AS APLY_DT1
             , SUBSTRING(AV.RECV_DT,1,4)+CASE WHEN AV.RECV_DT IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(AV.RECV_DT,5,2)+CASE WHEN AV.RECV_DT IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(AV.RECV_DT,7,2) AS RECV_DT
             , CASE AVD.BAL_DIV WHEN '10' THEN '수입처' ELSE '영수란' END sub_title1
             , CASE WHEN AV.VOU_KND IN ('11','22') THEN '입 금 전 표'
                    WHEN AV.VOU_KND IN ('21','12') THEN '출 금 전 표'
                    WHEN AV.VOU_KND IN ('31','32','33') THEN '대 체 전 표'
                    ELSE ''
                    END AS sub_title2
             , '전기' AS date_gb    
             , SUBSTRING(AV.PROMISE_DT,1,4)+CASE WHEN AV.PROMISE_DT IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(AV.PROMISE_DT,5,2)+CASE WHEN AV.PROMISE_DT IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(AV.PROMISE_DT,7,2) AS PROMISE_DT
             , REPLACE(REPLACE(REPLACE(REPLACE(ASL.SD_VENDOR_DESC, ' ', <![CDATA['&nbsp;']]>),<![CDATA['<']]>, '&lt;'), <![CDATA['>']]>, '&gt;'),CHAR(10), <![CDATA['<br>']]>) AS SD_VENDOR_DESC
             , CASE WHEN AV.APPROVAL_DOCNO2 IS NOT NULL AND AV.APPROVAL_DOCNO2 != '' THEN '* 기안 공문번호 : ' + AV.APPROVAL_DOCNO2 ELSE '' END AS APPROVAL_DOCNO2
             , CASE WHEN ASL.JUKYO IS NULL OR ASL.JUKYO = '' THEN AV.VOU_TTL ELSE REPLACE(REPLACE(REPLACE(REPLACE(ASL.JUKYO, ' ', <![CDATA['&nbsp;']]>),<![CDATA['<']]>, '&lt;'),<![CDATA['>']]>,'&gt;'),CHAR(10),<![CDATA['<br>']]>) END AS JUKYO
             , ( SELECT STUFF((SELECT ',' + dbo.F_AC_GET_BIZ_NM(RAVD.ACNT_UNT, RAVD.BIZ_CD, 'BIZ_NM')
				  FROM AC_VOU_DET RAVD
				 WHERE RAVD.ACNT_UNT = AVD.ACNT_UNT
				   AND RAVD.ACNT_YY = AVD.ACNT_YY
				   AND RAVD.VOU_NO = AVD.VOU_NO
				   AND RAVD.BIZ_CD IS NOT NULL
				   AND RAVD.BIZ_CD != ''
				 ORDER BY RAVD.VOU_SEQ
				  FOR XML PATH('')),1,1,'')) AS BIZ_NM_TOT
			 , ISNULL(( SELECT SUM(ISNULL(SLIP_AMT, 0))
			       FROM AC_SLIP_DET ASD
			      WHERE ASL.ACNT_UNT = ASD.ACNT_UNT
			        AND ASL.ACNT_YY = ASD.ACNT_YY
			        AND ASL.SLIP_NO = ASD.SLIP_NO
			        AND ASD.DRCR_CD = '10'  ), 0) AS CR_SUM
			 , ISNULL(( SELECT SUM(ISNULL(SLIP_AMT, 0))
			       FROM AC_SLIP_DET ASD
			      WHERE ASL.ACNT_UNT = ASD.ACNT_UNT
			        AND ASL.ACNT_YY = ASD.ACNT_YY
			        AND ASL.SLIP_NO = ASD.SLIP_NO
			        AND ASD.DRCR_CD = '20'  ), 0) AS DR_SUM
		  FROM AC_VOU_DET AVD WITH(NOLOCK)
		       INNER JOIN AC_VOU AV WITH(NOLOCK)
		         ON AVD.ACNT_UNT = AV.ACNT_UNT
			       AND AVD.ACNT_YY = AV.ACNT_YY
			       AND AVD.VOU_NO = AV.VOU_NO 
			   LEFT OUTER JOIN AC_SLIP ASL WITH(NOLOCK)
			     ON AV.ACNT_UNT = ASL.ACNT_UNT
			       AND AV.ACNT_YY = ASL.ACNT_YY
			       AND AV.SLIP_NO = ASL.SLIP_NO
		 WHERE AVD.ACNT_YY = #acntYy#
		   AND AVD.ACNT_UNT = #acntUnt#
		   AND AVD.VOU_NO = #vouNo#
		 ORDER BY AVD.ACNT_YY, AVD.ACNT_UNT, AVD.VOU_NO, AVD.VOU_SEQ
    </select> 
    
    <!-- 계정내역(전자결재용) 조회 -->
    <select id="ac02DAO.selectAc02010p01_t01_01(elec32)"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , CASE WHEN AVD.DRCR_CD = '10' THEN '입금' ELSE '출금' END DRCR_CD_NM
		     , AVD.ACNT_NO
	         , REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(AVD.APLY_AMT,0)), 1), '.00', '') AS APLY_AMT 
		  FROM AC_VOU_DET AVD WITH(NOLOCK)
		       INNER JOIN AC_VOU AV WITH(NOLOCK)
		         ON AVD.ACNT_UNT = AV.ACNT_UNT
			       AND AVD.ACNT_YY = AV.ACNT_YY
			       AND AVD.VOU_NO = AV.VOU_NO
		 WHERE AVD.ACNT_YY = #acntYy#
		   AND AVD.ACNT_UNT = #acntUnt#
		   AND AVD.VOU_NO = #vouNo#
		 ORDER BY AVD.ACNT_YY, AVD.ACNT_UNT, AVD.VOU_NO, AVD.VOU_SEQ
    </select> 
    
    <!-- 계정내역(전자결재용) 조회 -->
    <select id="ac02DAO.selectAc02010p01_t01_01_puch(elec)"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , ASD.ACNT_YY AS ACNT_YY
		     , ASD.ACNT_UNT AS ACNT_UNT
		     , ASD.SLIP_NO AS SLIP_NO
		     , ASD.SLIP_SEQ AS VOU_SEQ
		     , ASD.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(ASD.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , ASD.BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(ASD.ACNT_UNT, ASD.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , dbo.F_AC_GET_ACNT_INFO(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.ACNT_CD, '20', CASE WHEN ASD.BAL_DIV = '10' THEN 'ACNT_INC_NM'
		                                                                                 WHEN ASD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                                 ELSE 'ACNT_NM' END) AS ACNT_NM1
		     , dbo.F_AC_GET_ACNT_INFO(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.ACNT_CD, '30', CASE WHEN ASD.BAL_DIV = '10' THEN 'ACNT_INC_NM'
		                                                                                 WHEN ASD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                                 ELSE 'ACNT_NM' END) AS ACNT_NM2
		     , dbo.F_AC_GET_ACNT_INFO(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.ACNT_CD, '40', CASE WHEN ASD.BAL_DIV = '10' THEN 'ACNT_INC_NM'
		                                                                                 WHEN ASD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                                 ELSE 'ACNT_NM' END) AS ACNT_NM3
		     , dbo.F_AC_GET_ACNT_INFO(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.ACNT_CD, '40', CASE WHEN ASD.BAL_DIV = '10' THEN 'ACNT_INC_NM'
		                                                                                 WHEN ASD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                                 ELSE 'ACNT_NM' END) AS ACNT_CD_MOK_NM
		     , ASD.ACNT_CD
		     , dbo.F_AC_GET_ACNT_INFO(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.ACNT_CD, '', CASE WHEN ASD.BAL_DIV = '10' THEN 'ACNT_INC_NM'
		                                                                                 WHEN ASD.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		                                                                                 ELSE 'ACNT_NM' END ) AS ACNT_CD_NM
		     , ASD.BAL_DIV AS BAL_DIV
		     , ASD.DRCR_CD
		     , ASD.FINC_CD
		     , dbo.F_AC_GET_BIZ_NM(ASD.ACNT_UNT, ASD.BIZ_CD, 'FINC_NM') AS FINC_CD_NM
		     , ASD.ACNT_NO
		     , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, ASD.SLIP_AMT), 1), '.00', ''), '') AS SLIP_AMT
		     , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, ISNULL(dbo.F_AC_ASGN_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, ''),0)), 1), '.00', ''), '') AS BUDG_AMT1
		     , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, dbo.F_AC_EXEC_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, '')+ASD.SLIP_AMT), 1), '.00', ''), '') AS BUDG_AMT2 
		     , CASE WHEN ISNULL(dbo.F_AC_ASGN_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, ''), 0) = 0 THEN '0' ELSE ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, (ISNULL(dbo.F_AC_ASGN_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, ''),0))
				-
			   (dbo.F_AC_EXEC_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, '')+ASD.SLIP_AMT)), 1), '.00', ''), '') END AS BUDG_AMT3 
		     , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, ASD.SLIP_AMT), 1), '.00', ''), '') AS BUDG_AMT4
		     , CASE WHEN ISNULL(dbo.F_AC_ASGN_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, ''), 0) = 0 THEN '0' ELSE ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, dbo.F_AC_EXEC_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, '')-ASD.SLIP_AMT), 1), '.00', ''), '') END AS BUDG_AMT5
		     , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, dbo.F_AC_EXEC_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, '')), 1), '.00', ''), '') AS BUDG_AMT6
		     , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, (ISNULL(dbo.F_AC_ASGN_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, ''),0))
				-
			   (dbo.F_AC_EXEC_AMT_SUM(ASD.ACNT_YY, ASD.ACNT_UNT, ASD.BUDG_ORG_ID, ASD.BIZ_CD, ASD.ACNT_CD, ASD.BAL_DIV, ''))), 1), '.00', ''), '') AS BUDG_AMT7
		     , 0 AS CFM_AMT
		     , '' AS USE_ORG_ID
		     , '' AS  USE_ORG_ID_NM
             , ASL.SLIP_DESC AS VOU_TTL
             , ASL.SLIP_DESC AS DRAFT_DESC
             , (SELECT ACNT_UNT_NM FROM BG_UNT WHERE ACNT_UNT = ASD.ACNT_UNT) AS ACNT_UNT_NM
             , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, SUM(ABS(ASD.SLIP_AMT)) OVER(PARTITION BY ASD.ACNT_YY,ASD.ACNT_UNT,ASD.SLIP_NO)), 1), '.00', ''), '') AS APLY_AMT_TOT
             , dbo.FN_NUM2HAN(SUM(ABS(ASD.SLIP_AMT)) OVER(PARTITION BY ASD.ACNT_YY,ASD.ACNT_UNT,ASD.SLIP_NO)) AS APLY_AMT_TOT_HAN
             , ISNULL(REPLACE(CONVERT(varchar, CONVERT(money, CASE WHEN AV.ELEC_AMT IS NOT NULL AND AV.ELEC_AMT != 0 THEN AV.ELEC_AMT
                                                              ELSE SUM(ABS(ASD.SLIP_AMT)) OVER(PARTITION BY ASD.ACNT_YY,ASD.ACNT_UNT,ASD.SLIP_NO) END), 1), '.00', ''), '') AS APLY_AMT_TOT2
             , dbo.FN_NUM2HAN(CASE WHEN AV.ELEC_AMT IS NOT NULL AND AV.ELEC_AMT != 0 THEN AV.ELEC_AMT
                                   ELSE SUM(ABS(ASD.SLIP_AMT)) OVER(PARTITION BY ASD.ACNT_YY,ASD.ACNT_UNT,ASD.SLIP_NO) END) AS APLY_AMT_TOT_HAN2
             , ASL.APLY_DT
             , SUBSTRING(AV.VOU_NO,1,4)+CASE WHEN AV.VOU_NO IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(AV.VOU_NO,5,2)+CASE WHEN AV.VOU_NO IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(AV.VOU_NO,7,2) AS APLY_DT1
             , SUBSTRING(ASL.RECV_DT,1,4)+CASE WHEN ASL.RECV_DT IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(ASL.RECV_DT,5,2)+CASE WHEN ASL.RECV_DT IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(ASL.RECV_DT,7,2) AS RECV_DT
             , '영수란' AS sub_title1
             , '출 금 전 표' AS sub_title2
             , '전기' AS date_gb
             , SUBSTRING(AV.PROMISE_DT,1,4)+CASE WHEN AV.PROMISE_DT IS NOT NULL THEN '.' ELSE '' END+SUBSTRING(AV.PROMISE_DT,5,2)+CASE WHEN AV.PROMISE_DT IS NOT NULL THEN '.' ELSE '' END +SUBSTRING(AV.PROMISE_DT,7,2) AS PROMISE_DT
             , REPLACE(REPLACE(ASL.SD_VENDOR_DESC, ' ', <![CDATA['&nbsp;']]>),CHAR(10),<![CDATA['<br>']]>) AS SD_VENDOR_DESC
             , SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112),1,4) + '.' +  SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112),5,2) + '.' + SUBSTRING(CONVERT(VARCHAR, GETDATE(), 112),7,2) AS ELEC_APLY_DT
             , CASE WHEN AV.APPROVAL_DOCNO2 IS NOT NULL AND AV.APPROVAL_DOCNO2 != '' THEN '* 기안 공문번호 : ' + AV.APPROVAL_DOCNO2 ELSE '' END AS APPROVAL_DOCNO2
             , CASE WHEN ASL.JUKYO IS NULL OR ASL.JUKYO = '' THEN ASL.SLIP_DESC ELSE REPLACE(REPLACE(ASL.JUKYO, ' ', <![CDATA['&nbsp;']]>),CHAR(10),<![CDATA['<br>']]>) END AS JUKYO
			 , ISNULL(( SELECT SUM(ISNULL(RASD.SLIP_AMT, 0))
			       FROM AC_SLIP_DET RASD
			      WHERE ASL.ACNT_UNT = RASD.ACNT_UNT
			        AND ASL.ACNT_YY = RASD.ACNT_YY
			        AND ASL.SLIP_NO = RASD.SLIP_NO
			        AND RASD.DRCR_CD = '10'  ), 0) AS CR_SUM
			 , ISNULL(( SELECT SUM(ISNULL(RASD.SLIP_AMT, 0))
			       FROM AC_SLIP_DET RASD
			      WHERE ASL.ACNT_UNT = RASD.ACNT_UNT
			        AND ASL.ACNT_YY = RASD.ACNT_YY
			        AND ASL.SLIP_NO = RASD.SLIP_NO
			        AND RASD.DRCR_CD = '20'  ), 0) AS DR_SUM
		  FROM AC_SLIP_DET ASD WITH(NOLOCK)
		      INNER JOIN AC_SLIP ASL WITH(NOLOCK)
		         ON ASD.ACNT_UNT = ASL.ACNT_UNT
			       AND ASD.ACNT_YY = ASL.ACNT_YY
			       AND ASD.SLIP_NO  = ASL.SLIP_NO
		      INNER JOIN AC_VOU AV WITH(NOLOCK)
		         ON ASL.ACNT_UNT = AV.ACNT_UNT
			       AND ASL.ACNT_YY = AV.ACNT_YY
			       AND ASL.VOU_NO = AV.VOU_NO 
		 WHERE ASD.ACNT_YY   = #acntYy#
		   AND ASD.ACNT_UNT  = #acntUnt#
		   AND ASD.SLIP_NO   = #slipNo#
		   AND ASD.AUTO_YN IS NULL
		   AND (  ( ASD.BIZ_CD IS NOT NULL AND ASD.BIZ_CD != '' AND ASD.BAL_DIV IS NOT NULL AND ASD.BAL_DIV != '' )
		        OR ASD.ACNT_CD LIKE '112%'
		        OR ASD.ACNT_CD LIKE '21%' )
		 ORDER BY ASD.ACNT_YY, ASD.ACNT_UNT, ASD.SLIP_NO, ASD.SLIP_SEQ
    </select> 

    <update id="ac02DAO.insertAc02020_purc" parameterClass="java.util.HashMap">

    	BEGIN
	    	
	    	DECLARE @VOU_SEQ NUMERIC(5,0);
	    	
				SELECT @VOU_SEQ = ISNULL(MAX(CONVERT(INT, VOU_SEQ)), 0) + 1
		   		  FROM AC_VOU_DET WITH(NOLOCK)
		  		 WHERE ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		    	   AND VOU_NO = #vouNo#
	    	
	    	
			INSERT INTO AC_VOU_DET
						(
						  ACNT_YY
						, ACNT_UNT
						, VOU_NO
						, VOU_SEQ
						, BUDG_ORG_ID
						, BIZ_CD
						, ACNT_CD
						, BAL_DIV
						, DRCR_CD
						, FINC_CD
						, ACNT_NO
						, APLY_AMT
						, CFM_AMT
						, USE_ORG_ID 
						, INSERT_DT
						, INSERT_ID
						, INSERT_IP
						, INSERT_PGM	
						, INSERT_GB	
						)
					VALUES
						(
						  #acntYy#
						, #acntUnt#
						, #vouNo#
						, @VOU_SEQ
						, #budgOrgId#
						, #bizCd#
						, #acntCd#
						, #balDiv#
						, #drcrCd#
						, #fincCd#
						, #acntNo#
						, CONVERT(BIGINT,#aplyAmt#)
						, CONVERT(BIGINT,#cfmAmt#)
						, #useOrgId#
						, GETDATE()
						, #insertId#
						, #insertIp#
						, 'ac02010_p01_t01.xfdl'
						, #insertGb#
						)

			DECLARE @BAL_DIV VARCHAR(10);
			DECLARE @BIZ_CD  VARCHAR(10);
			
			SET @BAL_DIV = #balDiv#;
			SET @BIZ_CD =  #bizCd#;

			IF @BAL_DIV IS NOT NULL AND @BAL_DIV != '' AND @BIZ_CD IS NOT NULL AND @BIZ_CD != ''
				BEGIN
						
					INSERT INTO BG_CTRL
						(
						  ACNT_UNT
						, ACNT_YY
						, BIZ_CD
						, ACNT_CD
						, BUDG_ORG_ID
						, BAL_DIV
						, CTRL_SEQ
						, VOU_NO
						, VOU_SEQ
						, APLY_AMT
						, CTRL_YN
						, CTRL_DT
						, WORK_DIV
						, CTRL_DESC
					   )
					   VALUES
					   (
					   	  #acntUnt#
					   	, #acntYy#
					   	, #bizCd#
					   	, #acntCd#
					   	, #budgOrgId#
					   	, #balDiv#
					   	, ( SELECT ISNULL(MAX(CTRL_SEQ),0) + 1
					   	      FROM BG_CTRL
					   	     WHERE ACNT_UNT = #acntUnt#
					   	       AND ACNT_YY  = #acntYy#
					   	       AND BIZ_CD = #bizCd#
					   	       AND ACNT_CD = #acntCd#
					   	       AND BUDG_ORG_ID = #budgOrgId#
					   	       AND BAL_DIV = #balDiv# )
					   	, #vouNo#
					   	, @VOU_SEQ
					   	, #aplyAmt#
					   	, '1'
					   	, CONVERT(VARCHAR, GETDATE(), 112)
					   	, '1'
					   	, ( SELECT VOU_TTL
					   	      FROM AC_VOU
					   	     WHERE ACNT_UNT = #acntUnt#
					   	       AND ACNT_YY = #acntYy#
					   	       AND VOU_NO = #vouNo# )
					   )
				END						
		END

    </update>
    
    <update id="ac02DAO.updateAc02020_purc" parameterClass="java.util.HashMap">

    	BEGIN
	    	UPDATE AC_VOU_DET
	    	   SET CFM_AMT  = ISNULL(#cfmAmt#,0)
	    	 WHERE ACNT_YY  = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO   = #vouNo#
			   AND VOU_SEQ  = CONVERT(INT,#vouSeq#)
		END	   

    </update>
    
    <delete id="ac02DAO.deleteAc02020_purc" parameterClass="java.util.HashMap">
    	BEGIN
	    	DELETE FROM AC_VOU_DET
	    	 WHERE ACNT_YY  = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO   = #vouNo#
			   AND VOU_SEQ  = CONVERT(INT,#vouSeq#)
			   
			DECLARE @BAL_DIV VARCHAR(10);
			DECLARE @BIZ_CD  VARCHAR(10);
			
			SET @BAL_DIV = #balDiv#;
			SET @BIZ_CD =  #bizCd#;

			IF @BAL_DIV IS NOT NULL AND @BAL_DIV != '' AND @BIZ_CD IS NOT NULL AND @BIZ_CD != ''
				BEGIN
					DELETE FROM BG_CTRL
					 WHERE ACNT_YY = #acntYy#
					   AND ACNT_UNT = #acntUnt#
					   AND VOU_NO = #vouNo#
					   AND VOU_SEQ = CONVERT(INT,#vouSeq#)  
				END
		END	   

    </delete>
    
    <update id="ac02DAO.updateAc02020_recv_chg" parameterClass="java.util.HashMap">
	    	UPDATE AC_VOU
	    	   SET RECV_ORG_ID = #recvGb#
	    	 WHERE ACNT_YY     = #acntYy#
			   AND ACNT_UNT    = #acntUnt#
			   AND VOU_NO      = #vouNo#
		   
    </update>
    
    <update id="ac02DAO.updateAc02010p01_01AplyGwApprovalMstOra" parameterClass="java.util.HashMap">
		UPDATE AC_VOU
		   SET elec_appro_id   = #id#
              ,form_id         = #formId#
			  ,UPDATE_DT 	   = GETDATE()
			  ,UPDATE_ID 	   = #updateId#
			  ,UPDATE_IP 	   = #updateIp#
			  ,UPDATE_PGM      = 'ac02010_p01.xfdl'
	     WHERE 1=1
	       AND ACNT_YY = #acntYy#
	       AND ACNT_UNT = #acntUnt#
	       AND VOU_NO = #vouNo#
	</update>
	
	<update id="ac02DAO.updateAc02020p01_01AplyGwApprovalMstOra" parameterClass="java.util.HashMap">
		BEGIN
			UPDATE AC_SLIP
			   SET elec_appro_id   = #id#
	              ,form_id         = #formId#
				  ,UPDATE_DT = GETDATE()
				  ,UPDATE_ID = #userId#
				  ,UPDATE_IP = #userIp#
				  ,UPDATE_PGM = 'ac02010_p01.xfdl'
		     WHERE ACNT_YY = #acntYy#
		       AND ACNT_UNT = #acntUnt#
		       AND VOU_NO = #vouNo#
	
            UPDATE AC_SLIP_DET
               SET ABSTR = ( SELECT CASE WHEN A.JUKYO IS NULL THEN SLIP_DESC
                               ELSE CASE WHEN CHARINDEX(CHAR(10), JUKYO) > 0 THEN REPLACE(REPLACE(SUBSTRING(JUKYO, 1, CHARINDEX(CHAR(10), JUKYO)), CHAR(13), ''), CHAR(10), '' )
                                         ELSE JUKYO END END
                   FROM AC_SLIP A
				  WHERE A.ACNT_UNT = AC_SLIP_DET.ACNT_UNT
				    AND A.ACNT_YY = AC_SLIP_DET.ACNT_YY
					AND A.SLIP_NO = AC_SLIP_DET.SLIP_NO )
			 WHERE EXISTS ( SELECT 1
			                  FROM AC_SLIP A
			                 WHERE A.ACNT_UNT = AC_SLIP_DET.ACNT_UNT
							   AND A.ACNT_YY = AC_SLIP_DET.ACNT_YY
							   AND A.SLIP_NO = AC_SLIP_DET.SLIP_NO
							   AND A.ACNT_YY = #acntYy#
		                       AND A.ACNT_UNT = #acntUnt#
		                       AND A.VOU_NO = #vouNo#
			                  )    
	    END 
	</update>
	
	<update id="ac02DAO.updateAc02020p01_01AplyGwApprovalMstOra_puch" parameterClass="java.util.HashMap">
		BEGIN
			UPDATE AC_SLIP
			   SET elec_appro_id   = #id#
	              ,form_id         = #formId#
				  ,UPDATE_DT = GETDATE()
				  ,UPDATE_ID = #updateId#
				  ,UPDATE_IP = #updateIp#
				  ,UPDATE_PGM = 'ac02010_p01_purc.xfdl'
		     WHERE 1=1
		       AND ACNT_YY = #acntYy#
		       AND ACNT_UNT = #acntUnt#
		       AND SLIP_NO = #slipNo#
		   
		    UPDATE AC_SLIP_DET
               SET ABSTR = ( SELECT CASE WHEN A.JUKYO IS NULL THEN SLIP_DESC
                               ELSE CASE WHEN CHARINDEX(CHAR(10), JUKYO) > 0 THEN REPLACE(REPLACE(SUBSTRING(JUKYO, 1, CHARINDEX(CHAR(10), JUKYO)), CHAR(13), ''), CHAR(10), '' )
                                         ELSE JUKYO END END
                   FROM AC_SLIP A
				  WHERE A.ACNT_UNT = AC_SLIP_DET.ACNT_UNT
				    AND A.ACNT_YY = AC_SLIP_DET.ACNT_YY
					AND A.SLIP_NO = AC_SLIP_DET.SLIP_NO )
			 WHERE ACNT_YY = #acntYy#
		       AND ACNT_UNT = #acntUnt#
		       AND SLIP_NO = #slipNo#   
		END
	</update>
    
    <!-- 증빙,원천,계좌 조회 -->
    <select id="ac02DAO.selectAc02010p01_t01_cnt"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT MIN(CASE A.TB_NAME WHEN 'AC_BILL_EVDC' THEN A.AC_BILL_EVDC_CNT
                                  END) AS AC_BILL_EVDC_CNT
		     , MIN(CASE A.TB_NAME WHEN 'AC_INC_EVDC' THEN A.AC_BILL_EVDC_CNT
		                          END) AS AC_INC_EVDC_CNT     
		     , MIN(CASE A.TB_NAME WHEN 'AC_RCPT_DESC' THEN A.AC_BILL_EVDC_CNT
                       			  END) AS AC_RCPT_DESC_CNT
       		 , MIN(CASE A.TB_NAME WHEN 'AC_PYMT' THEN A.AC_BILL_EVDC_CNT
                                  END) AS AC_PYMT_CNT                                   
		  FROM (
		        SELECT 'AC_BILL_EVDC' AS TB_NAME
		             , COUNT(EVDC_SEQ) AS AC_BILL_EVDC_CNT
		          FROM AC_BILL_EVDC  WITH(NOLOCK)
		         WHERE 1=1
		           AND ACNT_YY = #acntYy# 
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO =  #vouNo#
		           AND VOU_SEQ = CONVERT(INT, #vouSeq#)
		           AND ISNULL(SLIP_NO, '') = #slipNo#
		        
		        UNION
		        
		        SELECT 'AC_INC_EVDC' AS TB_NAME
		             , COUNT(EVDC_SEQ) AS AC_INC_EVDC_CNT
		          FROM AC_INC_EVDC WITH(NOLOCK)
		         WHERE 1=1
		           AND ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#
		           AND VOU_SEQ = CONVERT(INT, #vouSeq#)
		           AND ISNULL(SLIP_NO, '') = #slipNo#
		           
		        UNION
	            
				SELECT 'AC_RCPT_DESC' AS TB_NAME 
				     , COUNT(RCPT_SEQ) AS AC_INC_EVDC_CNT
				  FROM AC_RCPT_DESC WITH(NOLOCK)
				 WHERE 1=1
				   AND ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#
				
				UNION
				  
				SELECT 'AC_PYMT' AS TB_NAME 
				     , COUNT(PYMT_SEQ) AS AC_INC_EVDC_CNT
				  FROM AC_PYMT WITH(NOLOCK)
				 WHERE 1=1
	           	   AND ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		           AND VOU_NO = #vouNo#         
		           AND ISNULL(SLIP_NO, '') = #slipNo#  
		           
		        ) A
		  WHERE 1=1
    </select> 
    
    <!-- 계정내역 신규 -->
    <insert id="ac02DAO.insertAc02010p01_t01_01" parameterClass="java.util.HashMap">
		INSERT INTO AC_VOU_DET
					(
					  ACNT_YY
					, ACNT_UNT
					, VOU_NO
					, VOU_SEQ
					, BUDG_ORG_ID
					, BIZ_CD
					, ACNT_CD
					, BAL_DIV
					, DRCR_CD
					, FINC_CD
					, ACNT_NO
					, APLY_AMT
					, CFM_AMT
					, USE_ORG_ID 
					, INSERT_DT
					, INSERT_ID
					, INSERT_IP
					, INSERT_PGM	
					)
				VALUES
					(
					  #acntYy#
					, #acntUnt#
					, #vouNo#
					, ( 
						SELECT ISNULL(MAX(CONVERT(INT, VOU_SEQ)), 0) + 1
  				   		  FROM AC_VOU_DET WITH(NOLOCK)
  				  		 WHERE 1=1
				           AND ACNT_YY = #acntYy#
				           AND ACNT_UNT = #acntUnt#
				    	   AND VOU_NO = #vouNo#
   					  )
					, #budgOrgId#
					, #bizCd#
					, #acntCd#
					, #balDiv#
					, #drcrCd#
					, #fincCd#
					, #acntNo#
					, CONVERT(BIGINT,#aplyAmt#)
					, CONVERT(BIGINT,#aplyAmt#)			
					, #useOrgId#
					, GETDATE()
					, #insertId#
					, #insertIp#
					, 'ac02010_p01_t01.xfdl'
					)
	</insert>
	
    <insert id="ac02DAO.insertAc02020p01_t01_01" parameterClass="java.util.HashMap">
    	BEGIN
	    	
	    	DECLARE @VOU_SEQ NUMERIC(5,0);
	    	
				SELECT @VOU_SEQ = ISNULL(MAX(CONVERT(INT, VOU_SEQ)), 0) + 1
		   		  FROM AC_VOU_DET WITH(NOLOCK)
		  		 WHERE ACNT_YY = #acntYy#
		           AND ACNT_UNT = #acntUnt#
		    	   AND VOU_NO = #vouNo#
	    	
	    	
			INSERT INTO AC_VOU_DET
						(
						  ACNT_YY
						, ACNT_UNT
						, VOU_NO
						, VOU_SEQ
						, BUDG_ORG_ID
						, BIZ_CD
						, ACNT_CD
						, BAL_DIV
						, DRCR_CD
						, FINC_CD
						, ACNT_NO
						, APLY_AMT
						, CFM_AMT
						, USE_ORG_ID 
						, INSERT_DT
						, INSERT_ID
						, INSERT_IP
						, INSERT_PGM	
						, INSERT_GB	
						)
					VALUES
						(
						  #acntYy#
						, #acntUnt#
						, #vouNo#
						, @VOU_SEQ
						, #budgOrgId#
						, #bizCd#
						, #acntCd#
						, #balDiv#
						, #drcrCd#
						, #fincCd#
						, #acntNo#
						, CONVERT(BIGINT,#aplyAmt#)
						, CONVERT(BIGINT,#aplyAmt#)			
						, #useOrgId#
						, GETDATE()
						, #insertId#
						, #insertIp#
						, 'ac02020_p01_t01.xfdl'
						, #insertGb#
						)

			DECLARE @BAL_DIV VARCHAR(10);
			DECLARE @BIZ_CD  VARCHAR(10);
			
			SET @BAL_DIV = #balDiv#;
			SET @BIZ_CD =  #bizCd#;

			IF @BAL_DIV IS NOT NULL AND @BAL_DIV != '' AND @BIZ_CD IS NOT NULL AND @BIZ_CD != ''
				BEGIN
						
					INSERT INTO BG_CTRL
						(
						  ACNT_UNT
						, ACNT_YY
						, BIZ_CD
						, ACNT_CD
						, BUDG_ORG_ID
						, BAL_DIV
						, CTRL_SEQ
						, VOU_NO
						, VOU_SEQ
						, APLY_AMT
						, CTRL_YN
						, CTRL_DT
						, WORK_DIV
						, CTRL_DESC
						, INIT_AMT
						, INSERT_PGM
					   )
					   VALUES
					   (
					   	  #acntUnt#
					   	, #acntYy#
					   	, #bizCd#
					   	, #acntCd#
					   	, #budgOrgId#
					   	, #balDiv#
					   	, ( SELECT ISNULL(MAX(CTRL_SEQ),0) + 1
					   	      FROM BG_CTRL
					   	     WHERE ACNT_UNT = #acntUnt#
					   	       AND ACNT_YY  = #acntYy#
					   	       AND BIZ_CD = #bizCd#
					   	       AND ACNT_CD = #acntCd#
					   	       AND BUDG_ORG_ID = #budgOrgId#
					   	       AND BAL_DIV = #balDiv# )
					   	, #vouNo#
					   	, @VOU_SEQ
					   	, CONVERT(BIGINT,#aplyAmt#)
					   	, '1'
					   	, CONVERT(VARCHAR, GETDATE(), 112)
					   	, '1'
					   	, ( SELECT VOU_TTL
					   	      FROM AC_VOU
					   	     WHERE ACNT_UNT = #acntUnt#
					   	       AND ACNT_YY = #acntYy#
					   	       AND VOU_NO = #vouNo# )
					   	, CONVERT(BIGINT,#aplyAmt#)
					   	, 'ac02020_p01_t01'
					   )
				END						
		END
	</insert>
	
	<!-- 계정내역 저장 -->
	<update id="ac02DAO.updateAc02010p01_t01_01" parameterClass="java.util.HashMap">
		UPDATE AC_VOU_DET
		   SET BUDG_ORG_ID = #budgOrgId#
			 , BIZ_CD = #bizCd#
			 , ACNT_CD = #acntCd#
			 , BAL_DIV = #balDiv#
			 , DRCR_CD = #drcrCd#
			 , FINC_CD = #fincCd#
			 , ACNT_NO = #acntNo#
			 , APLY_AMT = CONVERT(BIGINT,#aplyAmt#)
			 , CFM_AMT = CONVERT(BIGINT,#aplyAmt#)
			 , USE_ORG_ID = #useOrgId#
			 , UPDATE_DT = GETDATE()
			 , UPDATE_ID = #updateId#
			 , UPDATE_IP = #updateIp#
			 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
         WHERE 1=1
           AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND VOU_SEQ = CONVERT(INT,#vouSeq#)
	</update>
	
	<!-- 계정내역 저장 -->
	<update id="ac02DAO.updateAc02020p01_t01_01" parameterClass="java.util.HashMap">
		BEGIN
		
			UPDATE AC_VOU_DET
			   SET BUDG_ORG_ID = #budgOrgId#
				 , BIZ_CD = #bizCd#
				 , ACNT_CD = #acntCd#
				 , BAL_DIV = #balDiv#
				 , DRCR_CD = #drcrCd#
				 , FINC_CD = #fincCd#
				 , ACNT_NO = #acntNo#
				 , APLY_AMT = CONVERT(BIGINT,#aplyAmt#)
				 , CFM_AMT = CONVERT(BIGINT,#aplyAmt#)
				 , USE_ORG_ID = #useOrgId#
				 , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT,#vouSeq#)
			
			DECLARE @BAL_DIV VARCHAR(10);
			DECLARE @BIZ_CD  VARCHAR(10);
			
			SET @BAL_DIV = #balDiv#;
			SET @BIZ_CD =  #bizCd#;

			IF @BAL_DIV IS NOT NULL AND @BAL_DIV != '' AND @BIZ_CD IS NOT NULL AND @BIZ_CD != ''
				BEGIN
					DELETE FROM BG_CTRL
					 WHERE VOU_NO = #vouNo#
					   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
					   AND ACNT_YY = #acntYy#
					   AND ACNT_UNT = #acntUnt#
				
					INSERT INTO BG_CTRL
						(
						  ACNT_UNT
						, ACNT_YY
						, BIZ_CD
						, ACNT_CD
						, BUDG_ORG_ID
						, BAL_DIV
						, CTRL_SEQ
						, VOU_NO
						, VOU_SEQ
						, APLY_AMT
						, CTRL_YN
						, CTRL_DT
						, WORK_DIV
						, CTRL_DESC
						, INIT_AMT
						, INSERT_PGM
					   )
					   VALUES
					   (
					   	  #acntUnt#
					   	, #acntYy#
					   	, #bizCd#
					   	, #acntCd#
					   	, #budgOrgId#
					   	, #balDiv#
					   	, ( SELECT ISNULL(MAX(CTRL_SEQ),0) + 1
					   	      FROM BG_CTRL
					   	     WHERE ACNT_UNT = #acntUnt#
					   	       AND ACNT_YY  = #acntYy#
					   	       AND BIZ_CD = #bizCd#
					   	       AND ACNT_CD = #acntCd#
					   	       AND BUDG_ORG_ID = #budgOrgId#
					   	       AND BAL_DIV = #balDiv# )
					   	, #vouNo#
					   	, CONVERT(INT, #vouSeq#)
					   	, CONVERT(BIGINT, #aplyAmt#)
					   	, '1'
					   	, CONVERT(VARCHAR, GETDATE(), 112)
					   	, '1'
					   	, ( SELECT VOU_TTL
					   	      FROM AC_VOU
					   	     WHERE ACNT_UNT = #acntUnt#
					   	       AND ACNT_YY = #acntYy#
					   	       AND VOU_NO = #vouNo# )
					   	, CONVERT(BIGINT, #aplyAmt#)
					   	, 'ac02020_p01_t01'
					   )
				END   
			   
		END
	</update>
	
	<!-- 계정내역 삭제 -->
	<delete id="ac02DAO.deleteAc02010p01_t01_01" parameterClass="java.util.HashMap">
		BEGIN
		
			DELETE 
			  FROM AC_BILL_EVDC
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
	   		   AND ACNT_UNT = #acntUnt#
	   		   AND VOU_NO = #vouNo#
	   		   AND VOU_SEQ = CONVERT(INT,#vouSeq#)
	
			DELETE 
			  FROM AC_INC_EVDC
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
	   		   AND ACNT_UNT = #acntUnt#
	   		   AND VOU_NO = #vouNo#
	   		   AND VOU_SEQ = CONVERT(INT,#vouSeq#)
	
			DELETE 
			  FROM AC_VOU_DET
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
	   		   AND ACNT_UNT = #acntUnt#
	   		   AND VOU_NO = #vouNo#
	   		   AND VOU_SEQ = CONVERT(INT,#vouSeq#)
   		   
   		   
   		    DECLARE @V_CNT NUMERIC(12,0);
   		    
   		    SELECT @V_CNT = COUNT(1)
   		      FROM AC_VOU_DET
   		     WHERE ACNT_YY = #acntYy#
	   		   AND ACNT_UNT = #acntUnt#
	   		   AND VOU_NO = #vouNo#
	   		   
	   		IF @V_CNT = 0
	   			BEGIN
					DELETE 
					  FROM AC_PYMT
			         WHERE 1=1
			           AND ACNT_YY = #acntYy#
			   		   AND ACNT_UNT = #acntUnt#
			   		   AND VOU_NO = #vouNo#
			   		
			   		DELETE 
					  FROM AC_RCPT_DESC
			         WHERE 1=1
			           AND ACNT_YY = #acntYy#
			   		   AND ACNT_UNT = #acntUnt#
			   		   AND VOU_NO = #vouNo#
	   			END
   		   
   		END
	</delete>
	
	<delete id="ac02DAO.deleteAc02020p01_t01_01" parameterClass="java.util.HashMap">
		BEGIN
	
			DELETE 
			  FROM AC_BILL_EVDC
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
	   		   AND ACNT_UNT = #acntUnt#
	   		   AND VOU_NO = #vouNo#
	   		   AND VOU_SEQ = CONVERT(INT,#vouSeq#)
	
			DELETE 
			  FROM AC_INC_EVDC
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
	   		   AND ACNT_UNT = #acntUnt#
	   		   AND VOU_NO = #vouNo#
	   		   AND VOU_SEQ = CONVERT(INT,#vouSeq#)
	
			DELETE 
			  FROM AC_VOU_DET
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
	   		   AND ACNT_UNT = #acntUnt#
	   		   AND VOU_NO = #vouNo#
	   		   AND VOU_SEQ = CONVERT(INT,#vouSeq#)
	   		   
			DECLARE @BAL_DIV VARCHAR(10);
			DECLARE @BIZ_CD  VARCHAR(10);
			
			SET @BAL_DIV = #balDiv#;
			SET @BIZ_CD =  #bizCd#;

			IF @BAL_DIV IS NOT NULL AND @BAL_DIV != '' AND @BIZ_CD IS NOT NULL AND @BIZ_CD != ''
				BEGIN
					DELETE FROM BG_CTRL
					 WHERE VOU_NO = #vouNo#
					   AND VOU_SEQ = #vouSeq#
					   AND ACNT_YY = #acntYy#
					   AND ACNT_UNT = #acntUnt#
				END
		END
	</delete>
	
	 <!--
    #########################################################################################################################################
    # 수입/여입 TAB 증빙내역 (admi/ac/ac02/ac02010_p01_t01.xfdl)
    #########################################################################################################################################
    -->
    
    <!-- 증빙내역 탭 조회 -->
    <select id="ac02DAO.selectAc02010p01_t01_02"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
			 , A.ACNT_YY
		     , A.ACNT_UNT
		     , A.VOU_NO
		     , A.VOU_SEQ
		     , A.EVDC_SEQ
		     , A.EVDC_DIV
		     , A.EVDC_DESC
		     , A.VEND_ID
		     , A.VEND_NM
		     , A.EVDC_AMT
		     , A.SPLY_AMT
		     , A.VAT
		     , A.ISS_DT
		     , ISNULL(A.DEDUCT_YN, 0) AS DEDUCT_YN
		     , ISNULL(A.ELEC_YN, 0) AS ELEC_YN
		     , A.APPRO_NO
		     , A.FILE_ID
		     , A.CARD_ENPC
		     , A.CDNO
		     , A.APVL_DT
		     , A.BIC_APVL_SEQ
             , B.FILE_MASTER_NO
             , B.ORG_FILE_NM
             , A.PRE_EXP_YN
             , A.BUDG_AMT
             , A.TAX_AMT
             , A.SLIP_NO
             , A.SLIP_SEQ
             , A.MEMBER_CNT
		  FROM AC_BILL_EVDC A WITH(NOLOCK)
	           LEFT OUTER JOIN (SELECT A.FILE_MASTER_NO
					                  ,STUFF((SELECT ',' + ORG_FILE_NM
												FROM COM_FILE_SUB
											   WHERE FILE_MASTER_NO = A.FILE_MASTER_NO
											   ORDER BY FILE_SEQ
												 FOR XML PATH('')),1,1,'') as ORG_FILE_NM
					              FROM COM_FILE A WITH(NOLOCK)
					             GROUP BY A.FILE_MASTER_NO) B
			     ON A.FILE_ID = B.FILE_MASTER_NO
		 WHERE A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
		   AND A.VOU_SEQ = CONVERT(INT, #vouSeq#)
		   AND ISNULL(A.SLIP_NO, '') = #slipNo#
		   <isEqual property="preExpYn" compareValue="1">
		   AND A.PRE_EXP_YN = '1'
		   </isEqual>
		   <isNotEqual property="preExpYn" compareValue="1">
		   AND ( ISNULL(A.PRE_EXP_YN, '0') = '0' OR A.PRE_EXP_YN = '' )
		   </isNotEqual>
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ, EVDC_SEQ
    </select> 
    
    <!-- 증빙내역 탭 신규 -->
    <insert id="ac02DAO.insertAc02010p01_t01_02" parameterClass="java.util.HashMap">
		BEGIN
		
			INSERT INTO AC_BILL_EVDC
						(
						  ACNT_YY
					    , ACNT_UNT
					    , VOU_NO
					    , VOU_SEQ
					    , EVDC_SEQ
					    , EVDC_DIV
					    , EVDC_DESC
					    , VEND_ID
					    , VEND_NM
					    , EVDC_AMT
					    , SPLY_AMT
					    , VAT
					    , ISS_DT
					    , DEDUCT_YN
					    , ELEC_YN
					    , APPRO_NO
					    , FILE_ID
					    , CARD_ENPC
					    , CDNO
					    , APVL_DT
					    , BIC_APVL_SEQ
					    , PRE_EXP_YN
					    , SLIP_NO
					    , SLIP_SEQ
					    , BUDG_AMT
					    , TAX_AMT
					    , MEMBER_CNT
					    , INSERT_DT
						, INSERT_ID
						, INSERT_IP
						, INSERT_PGM
						)
					VALUES
						(
						  #acntYy#
					    , #acntUnt#
					    , #vouNo#
					    , CONVERT(INT,#vouSeq#)
					    , ( 
							SELECT ISNULL(MAX(CONVERT(INT, EVDC_SEQ)), 0) + 1
	  				   		  FROM AC_BILL_EVDC WITH(NOLOCK)
	  				  		 WHERE 1=1
					           AND ACNT_YY = #acntYy#
							   AND ACNT_UNT = #acntUnt#
							   AND VOU_NO = #vouNo#
							   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
	   					  )
					    , #evdcDiv#
					    , #evdcDesc#
					    , CASE WHEN #vendId# IS NULL OR #vendId# = '' THEN NULL ELSE CONVERT(BIGINT, #vendId#) END
					    , #vendNm#
					    , CONVERT(BIGINT, #evdcAmt#)
					    , FLOOR(CONVERT(BIGINT, #splyAmt#))
					    , FLOOR(CONVERT(BIGINT, #vat#))
					    , #issDt#
					    , #deductYn#
					    , #elecYn#
					    , #approNo#
					    , CASE WHEN #fileId# IS NULL OR #fileId# = '' THEN NULL ELSE CONVERT(BIGINT, #fileId#) END
					    , #cardEnpc#
					    , #cdno#
					    , #apvlDt#
					    , CONVERT(BIGINT, #bicApvlSeq#)
					    , #preExpYn#
					    , #slipNo#
					    , CONVERT(INT, #slipSeq#)
					    , CONVERT(BIGINT, #budgAmt#)
					    , CONVERT(BIGINT, #taxAmt#)
					    , #memberCnt#
					    , GETDATE()
						, #insertId#
						, #insertIp#
						, 'ac02010_p01_t01.xfdl'
						)
						
		
			UPDATE AC_VOU_DET
			   SET APLY_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.BUDG_AMT) * -1
								                     										   WHEN '22' THEN SUM(A.BUDG_AMT) * -1
								                     										   ELSE SUM(A.BUDG_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT AS BUDG_AMT
								          FROM AC_INC_EVDC A  WITH(NOLOCK)
                                               LEFT OUTER JOIN AC_VOU B
                                               		ON  A.ACNT_YY  = B.ACNT_YY
			                                        AND A.ACNT_UNT = B.ACNT_UNT
											        AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '11' THEN ISNULL(SUM(A.BUDG_AMT),0) + ISNULL(SUM(A.TAX_AMT),0)
								                     										   ELSE SUM(A.BUDG_AMT)
								               END
								          FROM AC_BILL_EVDC A  WITH(NOLOCK)
                              			      ,AC_VOU B  WITH(NOLOCK)
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			     , CFM_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.BUDG_AMT) * -1
								                     										   WHEN '22' THEN SUM(A.BUDG_AMT) * -1
								                     										   ELSE SUM(A.BUDG_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT AS BUDG_AMT
								          FROM AC_INC_EVDC A  WITH(NOLOCK)
                                               LEFT OUTER JOIN AC_VOU B
                                               		ON  A.ACNT_YY  = B.ACNT_YY
			                                        AND A.ACNT_UNT = B.ACNT_UNT
											        AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '11' THEN ISNULL(SUM(A.BUDG_AMT),0) + ISNULL(SUM(A.TAX_AMT),0)
								                     										   ELSE SUM(A.BUDG_AMT)
								               END
								          FROM AC_BILL_EVDC A  WITH(NOLOCK)
                              			      ,AC_VOU B  WITH(NOLOCK)
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
		
		END
	</insert>
	
	<!-- 증빙내역 탭 저장 -->
	<update id="ac02DAO.updateAc02010p01_t01_02" parameterClass="java.util.HashMap">
		
		BEGIN
		
			UPDATE AC_BILL_EVDC
			   SET EVDC_DIV = #evdcDiv#
			     , EVDC_DESC = #evdcDesc#
			     , VEND_ID = CASE WHEN #vendId# IS NULL OR #vendId# = '' THEN NULL ELSE CONVERT(BIGINT, #vendId#) END
			     , VEND_NM = #vendNm#
			     , EVDC_AMT = CONVERT(BIGINT, #evdcAmt#)
			     , SPLY_AMT = CONVERT(BIGINT, #splyAmt#)
			     , VAT = CONVERT(BIGINT, #vat#)
			     , ISS_DT = #issDt#
			     , DEDUCT_YN = #deductYn#
			     , ELEC_YN = #elecYn#
			     , APPRO_NO = #approNo#
			     , FILE_ID = CASE WHEN #fileId# IS NULL OR #fileId# = '' THEN NULL ELSE CONVERT(BIGINT, #fileId#) END
			     , CARD_ENPC = #cardEnpc#
			     , CDNO = #cdno#
			     , APVL_DT = #apvlDt#
			     , BIC_APVL_SEQ = CONVERT(BIGINT, #bicApvlSeq#) 
			     , PRE_EXP_YN = #preExpYn#
			     , BUDG_AMT = CONVERT(BIGINT, #budgAmt#)
			     , TAX_AMT = CONVERT(BIGINT, #taxAmt#)
			     , MEMBER_CNT = #memberCnt#
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl' 
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   			   
			UPDATE AC_VOU_DET
			   SET APLY_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.BUDG_AMT) * -1
								                     										   WHEN '22' THEN SUM(A.BUDG_AMT) * -1
								                     										   ELSE SUM(A.BUDG_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT AS BUDG_AMT
								          FROM AC_INC_EVDC A 
                                               LEFT OUTER JOIN AC_VOU B
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '11' THEN ISNULL(SUM(A.BUDG_AMT),0) + ISNULL(SUM(A.TAX_AMT),0)
								                     										   ELSE SUM(A.BUDG_AMT)
								               END					               
								          FROM AC_BILL_EVDC A 
                              			      ,AC_VOU B 
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			   	 , CFM_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.BUDG_AMT) * -1
								                     										   WHEN '22' THEN SUM(A.BUDG_AMT) * -1
								                     										   ELSE SUM(A.BUDG_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT AS BUDG_AMT
								          FROM AC_INC_EVDC A 
                                               LEFT OUTER JOIN AC_VOU B
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '11' THEN ISNULL(SUM(A.BUDG_AMT),0) + ISNULL(SUM(A.TAX_AMT),0)
								                     										   ELSE SUM(A.BUDG_AMT)
								               END					               
								          FROM AC_BILL_EVDC A 
                              			      ,AC_VOU B 
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			      
		END
	</update>
	
	<!-- 증빙내역 탭 file_id 저장 -->
	<update id="ac02DAO.updateAc02010p01_t01_02_file" parameterClass="java.util.HashMap">
		
			UPDATE AC_BILL_EVDC
			   SET FILE_ID = CONVERT(BIGINT, #fileId#)
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl' 
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
		   
	</update>
	
	<!-- 증빙내역 탭 삭제 -->
	<delete id="ac02DAO.deleteAc02010p01_t01_02" parameterClass="java.util.HashMap">
		
		BEGIN
		
			DELETE
			  FROM AC_BILL_EVDC
	  	     WHERE ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
			
			UPDATE AC_VOU_DET
			   SET APLY_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.BUDG_AMT) * -1
								                     										   WHEN '22' THEN SUM(A.BUDG_AMT) * -1
								                     										   ELSE SUM(A.BUDG_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT AS BUDG_AMT
								          FROM AC_INC_EVDC A  WITH(NOLOCK)
                                               LEFT OUTER JOIN AC_VOU B WITH(NOLOCK)
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '11' THEN ISNULL(SUM(A.BUDG_AMT),0) + ISNULL(SUM(A.TAX_AMT),0)
								                     										   ELSE SUM(A.BUDG_AMT)
								               END
								          FROM AC_BILL_EVDC A  WITH(NOLOCK)
                              			      ,AC_VOU B  WITH(NOLOCK)
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			   	 , CFM_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.BUDG_AMT) * -1
								                     										   WHEN '22' THEN SUM(A.BUDG_AMT) * -1
								                     										   ELSE SUM(A.BUDG_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT AS BUDG_AMT
								          FROM AC_INC_EVDC A  WITH(NOLOCK)
                                               LEFT OUTER JOIN AC_VOU B WITH(NOLOCK)
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '11' THEN ISNULL(SUM(A.BUDG_AMT),0) + ISNULL(SUM(A.TAX_AMT),0)
								                     										   ELSE SUM(A.BUDG_AMT)
								               END
								          FROM AC_BILL_EVDC A  WITH(NOLOCK)
                              			      ,AC_VOU B  WITH(NOLOCK)
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)   
			
		END
	</delete>
	
	<!-- 증빙내역 탭 신규 -->
    <insert id="ac02DAO.insertAc02010p01_t01_02_purc" parameterClass="java.util.HashMap">
		
		BEGIN
		
			INSERT INTO AC_BILL_EVDC
						(
						  ACNT_YY
					    , ACNT_UNT
					    , VOU_NO
					    , VOU_SEQ
					    , EVDC_SEQ
					    , EVDC_DIV
					    , EVDC_DESC
					    , VEND_ID
					    , VEND_NM
					    , EVDC_AMT
					    , SPLY_AMT
					    , VAT
					    , ISS_DT
					    , DEDUCT_YN
					    , ELEC_YN
					    , APPRO_NO
					    , FILE_ID
					    , CARD_ENPC
					    , CDNO
					    , APVL_DT
					    , BIC_APVL_SEQ
					    , PRE_EXP_YN
					    , SLIP_NO
					    , SLIP_SEQ
					    , BUDG_AMT
					    , INSERT_DT
						, INSERT_ID
						, INSERT_IP
						, INSERT_PGM
						)
					VALUES
						(
						  #acntYy#
					    , #acntUnt#
					    , #vouNo#
					    , CONVERT(INT, #vouSeq#)
					    , ( 
							SELECT ISNULL(MAX(CONVERT(INT, EVDC_SEQ)), 0) + 1
	  				   		  FROM AC_BILL_EVDC WITH(NOLOCK)
	  				  		 WHERE 1=1
					           AND ACNT_YY = #acntYy#
							   AND ACNT_UNT = #acntUnt#
							   AND VOU_NO = #vouNo#
							   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
	   					  )
					    , #evdcDiv#
					    , #evdcDesc#
					    , CONVERT(BIGINT, #vendId#)
					    , #vendNm#
					    , CONVERT(BIGINT, #evdcAmt#)
					    , CONVERT(BIGINT, #splyAmt#)
					    , CONVERT(BIGINT, #vat#)
					    , #issDt#
					    , #deductYn#
					    , #elecYn#
					    , #approNo#
					    , CONVERT(BIGINT, #fileId#)
					    , #cardEnpc#
					    , #cdno#
					    , #apvlDt#
					    , CONVERT(BIGINT, #bicApvlSeq#)
					    , #preExpYn#
					    , #slipNo#
					    , CONVERT(INT, #slipSeq#)
					    , CONVERT(BIGINT, #budgAmt#)
					    , GETDATE()
						, #insertId#
						, #insertIp#
						, 'ac02010_p01_t01.xfdl'
						)
						
		
			UPDATE AC_SLIP_DET
			   SET SLIP_AMT = ( SELECT ISNULL(SUM(BUDG_AMT),0)
			                      FROM AC_BILL_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo# 
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
								+ ( SELECT ISNULL(SUM(EVDC_AMT),0)
			                      FROM AC_INC_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo# 
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
			 WHERE ACNT_UNT = #acntUnt#
			   AND ACNT_YY  = #acntYy#
			   AND SLIP_NO  = #slipNo#
			   AND SLIP_SEQ = CONVERT(INT, #slipSeq#)		
		   
		
		END
	</insert>
	
	<!-- 증빙내역 탭 저장 -->
	<update id="ac02DAO.updateAc02010p01_t01_02_purc" parameterClass="java.util.HashMap">
		
		BEGIN
		
			UPDATE AC_BILL_EVDC
			   SET EVDC_DIV = #evdcDiv#
			     , EVDC_DESC = #evdcDesc#
			     , VEND_ID = CONVERT(BIGINT, #vendId#)
			     , VEND_NM = #vendNm#
			     , EVDC_AMT = CONVERT(BIGINT, #evdcAmt#)
			     , SPLY_AMT = CONVERT(BIGINT, #splyAmt#)
			     , VAT = CONVERT(BIGINT, #vat#)
			     , ISS_DT = #issDt#
			     , DEDUCT_YN = #deductYn#
			     , ELEC_YN = #elecYn#
			     , APPRO_NO = #approNo#
			     , FILE_ID = CONVERT(BIGINT, #fileId#)
			     , CARD_ENPC = #cardEnpc#
			     , CDNO = #cdno#
			     , APVL_DT = #apvlDt#
			     , BIC_APVL_SEQ = CONVERT(BIGINT, #bicApvlSeq#) 
			     , PRE_EXP_YN = #preExpYn#
			     , BUDG_AMT = CONVERT(BIGINT, #budgAmt#)
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl' 
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
			   
			UPDATE AC_SLIP_DET
			   SET SLIP_AMT = ( SELECT ISNULL(SUM(BUDG_AMT),0)
			                      FROM AC_BILL_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo#
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
								+ ( SELECT ISNULL(SUM(EVDC_AMT),0)
			                      FROM AC_INC_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo# 
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
			 WHERE ACNT_UNT = #acntUnt#
			   AND ACNT_YY  = #acntYy#
			   AND SLIP_NO  = #slipNo#
			   AND SLIP_SEQ = CONVERT(INT, #slipSeq#)		
			   
		END
	</update>
	
	<!-- 증빙내역 탭 삭제 -->
	<delete id="ac02DAO.deleteAc02010p01_t01_02_purc" parameterClass="java.util.HashMap">
		
		BEGIN
		
			DELETE
			  FROM AC_BILL_EVDC
	  	     WHERE 1=1
			   AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
				
			UPDATE AC_SLIP_DET
			   SET SLIP_AMT = ( SELECT ISNULL(SUM(BUDG_AMT),0)
			                      FROM AC_BILL_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo#
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
								+ ( SELECT ISNULL(SUM(EVDC_AMT),0)
			                      FROM AC_INC_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo#
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
			 WHERE ACNT_UNT = #acntUnt#
			   AND ACNT_YY  = #acntYy#
			   AND SLIP_NO  = #slipNo#
			   AND SLIP_SEQ = CONVERT(INT, #slipSeq#)		
		   	
		END
	</delete>
	
	
	
	
	
	
	
	<!--
    #########################################################################################################################################
    # 수입/여입 TAB 원천세 (admi/ac/ac02/ac02010_p01_t01.xfdl)
    #########################################################################################################################################
    -->
    
    <!-- 원천세 탭 조회 -->
    <select id="ac02DAO.selectAc02010p01_t01_03"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , A.ACNT_YY
		     , A.ACNT_UNT
		     , A.VOU_NO
		     , A.VOU_SEQ
		     , A.EVDC_SEQ
		     , A.EVDC_DESC
		     , A.EVDC_AMT
		     , A.FILE_ID
		     , A.INC_DIV
		     , A.RESI_DIV
		     , A.RESI_CNTY
		     , A.ZIP_NO
		     , A.ADDR
		     , A.ADDR_DET
		     , A.REPT_USER_ID
		     , A.REPT_USER_NM
		     , A.RES_NO1
		     , A.RES_NO2
		     , A.RES_NO1 + A.RES_NO2 AS RES_NO
		     , A.NEED_EXP
		     , A.INC_AMT
		     , A.INC_TAX
		     , A.RES_TAX
		     , A.INC_TAX_RT
		     , A.PYMT_DT
		     , A.REPT_YYMM
		     , A.WRK_DD_CNT
		     , A.WRK_UNTPRC
		     , B.FILE_MASTER_NO
             , B.ORG_FILE_NM
             , A.PRE_EXP_YN
             , A.SLIP_NO
             , A.SLIP_SEQ
             , A.MEMBER_CNT
             , ISNULL(A.FOREIGN_YN, '0') AS FOREIGN_YN
             , A.FOREIGN_NO
		  FROM AC_INC_EVDC A WITH(NOLOCK)
		       LEFT OUTER JOIN (SELECT A.FILE_MASTER_NO
					                  ,STUFF((SELECT ',' + ORG_FILE_NM
												FROM COM_FILE_SUB
											   WHERE FILE_MASTER_NO = A.FILE_MASTER_NO
											   ORDER BY FILE_SEQ
												 FOR XML PATH('')),1,1,'') as ORG_FILE_NM
					              FROM COM_FILE A WITH(NOLOCK)
					             GROUP BY A.FILE_MASTER_NO) B
	            ON A.FILE_ID = B.FILE_MASTER_NO
		 WHERE A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
		   AND A.VOU_SEQ = CONVERT(INT, #vouSeq#)
		   AND ISNULL(A.SLIP_NO, '') = #slipNo#
		   <isEqual property="preExpYn" compareValue="1">
		   AND A.PRE_EXP_YN = '1'
		   </isEqual>
		   <isNotEqual property="preExpYn" compareValue="1">
		   AND ( ISNULL(A.PRE_EXP_YN, '0') = '0' OR A.PRE_EXP_YN = '' )
		   </isNotEqual>
		 ORDER BY A.ACNT_YY, A.ACNT_UNT, A.VOU_NO, A.VOU_SEQ, A.EVDC_SEQ
    </select> 
    
    <!-- 원천세 탭 신규 -->
    <insert id="ac02DAO.insertAc02010p01_t01_03" parameterClass="java.util.HashMap">
		
		BEGIN
		
			INSERT INTO AC_INC_EVDC
						(
						  ACNT_YY
					    , ACNT_UNT
					    , VOU_NO
					    , VOU_SEQ
					    , EVDC_SEQ
					    , EVDC_DESC
					    , EVDC_AMT
					    , FILE_ID
					    , INC_DIV
					    , RESI_DIV
					    , RESI_CNTY
					    , ZIP_NO
					    , ADDR
					    , ADDR_DET
					    , REPT_USER_ID
					    , REPT_USER_NM
					    , RES_NO1
					    , RES_NO2
					    , RES_NO
					    , NEED_EXP
					    , INC_AMT
					    , INC_TAX
					    , RES_TAX
					    , INC_TAX_RT
					    , PYMT_DT
					    , REPT_YYMM
					    , WRK_DD_CNT
					    , WRK_UNTPRC
					    , PRE_EXP_YN 
					    , SLIP_NO
					    , SLIP_SEQ
					    , MEMBER_CNT
					    , INSERT_DT
						, INSERT_ID
						, INSERT_IP
						, INSERT_PGM
						, FOREIGN_YN
						, FOREIGN_NO
						)
					VALUES
						(
						  #acntYy#
					    , #acntUnt#
					    , #vouNo#
					    , CONVERT(INT, #vouSeq#)
					    , ( 
							SELECT ISNULL(MAX(CONVERT(INT, EVDC_SEQ)), 0) + 1
	  				   		  FROM AC_INC_EVDC WITH(NOLOCK)
	  				  		 WHERE 1=1
					           AND ACNT_YY = #acntYy#
							   AND ACNT_UNT = #acntUnt#
							   AND VOU_NO = #vouNo#
							   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
	   					  )
					    , #evdcDesc#
					    , CONVERT(BIGINT, #evdcAmt#)
					    , CONVERT(BIGINT, #fileId#)
					    , #incDiv#
					    , #resiDiv#
					    , #resiCnty#
					    , REPLACE(CONVERT(VARCHAR, #zipNo#), '-', '')
					    , #addr#
					    , #addrDet#
					    , #reptUserId#
					    , #reptUserNm#
					    , SUBSTRING(#resNo#, 1, 6)
					    , SUBSTRING(#resNo#, 7, 7)
					    , REPLACE(#resNo#, '-', '')
					    , FLOOR(CONVERT(BIGINT, #needExp#))
					    , FLOOR(CONVERT(BIGINT, #incAmt#))
					    , FLOOR(CONVERT(BIGINT, #incTax#))
					    , FLOOR(CONVERT(BIGINT, #resTax#))
					    , CASE WHEN #incTaxRt# IS NULL OR #incTaxRt# = '' THEN NULL ELSE CONVERT(NUMERIC(5,2), CASE WHEN #incTaxRt# = '' THEN 0 ELSE #incTaxRt# END) END
					    , #pymtDt#
					    , #reptYymm#
					    , CONVERT(INT, #wrkDdCnt#)
					    , CONVERT(BIGINT, #wrkUntprc#)
					    , CONVERT(VARCHAR, #preExpYn#)
					    , #slipNo#
                        , CONVERT(INT, #slipSeq#)
                        , #memberCnt#
					    , GETDATE()
						, #insertId#
						, #insertIp#
						, 'ac02010_p01_t01.xfdl'
						, #foreignYn#
						, #foreignNo#
						)
						
			
			UPDATE AC_VOU_DET
			   SET APLY_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.EVDC_AMT) * -1
								                     										    WHEN '22' THEN SUM(A.EVDC_AMT) * -1
								                     										    ELSE SUM(A.EVDC_AMT)
								        END
								  FROM (
										SELECT A.EVDC_AMT
								          FROM AC_INC_EVDC A 
                                               LEFT OUTER JOIN AC_VOU B
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT A.BUDG_AMT
								          FROM AC_BILL_EVDC A 
                              			      ,AC_VOU B 
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')								        
								        ) A
								  WHERE 1=1			   
			   				  )
			   	 , CFM_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.EVDC_AMT) * -1
								                     										    WHEN '22' THEN SUM(A.EVDC_AMT) * -1
								                     										    ELSE SUM(A.EVDC_AMT)
								        END
								  FROM (
										SELECT A.EVDC_AMT
								          FROM AC_INC_EVDC A 
                                               LEFT OUTER JOIN AC_VOU B
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT A.BUDG_AMT
								          FROM AC_BILL_EVDC A 
                              			      ,AC_VOU B 
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')								        
								        ) A
								  WHERE 1=1			   
			   				  )
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   
						
		END
	</insert>
	
	<!-- 원천세 탭 저장 -->
	<update id="ac02DAO.updateAc02010p01_t01_03" parameterClass="java.util.HashMap">
		
		BEGIN
		
			UPDATE AC_INC_EVDC
			   SET EVDC_DESC = #evdcDesc#
			     , EVDC_AMT = CONVERT(BIGINT, #evdcAmt#)
			     , FILE_ID = CONVERT(BIGINT, #fileId#)
			     , INC_DIV = #incDiv#
			     , RESI_DIV = #resiDiv#
			     , RESI_CNTY = #resiCnty#
			     , ZIP_NO = REPLACE(#zipNo#, '-', '')
			     , ADDR = #addr#
			     , ADDR_DET = #addrDet#
			     , REPT_USER_ID = #reptUserId#
			     , REPT_USER_NM = #reptUserNm#
			     , RES_NO1 = SUBSTRING(#resNo#, 1, 6)
			     , RES_NO2 = SUBSTRING(REPLACE(#resNo#, '-', ''), 7, 7)
			     , RES_NO = REPLACE(#resNo#, '-', '')
			     , NEED_EXP = CONVERT(BIGINT, #needExp#)
			     , INC_AMT = CONVERT(BIGINT, #incAmt#)
			     , INC_TAX = CONVERT(BIGINT, #incTax#)
			     , RES_TAX = CONVERT(BIGINT, #resTax#)
			     , INC_TAX_RT = CASE WHEN #incTaxRt# IS NULL OR #incTaxRt# = '' THEN NULL ELSE CONVERT(NUMERIC(5,2), CASE WHEN #incTaxRt# = '' THEN 0 ELSE floor(#incTaxRt#) END) END
			     , PYMT_DT = #pymtDt#
			     , REPT_YYMM = #reptYymm#
			     , WRK_DD_CNT = CONVERT(INT, #wrkDdCnt#)
			     , WRK_UNTPRC = CONVERT(BIGINT, #wrkUntprc#)
			     , MEMBER_CNT = #memberCnt#
			     , PRE_EXP_YN = #preExpYn#
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
				 , FOREIGN_YN = #foreignYn#
				 , FOREIGN_NO = #foreignNo#
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
		   
		    UPDATE AC_VOU_DET
			   SET APLY_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.EVDC_AMT) * -1
								                     										    WHEN '22' THEN SUM(A.EVDC_AMT) * -1
								                     										    ELSE SUM(A.EVDC_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT
								          FROM AC_INC_EVDC A 
                                               LEFT OUTER JOIN AC_VOU B
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT A.BUDG_AMT
								          FROM AC_BILL_EVDC A 
                              			      ,AC_VOU B 
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			   	 , CFM_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.EVDC_AMT) * -1
								                     										    WHEN '22' THEN SUM(A.EVDC_AMT) * -1
								                     										    ELSE SUM(A.EVDC_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT
								          FROM AC_INC_EVDC A 
                                               LEFT OUTER JOIN AC_VOU B
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT A.BUDG_AMT
								          FROM AC_BILL_EVDC A 
                              			      ,AC_VOU B 
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
		   
		END
	</update>
	
	<!-- 원천세 탭 file_id 저장 -->
	<update id="ac02DAO.updateAc02010p01_t02_02_file" parameterClass="java.util.HashMap">
		
			UPDATE AC_INC_EVDC
			   SET FILE_ID = CONVERT(BIGINT, #fileId#)
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
		   
	</update>
	
	<!-- 원천세 탭 삭제 -->
	<delete id="ac02DAO.deleteAc02010p01_t01_03" parameterClass="java.util.HashMap">
		
		BEGIN
		
			DELETE 
			  FROM AC_INC_EVDC
			 WHERE ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
			
			UPDATE AC_VOU_DET
			   SET APLY_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.EVDC_AMT) * -1
								                     										    WHEN '22' THEN SUM(A.EVDC_AMT) * -1
								                     										    ELSE SUM(A.EVDC_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT
								          FROM AC_INC_EVDC A 
                                               LEFT OUTER JOIN AC_VOU B
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT A.BUDG_AMT
								          FROM AC_BILL_EVDC A 
                              			      ,AC_VOU B 
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			   	 , CFM_AMT = (
								SELECT CASE dbo.F_AC_GET_VOU_KND(#acntUnt#, #acntYy#, #vouNo#) WHEN '12' THEN SUM(A.EVDC_AMT) * -1
								                     										    WHEN '22' THEN SUM(A.EVDC_AMT) * -1
								                     										    ELSE SUM(A.EVDC_AMT)
								        END
								  FROM (
								        SELECT A.EVDC_AMT
								          FROM AC_INC_EVDC A 
                                               LEFT OUTER JOIN AC_VOU B
		                                           ON  A.ACNT_YY  = B.ACNT_YY
		                                           AND A.ACNT_UNT = B.ACNT_UNT
										           AND A.VOU_NO   = B.VOU_NO
								         WHERE A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        
								        UNION ALL
								 
								        SELECT A.BUDG_AMT
								          FROM AC_BILL_EVDC A 
                              			      ,AC_VOU B 
								         WHERE A.ACNT_YY  = B.ACNT_YY
                                           AND A.ACNT_UNT = B.ACNT_UNT
								           AND A.VOU_NO   = B.VOU_NO
								           AND A.ACNT_YY  = #acntYy#
										   AND A.ACNT_UNT = #acntUnt#
										   AND A.VOU_NO   = #vouNo#
										   AND A.VOU_SEQ  = CONVERT(INT, #vouSeq#)
										   AND (A.PRE_EXP_YN IS NULL OR A.PRE_EXP_YN = '' OR A.PRE_EXP_YN = '0')
								        ) A
								  WHERE 1=1			   
			   				  )
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   
		END
	</delete>
	
	
	<!-- 원천세 탭 신규 -->
    <insert id="ac02DAO.insertAc02010p01_t01_03_purc" parameterClass="java.util.HashMap">
		
		BEGIN
		
			INSERT INTO AC_INC_EVDC
						(
						  ACNT_YY
					    , ACNT_UNT
					    , VOU_NO
					    , VOU_SEQ
					    , EVDC_SEQ
					    , EVDC_DESC
					    , EVDC_AMT
					    , FILE_ID
					    , INC_DIV
					    , RESI_DIV
					    , RESI_CNTY
					    , ZIP_NO
					    , ADDR
					    , ADDR_DET
					    , REPT_USER_ID
					    , REPT_USER_NM
					    , RES_NO1
					    , RES_NO2
					    , RES_NO
					    , NEED_EXP
					    , INC_AMT
					    , INC_TAX
					    , RES_TAX
					    , INC_TAX_RT
					    , PYMT_DT
					    , REPT_YYMM
					    , WRK_DD_CNT
					    , WRK_UNTPRC
					    , PRE_EXP_YN 
					    , SLIP_NO
					    , SLIP_SEQ
					    , BUDG_AMT
					    , FOREIGN_YN
					    , FOREIGN_NO
					    , INSERT_DT
						, INSERT_ID
						, INSERT_IP
						, INSERT_PGM
						)
					VALUES
						(
						  #acntYy#
					    , #acntUnt#
					    , #vouNo#
					    , CONVERT(INT, #vouSeq#)
					    , ( 
							SELECT ISNULL(MAX(CONVERT(INT, EVDC_SEQ)), 0) + 1
	  				   		  FROM AC_INC_EVDC
	  				  		 WHERE 1=1
					           AND ACNT_YY = #acntYy#
							   AND ACNT_UNT = #acntUnt#
							   AND VOU_NO = #vouNo#
							   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
	   					  )
					    , #evdcDesc#
					    , CONVERT(BIGINT, #evdcAmt#)
					    , CONVERT(BIGINT, #fileId#)
					    , #incDiv#
					    , #resiDiv#
					    , #resiCnty#
					    , REPLACE(#zipNo#, '-', '')
					    , #addr#
					    , #addrDet#
					    , #reptUserId#
					    , #reptUserNm#
					    , SUBSTRING(#resNo#, 1, 6)
					    , SUBSTRING(REPLACE(#resNo#, '-', ''), 7, 7)
					    , REPLACE(#resNo#, '-', '')
					    , CONVERT(BIGINT, #needExp#)
					    , CONVERT(BIGINT, #incAmt#)
					    , CONVERT(BIGINT, #incTax#)
					    , CONVERT(BIGINT, #resTax#)
					    , CASE WHEN #incTaxRt# IS NULL OR #incTaxRt# = '' THEN NULL ELSE CONVERT(NUMERIC(5,2), CASE WHEN #incTaxRt# = '' THEN 0 ELSE #incTaxRt# END) END
					    , #pymtDt#
					    , #reptYymm#
					    , CONVERT(INT, #wrkDdCnt#)
					    , CONVERT(INT, #wrkUntprc#)
					    , #preExpYn#
					    , #slipNo#
					    , CONVERT(INT, #slipSeq#)
					    , CONVERT(BIGINT, #budgAmt#)
					    , #foreignYn#
					    , #foreignNo#
					    , GETDATE()
						, #insertId#
						, #insertIp#
						, 'ac02010_p01_t01.xfdl'
						)
						
			
		UPDATE AC_SLIP_DET
		   SET SLIP_AMT = ( SELECT ISNULL(SUM(BUDG_AMT),0)
		                      FROM AC_BILL_EVDC
		                     WHERE ACNT_UNT = #acntUnt#
							   AND ACNT_YY  = #acntYy#
							   AND SLIP_NO  = #slipNo# 
							   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
							+ ( SELECT ISNULL(SUM(EVDC_AMT),0)
		                      FROM AC_INC_EVDC
		                     WHERE ACNT_UNT = #acntUnt#
							   AND ACNT_YY  = #acntYy#
							   AND SLIP_NO  = #slipNo#
							   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
		 WHERE ACNT_UNT = #acntUnt#
		   AND ACNT_YY  = #acntYy#
		   AND SLIP_NO  = #slipNo#
		   AND SLIP_SEQ = CONVERT(INT, #slipSeq#)		
						
		END
	</insert>
	
	<!-- 원천세 탭 저장 -->
	<update id="ac02DAO.updateAc02010p01_t01_03_purc" parameterClass="java.util.HashMap">
			
		BEGIN
		
			UPDATE AC_INC_EVDC
			   SET EVDC_DESC = #evdcDesc#
			     , EVDC_AMT = CONVERT(BIGINT, #evdcAmt#)
			     , FILE_ID = CONVERT(BIGINT, #fileId#)
			     , INC_DIV = #incDiv#
			     , RESI_DIV = #resiDiv#
			     , RESI_CNTY = #resiCnty#
			     , ZIP_NO = REPLACE(#zipNo#, '-', '')
			     , ADDR = #addr#
			     , ADDR_DET = #addrDet#
			     , REPT_USER_ID = #reptUserId#
			     , REPT_USER_NM = #reptUserNm#
			     , RES_NO1 = SUBSTRING(#resNo#, 1, 6)
			     , RES_NO2 = SUBSTRING(REPLACE(#resNo#, '-', ''), 7, 7)
			     , RES_NO = REPLACE(#resNo#, '-', '')
			     , NEED_EXP = CONVERT(BIGINT, #needExp#)
			     , INC_AMT = CONVERT(BIGINT, #incAmt#)
			     , INC_TAX = CONVERT(BIGINT, #incTax#)
			     , RES_TAX = CONVERT(BIGINT, #resTax#)
			     , INC_TAX_RT = CASE WHEN #incTaxRt# IS NULL OR #incTaxRt# = '' THEN NULL ELSE CONVERT(NUMERIC(5,2), CASE WHEN #incTaxRt# = '' THEN 0 ELSE floor(#incTaxRt#) END) END
			     , PYMT_DT = #pymtDt#
			     , REPT_YYMM = #reptYymm#
			     , WRK_DD_CNT = CONVERT(INT, #wrkDdCnt#)
			     , WRK_UNTPRC = CONVERT(BIGINT, #wrkUntprc#)
			     , PRE_EXP_YN = #preExpYn#
			     , BUDG_AMT   = CONVERT(BIGINT, #budgAmt#)
			     , FOREIGN_YN = #foreignYn#
			     , FOREIGN_NO = #foreignNo#
			     , UPDATE_DT = GETDATE()
				 , UPDATE_ID = #updateId#
				 , UPDATE_IP = #updateIp#
				 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
	         WHERE 1=1
	           AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
			UPDATE AC_SLIP_DET
			   SET SLIP_AMT = ( SELECT ISNULL(SUM(BUDG_AMT),0)
			                      FROM AC_BILL_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo#
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
								+ ( SELECT ISNULL(SUM(EVDC_AMT),0)
			                      FROM AC_INC_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo#
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
			 WHERE ACNT_UNT = #acntUnt#
			   AND ACNT_YY  = #acntYy#
			   AND SLIP_NO  = #slipNo#
			   AND SLIP_SEQ = CONVERT(INT, #slipSeq#)		   

		   
		END
	</update>
	
	
	<!-- 원천세 탭 삭제 -->
	<delete id="ac02DAO.deleteAc02010p01_t01_03_purc" parameterClass="java.util.HashMap">
		
		BEGIN
		
			DELETE 
			  FROM AC_INC_EVDC
			 WHERE 1=1
			   AND ACNT_YY = #acntYy#
			   AND ACNT_UNT = #acntUnt#
			   AND VOU_NO = #vouNo#
			   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
			   AND EVDC_SEQ = CONVERT(INT, #evdcSeq#)
			   
			
			UPDATE AC_SLIP_DET
			   SET SLIP_AMT = ( SELECT ISNULL(SUM(BUDG_AMT),0)
			                      FROM AC_BILL_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo#
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
								+ ( SELECT ISNULL(SUM(EVDC_AMT),0)
			                      FROM AC_INC_EVDC
			                     WHERE ACNT_UNT = #acntUnt#
								   AND ACNT_YY  = #acntYy#
								   AND SLIP_NO  = #slipNo#
								   AND SLIP_SEQ = CONVERT(INT, #slipSeq#) )
			 WHERE ACNT_UNT = #acntUnt#
			   AND ACNT_YY  = #acntYy#
			   AND SLIP_NO  = #slipNo#
			   AND SLIP_SEQ = CONVERT(INT, #slipSeq#)		
		   
			   
		END
	</delete>
	
	
	
	<!--
    #########################################################################################################################################
    # 수입/여입 TAB 계좌내역(입금) (admi/ac/ac02/ac02010_p01_t01.xfdl)
    #########################################################################################################################################
    -->
    
    <select id="ac02DAO.selectAc02010p01_t01_04"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , ACNT_UNT
		     , ACNT_YY
             , VOU_NO
		     , RCPT_SEQ
		     , ACNT_NO
             , BANK_CD
             , DEPOSR
             , RCPT_AMT
             , BNKCD
             , TDT
             , ACNO
             , TRNF_SEQ 
		  FROM AC_RCPT_DESC WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, RCPT_SEQ
    </select> 
    
    <insert id="ac02DAO.insertAc02010p01_t01_04" parameterClass="java.util.HashMap">
    
		INSERT INTO AC_RCPT_DESC
					(
					  ACNT_UNT
				    , ACNT_YY
		            , VOU_NO
				    , RCPT_SEQ
				    , ACNT_NO
		            , BANK_CD
		            , DEPOSR
		            , RCPT_AMT
		            , BNKCD
		            , TDT
		            , ACNO
		            , TRNF_SEQ 
				    , INSERT_DT
					, INSERT_ID
					, INSERT_IP
					, INSERT_PGM
					)
				VALUES
					(
					  #acntUnt#
				    , #acntYy#
		            , #vouNo#
				    , ( 
						SELECT ISNULL(MAX(CONVERT(INT, RCPT_SEQ)), 0) + 1
  				   		  FROM AC_RCPT_DESC
  				  		 WHERE 1=1
				           AND ACNT_UNT = #acntUnt#
				           AND ACNT_YY = #acntYy#
						   AND VOU_NO = #vouNo#
   					  )
				    , REPLACE(#acntNo#, '-', '')
		            , #bankCd#
		            , #deposr#
		            , CONVERT(BIGINT, #rcptAmt#)
		            , #bnkcd#
		            , #tdt#
		            , #acno#
		            , CONVERT(BIGINT, #trnfSeq#)
				    , GETDATE()
					, #insertId#
					, #insertIp#
					, 'ac02010_p01_t01.xfdl'
					)
					
	</insert>
	
	<update id="ac02DAO.updateAc02010p01_t01_04" parameterClass="java.util.HashMap">
		UPDATE AC_RCPT_DESC
		   SET ACNT_NO = REPLACE(#acntNo#, '-', '')
	         , BANK_CD = #bankCd#
	         , DEPOSR = #deposr#
	         , RCPT_AMT = CONVERT(BIGINT, #rcptAmt#)
             , BNKCD = #bnkcd#
             , TDT = #tdt#
             , ACNO = #acno#
             , TRNF_SEQ = CONVERT(BIGINT, #trnfSeq#)
		     , UPDATE_DT = GETDATE()
			 , UPDATE_ID = #updateId#
			 , UPDATE_IP = #updateIp#
			 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
         WHERE 1=1
           AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND RCPT_SEQ = CONVERT(INT, #rcptSeq#)
	</update>
	
	<delete id="ac02DAO.deleteAc02010p01_t01_04" parameterClass="java.util.HashMap">
		DELETE 
		  FROM AC_RCPT_DESC
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
	   	   AND ACNT_UNT = #acntUnt#
	   	   AND VOU_NO = #vouNo#
	   	   AND RCPT_SEQ = CONVERT(INT, #rcptSeq#)
	</delete>
	
	
	
	
	
	<!--
    #########################################################################################################################################
    # 수입/여입 TAB 계좌내역(지급) (admi/ac/ac02/ac02010_p01_t01.xfdl)
    #########################################################################################################################################
    -->
    
    <select id="ac02DAO.selectAc02010p01_t01_05"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , ACNT_UNT
		     , ACNT_YY
		     , VOU_NO
		     , PYMT_SEQ
		     , BACCT_DIV
		     , ACNT_NO
		     , BANK_CD
		     , DEPOSR
		     , PYMT_AMT 
		     , PYMT_MSG
		     , PYMT_DIV
		  FROM AC_PYMT WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND ISNULL(SLIP_NO, '') = #slipNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, PYMT_SEQ
    </select> 
    
    <insert id="ac02DAO.insertAc02010p01_t01_05" parameterClass="java.util.HashMap">
		INSERT INTO AC_PYMT
					(
					  ACNT_UNT
					, ACNT_YY
					, VOU_NO
					, PYMT_SEQ
					, BACCT_DIV
					, ACNT_NO
					, BANK_CD
					, DEPOSR
					, PYMT_AMT 
					, PYMT_MSG
					, PYMT_DIV
					, SLIP_NO
				    , INSERT_DT
					, INSERT_ID
					, INSERT_IP
					, INSERT_PGM
					)
				VALUES
					(
					  #acntUnt#
					, #acntYy#
					, #vouNo#
				    , ( 
						SELECT ISNULL(MAX(CONVERT(INT, PYMT_SEQ)), 0) + 1
  				   		  FROM AC_PYMT
  				  		 WHERE 1=1
						   AND ACNT_UNT = #acntUnt#
						   AND ACNT_YY = #acntYy#
						   AND VOU_NO = #vouNo#
   					  )
				    , #bacctDiv#
					, #acntNo#
					, #bankCd#
					, #deposr#
					, CONVERT(BIGINT, #pymtAmt#)
					, #pymtMsg#
					, #pymtDiv#
					, #slipNo#
				    , GETDATE()
					, #insertId#
					, #insertIp#
					, 'ac02010_p01_t01.xfdl'
					)
	</insert>
	
	<update id="ac02DAO.updateAc02010p01_t01_05" parameterClass="java.util.HashMap">
	    UPDATE AC_PYMT
		   SET BACCT_DIV = #bacctDiv#
			 , ACNT_NO = #acntNo#
			 , BANK_CD = #bankCd#
			 , DEPOSR = #deposr#
			 , PYMT_AMT = CONVERT(BIGINT, #pymtAmt#)
			 , PYMT_MSG = #pymtMsg#
			 , PYMT_DIV = #pymtDiv#
		     , UPDATE_DT = GETDATE()
			 , UPDATE_ID = #updateId#
			 , UPDATE_IP = #updateIp#
			 , UPDATE_PGM = 'ac02010_p01_t01.xfdl'
         WHERE 1=1
           AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND PYMT_SEQ = CONVERT(INT, #pymtSeq#)
	</update>
	
	<delete id="ac02DAO.deleteAc02010p01_t01_05" parameterClass="java.util.HashMap">
		DELETE 
		  FROM AC_PYMT
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND PYMT_SEQ = CONVERT(INT, #pymtSeq#)
	</delete>
	
	
	<!--
    #########################################################################################################################################
    # 진행상태 처리 SP
    #########################################################################################################################################
    -->
    
    <parameterMap id="P_AC_STA_CD_PROC_param" class="java.util.HashMap">
        
        <parameter property="acntYy" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="acntUnt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="vouNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="msg" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="procCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userIp" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userPgm" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="cfmDt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="OUT_CNT" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.P_AC_STA_CD_PROC" parameterMap = "P_AC_STA_CD_PROC_param"> 
           {call dbo.SP_AC_STA_CD_PROC(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)}              
    </procedure>
    
    <parameterMap id="CHK_VOU_PYMT_PROC_param" class="java.util.HashMap">
        
        <parameter property="acntYy" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="acntUnt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="vouNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="OUT_CNT" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
    
    <procedure id="ac02DAO.CHK_VOU_PYMT_PROC" parameterMap = "CHK_VOU_PYMT_PROC_param"> 
           {call dbo.SP_AC_VOU_PYMT_VALID_CHK(?, ?, ?, ?, ?)}              
    </procedure>
    
    <parameterMap id="P_AC_STA_CD_PROC_PUCH_param" class="java.util.HashMap">
        
        <parameter property="acntYy" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="acntUnt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="slipNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="msg" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="procCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userIp" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userPgm" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="cfmDt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="OUT_CNT" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.P_AC_STA_CD_PROC_PUCH" parameterMap = "P_AC_STA_CD_PROC_PUCH_param"> 
           {call dbo.SP_AC_STA_CD_PROC_PUCH(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)}              
    </procedure>
	
	
	<!--
    #########################################################################################################################################
    # 결의서접수 (admi/ac/ac02/ac02020.xfdl)
    #########################################################################################################################################
    -->
    
    <select id="ac02DAO.selectAc02020_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , (
		        SELECT ACNT_UNT_NM
		          FROM BG_UNT
		         WHERE 1=1
		           AND ACNT_UNT = A.ACNT_UNT 
		       ) AS ACNT_UNT_NM
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_ORG_ID AS VOU_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.VOU_ORG_ID, 'DEPT_NM_KOR') AS VOU_ORG_ID_NM
		     , A.VOU_KND AS VOU_KND 
		     , dbo.F_COM_CODE_NM('AC001', A.VOU_KND, 'KOR') AS VOU_KND_NM 
		     , A.VOU_TTL AS VOU_TTL 
		     , A.STA_CD AS STA_CD 
		     , dbo.F_COM_CODE_NM('AC002', A.STA_CD, 'KOR') AS STA_CD_NM 
		     , ISNULL(C.VOU_SEQ, 0) AS VOU_SEQ_CNT
		     , dbo.F_AC_GET_VOU_AMT_SUM(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO) AS APLY_AMT_SUM
		     , A.APLY_USER_ID AS APLY_USER_ID
       		 , dbo.F_COM_USER_NM(A.APLY_USER_ID, 'NM') AS APLY_USER_ID_NM
       		 , A.APLY_DT AS APLY_DT
	         , A.CTRL_USER_ID AS CTRL_USER_ID
       		 , dbo.F_COM_USER_NM(A.CTRL_USER_ID, 'NM') AS CTRL_USER_ID_NM
       		 , A.CTRL_DT AS CTRL_DT
       	     , A.APPRO_USER_ID AS APPRO_USER_ID
       		 , dbo.F_COM_USER_NM(A.APPRO_USER_ID, 'NM') AS APPRO_USER_ID_NM
             , A.APPRO_DT AS APPRO_DT
		     , A.RECV_USER_ID AS RECV_USER_ID
       		 , dbo.F_COM_USER_NM(A.RECV_USER_ID, 'NM') AS RECV_USER_ID_NM
       		 , A.RECV_DT AS RECV_DT
	         , D.SLIP_CFM_USER_ID AS SLIP_CFM_USER_ID
             , dbo.F_COM_USER_NM(D.SLIP_CFM_USER_ID, 'NM') AS SLIP_CFM_USER_ID_NM
             , ISNULL(D.SLIP_CFM_DT, A.SLIP_CFM_DT) AS SLIP_CFM_DT
             , D.ELEC_APPRO_ID
             , D.APPROVAL_DOCID
             , A.RECV_ORG_ID
             , D.SLIP_NO
             , A.ADDR_DEPT
             , D.SD_VENDOR_DESC
             , A.PROMISE_DT
             , A.ELEC_AMT
             , D.JUKYO
             , A.CFM_RSN
             , ISNULL(A.PRE_EXP_YN, '0') AS PRE_EXP_YN
		  FROM AC_VOU A WITH(NOLOCK)
		 INNER 
		  JOIN (
		        SELECT DISTINCT A.ACNT_UNT
		             , A.ACNT_YY
		             , A.VOU_NO
		          FROM AC_VOU A WITH(NOLOCK)
		          LEFT 
		         OUTER 
		          JOIN AC_VOU_DET B WITH(NOLOCK)
		            ON A.ACNT_UNT = B.ACNT_UNT
		           AND A.ACNT_YY = B.ACNT_YY
		           AND A.VOU_NO = B.VOU_NO
		         WHERE 1=1         
		        <isNotEmpty property="bizCd">
		           AND B.BIZ_CD = #bizCd#
		        </isNotEmpty>
		        <isNotEmpty property="acntCd">
		           AND B.ACNT_CD = #acntCd#
		        </isNotEmpty>
		      ) B
		   ON A.ACNT_UNT = B.ACNT_UNT
		  AND A.ACNT_YY = B.ACNT_YY
		  AND A.VOU_NO = B.VOU_NO
		 LEFT 
		OUTER 
		 JOIN ( 
		        SELECT ACNT_UNT
		             , ACNT_YY
		             , VOU_NO
		             , SUM(APLY_AMT) AS APLY_AMT
		             , COUNT(1) AS VOU_SEQ
		          FROM AC_VOU_DET WITH(NOLOCK)
		         GROUP BY ACNT_UNT, ACNT_YY, VOU_NO 
		      ) C
		   ON A.ACNT_UNT = C.ACNT_UNT
		  AND A.ACNT_YY = C.ACNT_YY
		  AND A.VOU_NO = C.VOU_NO
		  LEFT
		OUTER
		 JOIN AC_SLIP D WITH(NOLOCK)
		   ON A.ACNT_UNT = D.ACNT_UNT
		  AND A.ACNT_YY = D.ACNT_YY
		  AND A.SLIP_NO = D.SLIP_NO
		  AND A.VOU_NO = D.VOU_NO
		WHERE 1=1
		  AND A.ACNT_YY = #acntYy#
		  AND A.ACNT_UNT = #acntUnt#
		  <isNotEqual property="adminGb" compareValue="dev1">
			  <isNotEmpty property="addrDept">
			  AND A.ADDR_DEPT = #addrDept#
			  </isNotEmpty>
		  </isNotEqual>	  
				  
		<isNotEmpty property="vouOrgId">
		  AND A.VOU_ORG_ID = #vouOrgId#
		</isNotEmpty>
			   
		<isNotEmpty property="vouKnd">
		  AND A.VOU_KND = #vouKnd#
		</isNotEmpty>
		   
		<isNotEmpty property="staCd">
		  AND A.STA_CD = #staCd#
		</isNotEmpty>
		
		<isNotEmpty property="recvOrgId">
		  AND A.RECV_ORG_ID = #recvOrgId#
		</isNotEmpty>

		  	
		<isNotEmpty property="dtDiv">

			<isEqual property="dtDiv" compareValue="10">
		  		<isNotEmpty property="sttDt">
		  			AND A.APPRO_DT &gt;= #sttDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="endDt">
		  			AND A.APPRO_DT &lt;= #endDt# 
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userId">
		  			AND A.APPRO_USER_ID = #userId# 
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userNm">
		  			AND ( A.APPRO_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(A.APPRO_USER_ID, 'NM') LIKE '%' + #userNm# + '%' ) 
		  		</isNotEmpty>  		  	  		  		  		
		  	</isEqual>
			
			<isEqual property="dtDiv" compareValue="20">
		  		<isNotEmpty property="sttDt">
		  			AND A.RECV_DT &gt;= #sttDt#
				</isNotEmpty>
				
				<isNotEmpty property="endDt">
		  			AND A.RECV_DT &lt;= #endDt#
				</isNotEmpty>
				
				<isNotEmpty property="userId">
		  			AND A.RECV_USER_ID = #userId#
				</isNotEmpty>

				<isNotEmpty property="userNm">
		  			AND (    A.RECV_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(A.RECV_USER_ID, 'NM') LIKE '%' + #userNm# + '%' )
				</isNotEmpty>				
				 
		  	</isEqual>
		  	
		</isNotEmpty>
		
			   
		<isNotEmpty property="vouNo">
		  AND A.VOU_NO LIKE '%' + REPLACE(#vouNo#, '-', '') + '%'
		</isNotEmpty>
		   
		<isNotEmpty property="vouTtl">
		  AND A.VOU_TTL LIKE '%' + #vouTtl# + '%'
		</isNotEmpty>
		
		<isEqual property="privateSearchYn" compareValue="1">
		  AND ( A.ACC_EMP_ID = #memberNo# )
		</isEqual>
				
     ORDER BY A.ACNT_YY, A.ACNT_UNT, A.VOU_NO DESC, A.STA_CD
    </select>
    
    <select id="ac02DAO.selectAc02020_purc_p01_1"  parameterClass="java.util.HashMap" resultClass="egovMap">
    	SELECT '' AS CHK
    	      ,'' AS ROW_STATUS
    	      ,ASL.ACNT_UNT
			  ,ASL.ACNT_YY
			  ,ASL.SLIP_NO
			  ,ASL.VOU_NO
			  ,ASL.STA_CD
			  ,ASL.APLY_USER_ID
			  ,dbo.F_COM_USER_NM(ASL.APLY_USER_ID, 'NM') AS APLY_USER_NM
			  ,ASL.APLY_DT
			  ,ASL.APPRO_USER_ID
			  ,dbo.F_COM_USER_NM(ASL.APPRO_USER_ID, 'NM') AS APPRO_USER_NM
			  ,ASL.APPRO_DT
			  ,ASL.SLIP_CFM_USER_ID
			  ,dbo.F_COM_USER_NM(ASL.SLIP_CFM_USER_ID, 'NM') AS SLIP_CFM_USER_NM
			  ,ASL.SLIP_CFM_DT
			  ,ASL.SLIP_DESC
			  ,ASL.SLIP_NO AS COM_CD
			  ,SUBSTRING(ASL.SLIP_NO,1,8) + '-' + SUBSTRING(ASL.SLIP_NO,9,4) + CASE WHEN ASL.SLIP_DESC IS NOT NULL THEN ' : ' ELSE '' END +ASL.SLIP_DESC AS COM_CD_NM
			  ,AV.VENDOR_ID
        	  ,(SELECT TOP 1 AVE.VEND_NM FROM VW_AC_VEND AVE WHERE AVE.VEND_ID = AV.VENDOR_ID) AS VENDOR_NM
        	  ,ASL.SD_VENDOR_DESC
        	  ,ASL.APPROVAL_DOCID AS SLIP_APPROVAL_DOCID
        	  ,ASL.JUKYO
        	  ,AV.PROMISE_DT
        	  ,AV.ELEC_AMT
		  FROM AC_SLIP ASL WITH(NOLOCK)
          LEFT 
		 OUTER 
		  JOIN AC_VOU AV WITH(NOLOCK)
		    ON ASL.ACNT_UNT = AV.ACNT_UNT
           AND ASL.ACNT_YY  = AV.ACNT_YY
           AND ASL.VOU_NO   = AV.VOU_NO
		 WHERE ASL.ACNT_UNT = #acntUnt#
		   AND ASL.ACNT_YY  = #acntYy#
		   AND ASL.VOU_NO 	= #vouNo#
		   <isNotEmpty property="staCd">
		   AND ASL.STA_CD   = #staCd#
		   </isNotEmpty>  
		 ORDER BY ASL.ACNT_UNT, ASL.ACNT_YY, ASL.SLIP_NO   
    </select>
    
    <parameterMap id="SP_SLIP_CREATE_param" class="java.util.HashMap">
        
        <parameter property="acntYy"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="acntUnt" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="vouNo"   jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="slipNo"     jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        
        <parameter property="vouOrgId"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="vouTtl"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="staCd"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="aplyUserId"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="aplyDt"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        
        <parameter property="userId"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="userIp"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="userPgm"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
         
        <parameter property="OUT_CNT" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.SP_SLIP_CREATE" parameterMap = "SP_SLIP_CREATE_param"> 
           {call dbo.SP_SLIP_CREATE(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)}              
    </procedure>
    
    <insert id="ac02DAO.insertAc02020_purc_p01_1" parameterClass="java.util.HashMap">
    
    </insert>
    
    <update id="ac02DAO.updateAc02020_purc_p01_1" parameterClass="java.util.HashMap">
    	BEGIN
    
	    	UPDATE AC_SLIP
	    	   SET SLIP_DESC = #slipDesc#
	    	     , SD_VENDOR_DESC = #sdVendorDesc#
	    	     , JUKYO = #jukyo#
	    	 WHERE ACNT_UNT  = #acntUnt#
			   AND ACNT_YY   = #acntYy#
			   AND SLIP_NO 	 = #slipNo# 
			
	    	UPDATE AC_VOU
	    	   SET PROMISE_DT = #promiseDt#
	    	     , ELEC_AMT  = #elecAmt#
	    	 WHERE ACNT_UNT  = #acntUnt#
			   AND ACNT_YY   = #acntYy#
			   AND VOU_NO 	 = #vouNo# 
			   
	    END
    </update>
    
    <delete id="ac02DAO.deleteAc02020_purc_p01_1" parameterClass="java.util.HashMap">
    	
    	  BEGIN
    	  
    	  DELETE
    	    FROM AC_PYMT
    	   WHERE ACNT_UNT  = #acntUnt#
		     AND ACNT_YY   = #acntYy#
		     AND SLIP_NO   = #slipNo#
		     
    	  DELETE
    	    FROM AC_BILL_EVDC
    	   WHERE ACNT_UNT  = #acntUnt#
		     AND ACNT_YY   = #acntYy#
		     AND SLIP_NO   = #slipNo#
    	  
    	  DELETE
    	    FROM AC_INC_EVDC
    	   WHERE ACNT_UNT  = #acntUnt#
		     AND ACNT_YY   = #acntYy#
		     AND SLIP_NO   = #slipNo#
    	  
    	  DELETE
    	    FROM AC_SLIP_DET
    	   WHERE ACNT_UNT  = #acntUnt#
		     AND ACNT_YY   = #acntYy#
		     AND SLIP_NO   = #slipNo#
    	  
    	  DELETE
    	    FROM AC_SLIP
    	   WHERE ACNT_UNT  = #acntUnt#
		     AND ACNT_YY   = #acntYy#
		     AND SLIP_NO   = #slipNo#
		     
		     END 
    	  
    </delete>
    
    <select id="ac02DAO.selectAc02020_purc_p01_2"  parameterClass="java.util.HashMap" resultClass="egovMap">
    	SELECT '' AS CHK
    	      ,'' AS ROW_STATUS
    	      ,A.ACNT_UNT
			  ,A.ACNT_YY
			  ,A.SLIP_NO
			  ,A.SLIP_SEQ
			  ,A.ABSTR
			  ,A.DRCR_CD
			  ,A.BUDG_ORG_ID
			  ,(SELECT dbo.F_COM_DEPT_NM(A.BUDG_ORG_ID, 'DEPT_NM_KOR')) AS BUDG_ORG_NM
			  ,A.BIZ_CD
			  ,dbo.F_AC_GET_BIZ_NM(A.ACNT_UNT, A.BIZ_CD, 'BIZ_NM') AS BIZ_NM
			  ,A.ACNT_CD
			  ,dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '40', '') AS MOK_NM
			  ,dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '50', '') AS ACNT_NM
			  ,A.FINC_CD
			  ,dbo.F_AC_GET_BIZ_NM(A.ACNT_UNT, A.BIZ_CD, 'FINC_NM') AS FINC_NM
			  ,A.ACNT_NO
			  ,A.RELV_ACNT_CD
			  ,A.RELV_ACNT_NO
			  ,A.SLIP_AMT
			  ,A.SLIP_CFM_DT
			  ,ISNULL((SELECT ISNULL(INSERT_GB, '0')
				        FROM AC_VOU_DET D
				       WHERE D.ACNT_UNT = A.ACNT_UNT
				         AND D.ACNT_YY = A.ACNT_YY
				         AND D.VOU_NO = B.VOU_NO
				         AND D.VOU_SEQ = A.SLIP_SEQ	), '0') AS INSERT_GB
		  FROM AC_SLIP_DET A WITH(NOLOCK)
		  INNER JOIN AC_SLIP B
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY  = #acntYy#
		   AND A.SLIP_NO 	= #slipNo# 	
		   AND A.AUTO_YN IS NULL
		 ORDER BY A.ACNT_UNT, A.ACNT_YY, A.SLIP_NO, A.SLIP_SEQ       
    </select>
    
    <select id="ac02DAO.selectAc02020_purc_p01_3"  parameterClass="java.util.HashMap" resultClass="egovMap">
    	SELECT '' AS CHK
		     , '' AS ROW_STATUS 
			 , A.ACNT_YY
		     , A.ACNT_UNT
		     , A.VOU_NO
		     , A.VOU_SEQ
		     , A.EVDC_SEQ
		     , A.EVDC_DIV
		     , A.EVDC_DESC
		     , A.VEND_ID
		     , A.VEND_NM
		     , A.EVDC_AMT
		     , A.SPLY_AMT
		     , A.VAT
		     , A.ISS_DT
		     , ISNULL(A.DEDUCT_YN, 0) AS DEDUCT_YN
		     , ISNULL(A.ELEC_YN, 0) AS ELEC_YN
		     , A.APPRO_NO
		     , A.FILE_ID
		     , A.CARD_ENPC
		     , A.CDNO
		     , A.APVL_DT
		     , A.BIC_APVL_SEQ
             , B.FILE_MASTER_NO
             , B.ORG_FILE_NM
             , A.PRE_EXP_YN
             , A.SLIP_NO
             , A.SLIP_SEQ
             , 0 AS SLIP_AMT
             , A.BUDG_AMT
		  FROM AC_BILL_EVDC A WITH(NOLOCK)
	           LEFT OUTER JOIN (SELECT A.FILE_MASTER_NO
					                  ,STUFF((SELECT ',' + ORG_FILE_NM
																FROM COM_FILE_SUB
															   WHERE FILE_MASTER_NO = A.FILE_MASTER_NO
															   ORDER BY FILE_SEQ
																 FOR XML PATH('')),1,1,'') as ORG_FILE_NM
									              FROM COM_FILE A WITH(NOLOCK)
									             GROUP BY A.FILE_MASTER_NO) B
                ON A.FILE_ID = B.FILE_MASTER_NO
		 WHERE A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.SLIP_NO  = #slipNo#
		   AND A.SLIP_SEQ = CONVERT(INT,#slipSeq#) 
		 ORDER BY A.ACNT_UNT, A.ACNT_YY, A.SLIP_NO, A.SLIP_SEQ    	  
    </select>

    <update id="ac02DAO.updateSdVendorDesc" parameterClass="java.util.HashMap">
    	BEGIN
    
	        UPDATE AC_SLIP
			   SET  SD_VENDOR_DESC = #sdVendorDesc#
			      , JUKYO       = #jukyo#
				  , update_dt   = GETDATE()	/* 수정일시 */
			      , update_id 	= #updateId#	/* 수정아이디 */
			      , update_ip 	= #updateIp#	/* 수정아이피 */
			      , update_pgm  = #updatePgm# /* 수정프로그램 */
			 WHERE ACNT_UNT 	= #acntUnt#
			   AND ACNT_YY 		= #acntYy#
			   AND SLIP_NO 		= #slipNo#  
			
	        UPDATE AC_VOU
			   SET PROMISE_DT   = #promiseDt#
			     , ELEC_AMT     = CASE WHEN CONVERT(BIGINT, #elecAmt#) = 0 OR #elecAmt# = '' THEN NULL ELSE CONVERT(BIGINT, #elecAmt#) END
			     , PRE_EXP_YN   = #preExpYn#
			 WHERE ACNT_UNT 	= #acntUnt#
			   AND ACNT_YY 		= #acntYy#
			   AND VOU_NO 		= #vouNo#  
			   
		END
    </update>

    
    <select id="ac02DAO.selectAc02020_t01_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A. ACNT_UNT AS ACNT_UNT
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_SEQ AS VOU_SEQ
		     , A.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM( A.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , A.BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM( A.ACNT_UNT,  A.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , dbo.F_AC_GET_ACNT_INFO( A.ACNT_YY,  A.ACNT_UNT,  A.ACNT_CD, '40', '') AS ACNT_CD_MOK_NM
		     , A.ACNT_CD
		     , dbo.F_AC_GET_ACNT_INFO( A.ACNT_YY,  A.ACNT_UNT,  A.ACNT_CD, '', CASE WHEN A.BAL_DIV = '10' THEN 'ACNT_INC_NM'
		     																		WHEN A.BAL_DIV = '20' THEN 'ACNT_EXP_NM'
		     																		 ELSE 'ACNT_NM' END) AS ACNT_CD_NM
		     , A.BAL_DIV
		     , A.DRCR_CD
		     , A.FINC_CD
		     , dbo.F_AC_GET_BIZ_NM( A.ACNT_UNT,  A.BIZ_CD, 'FINC_NM') AS FINC_CD_NM
		     , A.ACNT_NO
		     , dbo.F_AC_GET_VOU_AMT( A.ACNT_UNT,  A.ACNT_YY,  A.VOU_NO,  A.VOU_SEQ) AS APLY_AMT
		     , dbo.F_AC_ASGN_AMT_SUM( A.ACNT_YY,  A.ACNT_UNT,  A.BUDG_ORG_ID,  A.BIZ_CD,  A.ACNT_CD,  A.BAL_DIV, '') AS ASGN_AMT_SUM
		     , dbo.F_AC_EXEC_AMT_SUM( A.ACNT_YY,  A.ACNT_UNT,  A.BUDG_ORG_ID,  A.BIZ_CD,  A.ACNT_CD,  A.BAL_DIV, '') AS EXEC_AMT_SUM
		     , (dbo.F_AC_ASGN_AMT_SUM( A.ACNT_YY,  A.ACNT_UNT,  A.BUDG_ORG_ID,  A.BIZ_CD,  A.ACNT_CD,  A.BAL_DIV, ''))
				-
			   (dbo.F_AC_EXEC_AMT_SUM( A.ACNT_YY,  A.ACNT_UNT,  A.BUDG_ORG_ID,  A.BIZ_CD,  A.ACNT_CD,  A.BAL_DIV, '')) AS BUDG_BAL
		     , A.CFM_AMT
		     , A.USE_ORG_ID
		     , dbo.F_COM_DEPT_NM( A.USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
             , B.STA_CD
             , A.INSERT_GB
		 FROM AC_VOU_DET A WITH(NOLOCK)
             ,AC_VOU B WITH(NOLOCK)
		 WHERE A.ACNT_YY  = B.ACNT_YY
           AND A.ACNT_UNT = B.ACNT_UNT
           AND A.VOU_NO   = B.VOU_NO
		   AND A.ACNT_YY  = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO   = #vouNo#
		 ORDER BY A.ACNT_YY, A.ACNT_UNT, A.VOU_NO, A.VOU_SEQ
    </select> 
    
    
    <select id="ac02DAO.selectAc02020_t02_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
			 , A.ACNT_YY
		     , A.ACNT_UNT
		     , A.VOU_NO
		     , A.VOU_SEQ
		     , A.EVDC_SEQ
		     , A.EVDC_DIV
		     , A.EVDC_DESC
		     , A.VEND_ID
		     , A.VEND_NM
		     , A.EVDC_AMT
		     , A.SPLY_AMT
		     , A.VAT
		     , A.ISS_DT
		     , ISNULL(A.DEDUCT_YN, 0) AS DEDUCT_YN
		     , ISNULL(A.ELEC_YN, 0) AS ELEC_YN
		     , A.APPRO_NO
		     , A.FILE_ID
		     , A.SLIP_NO
		     , B.FILE_MASTER_NO
             , B.ORG_FILE_NM
             , A.TAX_AMT
		  FROM AC_BILL_EVDC A WITH(NOLOCK)
			   LEFT OUTER JOIN( SELECT A.FILE_MASTER_NO
		              ,  STUFF((SELECT ',' + ORG_FILE_NM
												FROM COM_FILE_SUB
											   WHERE FILE_MASTER_NO = A.FILE_MASTER_NO
											   ORDER BY FILE_SEQ
												 FOR XML PATH('')),1,1,'') as ORG_FILE_NM
					              FROM COM_FILE A WITH(NOLOCK)
					             GROUP BY A.FILE_MASTER_NO) B
			   ON A.FILE_ID = B.FILE_MASTER_NO
		 WHERE A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
		   AND ISNULL(A.SLIP_NO, '') = #slipNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ, EVDC_SEQ
    </select> 
    
    <select id="ac02DAO.selectAc02020_t03_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , ACNT_YY
		     , ACNT_UNT
		     , VOU_NO
		     , VOU_SEQ
		     , EVDC_SEQ
		     , EVDC_DESC
		     , EVDC_AMT
		     , FILE_ID
		     , INC_DIV
		     , RESI_DIV
		     , RESI_CNTY
		     , ZIP_NO
		     , ADDR
		     , ADDR_DET
		     , REPT_USER_ID
		     , REPT_USER_NM
		     , RES_NO1
		     , RES_NO2
		     , RES_NO1 + RES_NO2 AS RES_NO
		     , NEED_EXP
		     , INC_AMT
		     , INC_TAX
		     , RES_TAX
		     , INC_TAX_RT
		     , PYMT_DT
		     , REPT_YYMM
		     , WRK_DD_CNT
		     , WRK_UNTPRC
		  FROM AC_INC_EVDC WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND ISNULL(SLIP_NO, '') = #slipNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ, EVDC_SEQ
    </select> 
	
	<select id="ac02DAO.selectAc02020_t04_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , ACNT_UNT
		     , ACNT_YY
             , VOU_NO
		     , RCPT_SEQ AS SEQ
		     , '' AS BACCT_DIV
		     , ACNT_NO
             , BANK_CD
             , DEPOSR
             , RCPT_AMT AS AMT
		  FROM AC_RCPT_DESC WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, RCPT_SEQ
        
    </select> 
	
	
	
	
	<select id="ac02DAO.selectAc02020_t04_02"  parameterClass="java.util.HashMap" resultClass="egovMap">
		        
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , ACNT_UNT
		     , ACNT_YY
		     , VOU_NO
		     , PYMT_SEQ AS SEQ
		     , PYMT_SEQ
		     , BACCT_DIV
		     , ACNT_NO
		     , BANK_CD
		     , dbo.F_COM_CODE_NM('CS005', BANK_CD, 'KOR') AS BANK_CD_NM
		     , DEPOSR
		     , PYMT_AMT
		     , PYMT_AMT AS AMT
		     , SLIP_NO
		     , PYMT_MSG
		     , PYMT_DIV
		  FROM AC_PYMT WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND ISNULL(SLIP_NO, '') = #slipNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, PYMT_SEQ
        
    </select>
    
    <!-- 계좌내역 신규 -->
    <insert id="ac02DAO.insertAc02020_t04_02" parameterClass="java.util.HashMap">
    		INSERT INTO AC_PYMT
    			   (
    			   ACNT_UNT
				  ,ACNT_YY
				  ,VOU_NO
				  ,PYMT_SEQ
				  ,BACCT_DIV
				  ,ACNT_NO
				  ,BANK_CD
				  ,DEPOSR
				  ,PYMT_AMT
				  ,INSERT_DT
				  ,INSERT_ID
				  ,INSERT_IP
				  ,INSERT_PGM
				  ,ERP_TRNS_GRP_ID
				  ,ERP_TRNS_SEQ
				  ,PYMT_MSG
				  ,PYMT_DIV
				  ,SLIP_NO
				  )VALUES(
				   #acntUnt#
				  ,#acntYy#
				  ,#vouNo#
				  ,(SELECT ISNULL(MAX(PYMT_SEQ),0)+1
  				      FROM AC_PYMT
  				     WHERE ACNT_UNT = #acntUnt#
				       AND ACNT_YY  = #acntYy#
				       AND vou_no   = #vouNo#)
				  ,#bacctDiv#
				  ,#acntNo#
				  ,#bankCd#
				  ,#deposr#
				  ,CONVERT(BIGINT, #pymtAmt#)
				  ,#insertDt#
				  ,#insertId#
				  ,#insertIp#
				  ,#insertPgm#
				  ,''
				  ,NULL
				  ,#pymtMsg#
				  ,#pymtDiv#
				  ,#slipNo#
				  )
				  
    </insert> 
	
	<!-- 계좌내역 수정 -->
    <update id="ac02DAO.updateAc02020_t04_02" parameterClass="java.util.HashMap">
    		UPDATE AC_PYMT
    		   SET BACCT_DIV = #bacctDiv#
				  ,ACNT_NO   = #acntNo#
				  ,BANK_CD   = #bankCd#
				  ,DEPOSR    = #deposr#
				  ,PYMT_AMT  = CONVERT(BIGINT, #pymtAmt#)
				  ,PYMT_MSG  = #pymtMsg#
				  ,PYMT_DIV  = #pymtDiv#
			 WHERE ACNT_UNT = #acntUnt#
			   AND ACNT_YY  = #acntYy#
			   AND VOU_NO   = #vouNo#	  
			   AND PYMT_SEQ = CONVERT(INT, #pymtSeq#)
    </update> 
	
	<!-- 계좌내역 삭제 -->
    <delete id="ac02DAO.deleteAc02020_t04_02" parameterClass="java.util.HashMap">
    		DELETE
    		  FROM AC_PYMT
			 WHERE ACNT_UNT = #acntUnt#
			   AND ACNT_YY  = #acntYy#
			   AND VOU_NO   = #vouNo#	  
			   AND PYMT_SEQ = CONVERT(INT, #pymtSeq#)
    </delete> 
	
	
	<!--
    #########################################################################################################################################
    # 전표확정등록 (admi/ac/ac02/ac02030.xfdl)
    #########################################################################################################################################
    -->
    
    <select id="ac02DAO.selectAc02030_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , (
		        SELECT ACNT_UNT_NM
		          FROM BG_UNT
		         WHERE 1=1
		           AND ACNT_UNT = A.ACNT_UNT 
		       ) AS ACNT_UNT_NM
		     , A.VOU_KND AS VOU_KND 
		     , dbo.F_COM_CODE_NM('AC001', A.VOU_KND, 'KOR') AS VOU_KND_NM 
             , A.VOU_ORG_ID AS VOU_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.VOU_ORG_ID, 'DEPT_NM_KOR') AS VOU_ORG_ID_NM     
             , A.VOU_NO AS VOU_NO 
		     , A.VOU_TTL AS VOU_TTL 
             , ISNULL(C.VOU_SEQ, 0) AS VOU_SEQ_CNT
		     , dbo.F_AC_GET_VOU_AMT_SUM(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO) AS APLY_AMT_SUM
             , A.STA_CD AS VOU_STA_CD 
		     , dbo.F_COM_CODE_NM('AC002', A.STA_CD, 'KOR') AS VOU_STA_CD_NM 
             , B.SLIP_NO AS SLIP_NO
             , B.SLIP_DESC AS SLIP_DESC
             , ISNULL(D.SLIP_AMT, 0) AS SLIP_AMT_SUM
             , B.STA_CD AS SLIP_STA_CD 
		     , dbo.F_COM_CODE_NM('AC002', B.STA_CD, 'KOR') AS SLIP_STA_CD_NM      
		     , ISNULL(B.RECV_USER_ID, A.RECV_USER_ID) AS RECV_USER_ID
       		 , dbo.F_COM_USER_NM(ISNULL(B.RECV_USER_ID, A.RECV_USER_ID), 'NM') AS RECV_USER_ID_NM
       		 , ISNULL(B.RECV_DT, A.RECV_DT) AS RECV_DT
	         , B.SLIP_CFM_USER_ID AS SLIP_CFM_USER_ID
             , dbo.F_COM_USER_NM(B.SLIP_CFM_USER_ID, 'NM') AS SLIP_CFM_USER_ID_NM
             , B.SLIP_CFM_DT AS SLIP_CFM_DT
             , A.LINK_ID AS LINK_ID
             , A.RECV_ORG_ID
             , B.APPROVAL_DOCID AS SLIP_APPROVAL_DOCID
             , B.SLIP_ACC_EMP_ID
             , dbo.F_COM_USER_NM(B.SLIP_ACC_EMP_ID, 'NM') AS SLIP_ACC_EMP_NM
             , ISNULL(A.PRE_EXP_YN, '0') AS PRE_EXP_YN
		  FROM AC_VOU A WITH(NOLOCK)
		 INNER 
		  JOIN (
		        SELECT DISTINCT A.ACNT_UNT
		             , A.ACNT_YY
		             , A.VOU_NO
                     , B.SLIP_NO
                     , B.SLIP_DESC
                     , B.STA_CD
                     , B.SLIP_CFM_USER_ID
                     , B.SLIP_CFM_DT
                     , B.APPROVAL_DOCID
                     , B.RECV_USER_ID
                     , B.RECV_DT
                     , B.SLIP_ACC_EMP_ID
		          FROM AC_VOU A WITH(NOLOCK)
		          LEFT 
		         OUTER 
		          JOIN AC_SLIP B WITH(NOLOCK)
		            ON A.ACNT_UNT = B.ACNT_UNT
		           AND A.ACNT_YY = B.ACNT_YY
		           AND A.VOU_NO = B.VOU_NO
                  LEFT
                 OUTER
                  JOIN AC_SLIP_DET C WITH(NOLOCK)
                    ON B.ACNT_UNT = C.ACNT_UNT
                   AND B.ACNT_YY = C.ACNT_YY
                   AND B.SLIP_NO = C.SLIP_NO
		         WHERE 1=1

		        <isNotEmpty property="bizCd">
		           AND C.BIZ_CD = #bizCd#
		        </isNotEmpty>
		        <isNotEmpty property="acntCd">
		           AND C.ACNT_CD = #acntCd#
		        </isNotEmpty>
                
		      ) B
		   ON A.ACNT_UNT = B.ACNT_UNT
		  AND A.ACNT_YY = B.ACNT_YY
		  AND A.VOU_NO = B.VOU_NO        
         LEFT 
		OUTER 
		 JOIN ( 
		        SELECT ACNT_UNT
		             , ACNT_YY
		             , VOU_NO
		             , SUM(APLY_AMT) AS APLY_AMT
		             , COUNT(1) AS VOU_SEQ
		          FROM AC_VOU_DET WITH(NOLOCK)
		         GROUP BY ACNT_UNT, ACNT_YY, VOU_NO 
		      ) C
		   ON A.ACNT_UNT = C.ACNT_UNT
		  AND A.ACNT_YY = C.ACNT_YY
		  AND A.VOU_NO = C.VOU_NO
         LEFT
        OUTER
         JOIN (
                SELECT ACNT_UNT
                     , ACNT_YY
                     , SLIP_NO
                     , SUM(SLIP_AMT) AS SLIP_AMT
                  FROM AC_SLIP_DET WITH(NOLOCK)
                 WHERE 1=1
                   AND DRCR_CD = '10'
                 GROUP BY ACNT_UNT, ACNT_YY, SLIP_NO 
              ) D
           ON B.ACNT_UNT = D.ACNT_UNT
          AND B.ACNT_YY = D.ACNT_YY
          AND B.SLIP_NO = D.SLIP_NO
          
		WHERE 1=1
		  AND A.ACNT_YY = #acntYy#
		  AND A.ACNT_UNT = #acntUnt#
			  
		<isNotEmpty property="vouOrgId">
		  AND A.VOU_ORG_ID = #vouOrgId#
		</isNotEmpty>
			   
		<isNotEmpty property="vouKnd">
		  AND A.VOU_KND = #vouKnd#
		</isNotEmpty>
		   
		<isNotEmpty property="staCd">
		  AND B.STA_CD = #staCd#
		</isNotEmpty>

		  	
		<isNotEmpty property="dtDiv">

			<isEqual property="dtDiv" compareValue="10">
		  		<isNotEmpty property="sttDt">
		  			AND A.RECV_DT &gt;= #sttDt#
				</isNotEmpty>
				
				<isNotEmpty property="endDt">
		  			AND A.RECV_DT &lt;= #endDt#
				</isNotEmpty>
				
				<isNotEmpty property="userId">
		  			AND A.RECV_USER_ID = #userId#
				</isNotEmpty>
				
				<isNotEmpty property="userNm">
		  			AND ( A.RECV_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(A.RECV_USER_ID, 'NM') LIKE '%' + #userNm# + '%' )
				</isNotEmpty>
		  	</isEqual>
			
			<isEqual property="dtDiv" compareValue="20">
                <isNotEmpty property="sttDt">
		  			AND B.SLIP_CFM_DT &gt;= #sttDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="endDt">
		  			AND B.SLIP_CFM_DT &lt;= #endDt# 
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userId">
		  			AND B.SLIP_CFM_USER_ID = #userId# 
		  		</isNotEmpty>  		  		

				<isNotEmpty property="userNm">
		  			AND ( B.SLIP_CFM_USER_ID LIKE '%' + #userNm# + '%'
		  			      OR dbo.F_COM_USER_NM(B.SLIP_CFM_USER_ID, 'NM') LIKE '%' + #userNm# + '%' )
				</isNotEmpty>		  		  				  		
		  	</isEqual>
		  	
		</isNotEmpty>
		
			   
		<isNotEmpty property="vouNo">
		  AND A.VOU_NO LIKE '%' + #vouNo# + '%'
		</isNotEmpty>
        
        <isNotEmpty property="slipNo">
		  AND B.SLIP_NO LIKE '%' + #slipNo# + '%'
		</isNotEmpty>
		   
		<isNotEmpty property="slipDesc">
		  AND B.SLIP_DESC LIKE '%' + #slipDesc# + '%'
		</isNotEmpty>
				
		<isEqual property="privateSearchYn" compareValue="1">
		  AND ( B.SLIP_ACC_EMP_ID = #memberNo# )
		</isEqual>	
		
		<isEqual property="privateSearchYn2" compareValue="1">
		  AND ( A.ACC_EMP_ID = #memberNo# )
		</isEqual>	
				
     ORDER BY A.ACNT_YY, A.ACNT_UNT, B.SLIP_NO DESC, B.STA_CD
    </select>

    
    <select id="ac02DAO.selectAc02030_t01_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.ACNT_YY AS ACNT_YY
		     , B.SLIP_NO AS SLIP_NO
		     , B.SLIP_SEQ AS SLIP_SEQ
		     , B.ABSTR AS ABSTR
		     , B.DRCR_CD AS DRCR_CD
		     , dbo.F_COM_CODE_NM('BG003', B.DRCR_CD, 'KOR') AS DRCR_CD_NM
		     , B.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(B.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , B.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(B.ACNT_UNT, B.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , B.ACNT_CD AS ACNT_CD
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '40', ''),'') AS ACNT_CD_MOK_NM
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '50', 'ACNT_NM'),'') AS ACNT_CD_SEMOK_NM
		     , B.SLIP_AMT AS SLIP_AMT
		     , SUM(B.SLIP_AMT) OVER (PARTITION BY A.ACNT_UNT,A.ACNT_YY,B.SLIP_NO) AS SLIP_AMT_TOT 
		     , A.STA_CD
		     , B.AUTO_YN
		     , ISNULL(( SELECT ISNULL(INSERT_GB, '0')
		           FROM AC_VOU_DET D
		          WHERE D.ACNT_UNT = A.ACNT_UNT
		            AND D.ACNT_YY = A.ACNT_YY
		            AND D.VOU_NO = A.VOU_NO
		            AND D.VOU_SEQ = B.SLIP_SEQ ), '0') AS INSERT_GB
		     , ISNULL(B.BAL_DIV, '') AS BAL_DIV
		  FROM AC_SLIP A WITH(NOLOCK)
		 INNER
		  JOIN AC_SLIP_DET B WITH(NOLOCK)
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY = #acntYy#
		   <isNotEmpty property="vouNo">
		   AND A.VOU_NO = #vouNo#
		   </isNotEmpty>
		   <isNotEmpty property="slipNo">
		   AND A.SLIP_NO = #slipNo#
		   </isNotEmpty>
		   AND B.DRCR_CD = '10'   		
		 ORDER BY B.SLIP_SEQ
    </select>
    
    <select id="ac02DAO.selectAc02030_t01_01(elec)"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.ACNT_YY AS ACNT_YY
		     , B.SLIP_NO AS SLIP_NO
		     , B.SLIP_SEQ AS SLIP_SEQ
		     , B.ABSTR AS ABSTR
		     , B.DRCR_CD AS DRCR_CD
		     , dbo.F_COM_CODE_NM('BG003', B.DRCR_CD, 'KOR') AS DRCR_CD_NM
		     , B.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(B.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , B.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(B.ACNT_UNT, B.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , B.ACNT_CD AS ACNT_CD
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '40', ''),'') AS ACNT_CD_MOK_NM
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '50', 'ACNT_NM'),'') AS ACNT_CD_SEMOK_NM
		     , REPLACE(CONVERT(varchar, CONVERT(money, B.SLIP_AMT), 1), '.00', '') AS SLIP_AMT
		     , REPLACE(CONVERT(varchar, CONVERT(money, SUM(B.SLIP_AMT) OVER (PARTITION BY A.ACNT_UNT,A.ACNT_YY,B.SLIP_NO)), 1), '.00', '') AS SLIP_AMT_TOT
		     , A.STA_CD
		  FROM AC_SLIP A WITH(NOLOCK)
		 INNER
		  JOIN AC_SLIP_DET B WITH(NOLOCK)
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY = #acntYy#
		   <isNotEmpty property="vouNo">
		   AND A.VOU_NO = #vouNo#
		   </isNotEmpty>
		   <isNotEmpty property="slipNo">
		   AND A.SLIP_NO = #slipNo#
		   </isNotEmpty>
		   AND B.DRCR_CD = '10'   		
		 ORDER BY B.SLIP_SEQ
    </select>
    
    <select id="ac02DAO.selectAc02030_t01_01_puch"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.ACNT_YY AS ACNT_YY
		     , B.SLIP_NO AS SLIP_NO
		     , B.SLIP_SEQ AS SLIP_SEQ
		     , B.ABSTR AS ABSTR
		     , B.DRCR_CD AS DRCR_CD
		     , dbo.F_COM_CODE_NM('BG003', B.DRCR_CD, 'KOR') AS DRCR_CD_NM
		     , B.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(B.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , B.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(B.ACNT_UNT, B.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , B.ACNT_CD AS ACNT_CD
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '40', ''),'') AS ACNT_CD_MOK_NM
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '50', 'ACNT_NM'),'') AS ACNT_CD_SEMOK_NM
		     , B.SLIP_AMT AS SLIP_AMT
		     , SUM(B.SLIP_AMT) OVER (PARTITION BY A.ACNT_UNT,A.ACNT_YY,B.SLIP_NO) AS SLIP_AMT_TOT
		     , A.STA_CD
		  FROM AC_SLIP A WITH(NOLOCK)
		 INNER
		  JOIN AC_SLIP_DET B WITH(NOLOCK)
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY = #acntYy#
		   AND A.SLIP_NO = #slipNo#
		   AND B.DRCR_CD = '10'   		
		 ORDER BY B.SLIP_SEQ
    </select>
    
    <select id="ac02DAO.selectAc02030_t01_01_puch_elec"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.ACNT_YY AS ACNT_YY
		     , B.SLIP_NO AS SLIP_NO
		     , B.SLIP_SEQ AS SLIP_SEQ
		     , B.ABSTR AS ABSTR
		     , B.DRCR_CD AS DRCR_CD
		     , dbo.F_COM_CODE_NM('BG003', B.DRCR_CD, 'KOR') AS DRCR_CD_NM
		     , B.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(B.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , B.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(B.ACNT_UNT, B.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , B.ACNT_CD AS ACNT_CD
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '40', ''),'') AS ACNT_CD_MOK_NM
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '50', 'ACNT_NM'),'') AS ACNT_CD_SEMOK_NM
		     , REPLACE(CONVERT(varchar, CONVERT(money, B.SLIP_AMT), 1), '.00', '') AS SLIP_AMT
		     , REPLACE(CONVERT(varchar, CONVERT(money, SUM(B.SLIP_AMT) OVER (PARTITION BY A.ACNT_UNT,A.ACNT_YY,B.SLIP_NO)), 1), '.00', '') AS SLIP_AMT_TOT
		     , A.STA_CD
		  FROM AC_SLIP A WITH(NOLOCK)
		 INNER
		  JOIN AC_SLIP_DET B WITH(NOLOCK)
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY = #acntYy#
		   AND A.SLIP_NO = #slipNo#
		   AND B.DRCR_CD = '10'   		
		 ORDER BY B.SLIP_SEQ
    </select>
    
    <insert id="ac02DAO.insertAc02030_t01_01" parameterClass="java.util.HashMap">
    	/* ac02DAO.insertAc02030_t01_01 전표확정->전표상세->분개내역->차변 등록 */
	    INSERT INTO AC_SLIP_DET (
		        ACNT_UNT
		       ,ACNT_YY
		       ,SLIP_NO
		       ,SLIP_SEQ
		       ,ABSTR
		       ,DRCR_CD
		       ,BUDG_ORG_ID
		       ,BIZ_CD
		       ,ACNT_CD
		       ,FINC_CD
		       ,ACNT_NO
		       ,RELV_ACNT_CD
		       ,RELV_ACNT_NO
		       ,SLIP_AMT
		       ,SLIP_CFM_DT
		       ,AUTO_YN
		       ,BAL_DIV
		       ,INSERT_DT
		       ,INSERT_ID
		       ,INSERT_IP
		       ,INSERT_PGM)
		    VALUES (
		        #acntUnt#
		       ,#acntYy#
		       ,#slipNo#
		       ,(SELECT ISNULL(max(slip_seq),0)+1
  				   FROM AC_SLIP_DET WITH(NOLOCK)
  				  WHERE acnt_unt = #acntUnt#
				    AND acnt_yy = #acntYy#
				    AND slip_no = #slipNo#)
		       ,#abstr#
		       ,'10'
		       ,#budgOrgId#
		       ,#bizCd#
		       ,#acntCd#
		       ,#fincCd#
		       ,#acntNo#
		       ,#relvAcntCd#
		       ,#relvAcntNo#
		       ,CONVERT(BIGINT,#slipAmt#)
		       ,#slipCfmDt#
		       ,#autoYn#
		       ,CASE WHEN #balDiv# = '' THEN NULL ELSE #balDiv# END
		       ,GETDATE()
			   ,#insertId#
			   ,#insertIp#
			   ,#insertPgm#)
    </insert>
    
    <update id="ac02DAO.updateAc02030_t01_01" parameterClass="java.util.HashMap">
    	/* ac02DAO.updateAc02030_t01_01 전표확정->전표상세->분개내역->차변 수정 */
        UPDATE AC_SLIP_DET
		   SET  ABSTR		= #abstr#
		      , BUDG_ORG_ID = #budgOrgId#
		      , BIZ_CD		= #bizCd#
		      , ACNT_CD		= #acntCd#
		      , FINC_CD		= #fincCd#
		      , SLIP_AMT	= CONVERT(BIGINT, REPLACE(#slipAmt#,',',''))
		      , BAL_DIV     = CASE WHEN #balDiv# = '' THEN NULL ELSE #balDiv# END
			  , update_dt   = GETDATE()	/* 수정일시 */
		      , update_id 	= #updateId#	/* 수정아이디 */
		      , update_ip 	= #updateIp#	/* 수정아이피 */
		      , update_pgm  = #updatePgm# /* 수정프로그램 */
		 WHERE ACNT_UNT 	= #acntUnt#
		   AND ACNT_YY 		= #acntYy#
		   AND SLIP_NO 		= #slipNo#
		   AND SLIP_SEQ 	= CONVERT(INT, #slipSeq#)
		   AND DRCR_CD 		= '10'    
    </update>
    
    <delete id="ac02DAO.deleteAc02030_t01_01" parameterClass="java.util.HashMap">
    	/* ac02DAO.deleteAc02030_t01_01 전표확정->전표상세->분개내역->차변 삭제 */
        DELETE 
          FROM AC_SLIP_DET
		 WHERE ACNT_UNT 	= #acntUnt#
		   AND ACNT_YY 		= #acntYy#
		   AND SLIP_NO 		= #slipNo#
		   AND SLIP_SEQ 	= CONVERT(INT, #slipSeq#)
		   AND DRCR_CD 		= '10'      
    </delete>
    
    
    <select id="ac02DAO.selectAc02030_t01_02"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.ACNT_YY AS ACNT_YY
		     , B.SLIP_NO AS SLIP_NO
		     , B.SLIP_SEQ AS SLIP_SEQ
		     , B.ABSTR AS ABSTR
		     , B.DRCR_CD AS DRCR_CD
		     , dbo.F_COM_CODE_NM('BG003', B.DRCR_CD, 'KOR') AS DRCR_CD_NM
		     , B.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(B.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , B.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(B.ACNT_UNT, B.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , B.ACNT_CD AS ACNT_CD
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '40', ''),'') AS ACNT_CD_MOK_NM
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '50', 'ACNT_NM'),'') AS ACNT_CD_SEMOK_NM
		     , B.SLIP_AMT AS SLIP_AMT
		     , SUM(B.SLIP_AMT) OVER (PARTITION BY A.ACNT_UNT,A.ACNT_YY,B.SLIP_NO) AS SLIP_AMT_TOT
		     , A.STA_CD
		     , B.AUTO_YN
		     , ISNULL(( SELECT ISNULL(INSERT_GB, '0')
		           FROM AC_VOU_DET D
		          WHERE D.ACNT_UNT = A.ACNT_UNT
		            AND D.ACNT_YY = A.ACNT_YY
		            AND D.VOU_NO = A.VOU_NO
		            AND D.VOU_SEQ = B.SLIP_SEQ ), '0') AS INSERT_GB
		     , ISNULL(B.BAL_DIV, '') AS BAL_DIV
		  FROM AC_SLIP A WITH(NOLOCK)
		 INNER
		  JOIN AC_SLIP_DET B WITH(NOLOCK)
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY = #acntYy#
		   <isNotEmpty property="vouNo">
		   AND A.VOU_NO = #vouNo#
		   </isNotEmpty>
		   <isNotEmpty property="slipNo">
		   AND A.SLIP_NO = #slipNo#
		   </isNotEmpty>
		   AND B.DRCR_CD = '20'   		
		 ORDER BY B.SLIP_SEQ
    </select>
    
    <select id="ac02DAO.selectAc02030_t01_02(elec)"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.ACNT_YY AS ACNT_YY
		     , B.SLIP_NO AS SLIP_NO
		     , B.SLIP_SEQ AS SLIP_SEQ
		     , B.ABSTR AS ABSTR
		     , B.DRCR_CD AS DRCR_CD
		     , dbo.F_COM_CODE_NM('BG003', B.DRCR_CD, 'KOR') AS DRCR_CD_NM
		     , B.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(B.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , B.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(B.ACNT_UNT, B.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , B.ACNT_CD AS ACNT_CD
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '40', ''),'') AS ACNT_CD_MOK_NM
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '50', 'ACNT_NM'),'') AS ACNT_CD_SEMOK_NM
		     , REPLACE(CONVERT(varchar, CONVERT(money, B.SLIP_AMT), 1), '.00', '') AS SLIP_AMT
		     , REPLACE(CONVERT(varchar, CONVERT(money, SUM(B.SLIP_AMT) OVER (PARTITION BY A.ACNT_UNT,A.ACNT_YY,B.SLIP_NO)), 1), '.00', '') AS SLIP_AMT_TOT
		     , A.STA_CD
		  FROM AC_SLIP A WITH(NOLOCK)
		 INNER
		  JOIN AC_SLIP_DET B WITH(NOLOCK)
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY = #acntYy#
		   <isNotEmpty property="vouNo">
		   AND A.VOU_NO = #vouNo#
		   </isNotEmpty>
		   <isNotEmpty property="slipNo">
		   AND A.SLIP_NO = #slipNo#
		   </isNotEmpty>
		   AND B.DRCR_CD = '20'   		
		 ORDER BY B.SLIP_SEQ
    </select>
    
    <select id="ac02DAO.selectAc02030_t01_02_puch"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.ACNT_YY AS ACNT_YY
		     , B.SLIP_NO AS SLIP_NO
		     , B.SLIP_SEQ AS SLIP_SEQ
		     , B.ABSTR AS ABSTR
		     , B.DRCR_CD AS DRCR_CD
		     , dbo.F_COM_CODE_NM('BG003', B.DRCR_CD, 'KOR') AS DRCR_CD_NM
		     , B.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(B.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , B.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(B.ACNT_UNT, B.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , B.ACNT_CD AS ACNT_CD
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '40', ''),'') AS ACNT_CD_MOK_NM
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '50', 'ACNT_NM'),'') AS ACNT_CD_SEMOK_NM
		     , B.SLIP_AMT AS SLIP_AMT
		     , SUM(B.SLIP_AMT) OVER (PARTITION BY A.ACNT_UNT,A.ACNT_YY,B.SLIP_NO) AS SLIP_AMT_TOT
		     , A.STA_CD
		  FROM AC_SLIP A WITH(NOLOCK)
		 INNER
		  JOIN AC_SLIP_DET B WITH(NOLOCK)
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY = #acntYy#
		   AND A.SLIP_NO = #slipNo#
		   AND B.DRCR_CD = '20'   		
		 ORDER BY B.SLIP_SEQ
    </select>
    
    <select id="ac02DAO.selectAc02030_t01_02_puch_elec"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.ACNT_YY AS ACNT_YY
		     , B.SLIP_NO AS SLIP_NO
		     , B.SLIP_SEQ AS SLIP_SEQ
		     , B.ABSTR AS ABSTR
		     , B.DRCR_CD AS DRCR_CD
		     , dbo.F_COM_CODE_NM('BG003', B.DRCR_CD, 'KOR') AS DRCR_CD_NM
		     , B.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(B.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , B.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(B.ACNT_UNT, B.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , B.ACNT_CD AS ACNT_CD
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '40', ''),'') AS ACNT_CD_MOK_NM
		     , ISNULL(dbo.F_AC_GET_ACNT_INFO(B.ACNT_YY, B.ACNT_UNT, B.ACNT_CD, '50', 'ACNT_NM'),'') AS ACNT_CD_SEMOK_NM
		     , REPLACE(CONVERT(varchar, CONVERT(money, B.SLIP_AMT), 1), '.00', '') AS SLIP_AMT
		     , REPLACE(CONVERT(varchar, CONVERT(money, SUM(B.SLIP_AMT) OVER (PARTITION BY A.ACNT_UNT,A.ACNT_YY,B.SLIP_NO)), 1), '.00', '') AS SLIP_AMT_TOT
		     , A.STA_CD
		  FROM AC_SLIP A WITH(NOLOCK)
		 INNER
		  JOIN AC_SLIP_DET B WITH(NOLOCK)
		    ON A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.SLIP_NO = B.SLIP_NO
		 WHERE 1=1
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.ACNT_YY = #acntYy#
		   AND A.SLIP_NO = #slipNo#
		   AND B.DRCR_CD = '20'   		
		 ORDER BY B.SLIP_SEQ
    </select>
    
    <insert id="ac02DAO.insertAc02030_t01_02" parameterClass="java.util.HashMap">
    	/* ac02DAO.insertAc02030_t01_01 전표확정->전표상세->분개내역->대변 등록 */
	    INSERT INTO AC_SLIP_DET (
		        ACNT_UNT
		       ,ACNT_YY
		       ,SLIP_NO
		       ,SLIP_SEQ
		       ,ABSTR
		       ,DRCR_CD
		       ,BUDG_ORG_ID
		       ,BIZ_CD
		       ,ACNT_CD
		       ,FINC_CD
		       ,ACNT_NO
		       ,RELV_ACNT_CD
		       ,RELV_ACNT_NO
		       ,SLIP_AMT
		       ,SLIP_CFM_DT
		       ,AUTO_YN
		       ,BAL_DIV
		       ,INSERT_DT
		       ,INSERT_ID
		       ,INSERT_IP
		       ,INSERT_PGM)
		    VALUES (
		        #acntUnt#
		       ,#acntYy#
		       ,#slipNo#
		       ,(SELECT ISNULL(max(slip_seq),0)+1
  				   FROM AC_SLIP_DET WITH(NOLOCK)
  				  WHERE acnt_unt = #acntUnt#
				    AND acnt_yy = #acntYy#
				    AND slip_no = #slipNo#)
		       ,#abstr#
		       ,'20'
		       ,#budgOrgId#
		       ,#bizCd#
		       ,#acntCd#
		       ,#fincCd#
		       ,#acntNo#
		       ,#relvAcntCd#
		       ,#relvAcntNo#
		       ,CONVERT(BIGINT, #slipAmt#)
		       ,#slipCfmDt#
		       ,#autoYn#
		       ,CASE WHEN #balDiv# = '' THEN NULL ELSE #balDiv# END
		       ,GETDATE()
			   ,#insertId#
			   ,#insertIp#
			   ,#insertPgm#)
    </insert>
    
    <update id="ac02DAO.updateAc02030_t01_02" parameterClass="java.util.HashMap">
    	/* ac02DAO.updateAc02030_t01_01 전표확정->전표상세->분개내역->대변 수정 */
        UPDATE AC_SLIP_DET
		   SET  ABSTR		= #abstr#
		      , BUDG_ORG_ID = #budgOrgId#
		      , BIZ_CD		= #bizCd#
		      , ACNT_CD		= #acntCd#
		      , FINC_CD		= #fincCd#
		      , SLIP_AMT	= CONVERT(BIGINT, REPLACE(#slipAmt#,',',''))
		      , BAL_DIV     = CASE WHEN #balDiv# = '' THEN NULL ELSE #balDiv# END
			  , update_dt   = GETDATE()	/* 수정일시 */
		      , update_id 	= #updateId#	/* 수정아이디 */
		      , update_ip 	= #updateIp#	/* 수정아이피 */
		      , update_pgm  = #updatePgm# /* 수정프로그램 */
		 WHERE ACNT_UNT 	= #acntUnt#
		   AND ACNT_YY 		= #acntYy#
		   AND SLIP_NO 		= #slipNo#
		   AND SLIP_SEQ 	= CONVERT(INT, #slipSeq#)
		   AND DRCR_CD 		= '20'    
    </update>
    
    <delete id="ac02DAO.deleteAc02030_t01_02" parameterClass="java.util.HashMap">
    	/* ac02DAO.deleteAc02030_t01_01 전표확정->전표상세->분개내역->대변 삭제 */
        DELETE 
          FROM AC_SLIP_DET
		 WHERE ACNT_UNT 	= #acntUnt#
		   AND ACNT_YY 		= #acntYy#
		   AND SLIP_NO 		= #slipNo#
		   AND SLIP_SEQ 	= CONVERT(INT, #slipSeq#)
		   AND DRCR_CD 		= '20'      
    </delete>  
    
    
    <select id="ac02DAO.selectAc02030_t02_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
			 , ACNT_YY
		     , ACNT_UNT
		     , VOU_NO
		     , VOU_SEQ
		     , EVDC_SEQ
		     , EVDC_DIV
		     , EVDC_DESC
		     , VEND_ID
		     , VEND_NM
		     , EVDC_AMT
		     , SPLY_AMT
		     , VAT
		     , ISS_DT
		     , ISNULL(DEDUCT_YN, 0) AS DEDUCT_YN
		     , ISNULL(ELEC_YN, 0) AS ELEC_YN
		     , APPRO_NO
		     , FILE_ID
		     , ISNULL(PRE_EXP_YN, '0') AS PRE_EXP_YN
		  FROM AC_BILL_EVDC WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND SLIP_NO = #slipNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ, EVDC_SEQ
    </select> 
    
    <select id="ac02DAO.selectAc02030_t03_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , ACNT_YY
		     , ACNT_UNT
		     , VOU_NO
		     , VOU_SEQ
		     , EVDC_SEQ
		     , EVDC_DESC
		     , EVDC_AMT
		     , FILE_ID
		     , INC_DIV
		     , RESI_DIV
		     , RESI_CNTY
		     , ZIP_NO
		     , ADDR
		     , ADDR_DET
		     , REPT_USER_ID
		     , REPT_USER_NM
		     , RES_NO1
		     , RES_NO2
		     , RES_NO1 + RES_NO2 AS RES_NO
		     , NEED_EXP
		     , INC_AMT
		     , INC_TAX
		     , RES_TAX
		     , INC_TAX_RT
		     , PYMT_DT
		     , REPT_YYMM
		     , WRK_DD_CNT
		     , WRK_UNTPRC
		     , SLIP_NO
		     , SLIP_SEQ
		     , 0 AS SLIP_AMT
		     , BUDG_AMT
		     , ISNULL(PRE_EXP_YN, '0') AS PRE_EXP_YN
		     , ISNULL(FOREIGN_YN, '0') AS FOREIGN_YN
		     , FOREIGN_NO
		  FROM AC_INC_EVDC WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND SLIP_NO = #slipNo#
		   <isNotEmpty property="slipSeq">
		   AND SLIP_SEQ = CONVERT(INT, #slipSeq#)
		   </isNotEmpty>
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ, EVDC_SEQ
    </select> 

	<select id="ac02DAO.selectAc02030_t04_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , ACNT_UNT
		     , ACNT_YY
             , VOU_NO
		     , RCPT_SEQ AS SEQ
		     , '' AS BACCT_DIV
		     , ACNT_NO
             , BANK_CD
             , DEPOSR
             , RCPT_AMT AS AMT
		  FROM AC_RCPT_DESC WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, RCPT_SEQ
    </select> 

	
	<select id="ac02DAO.selectAc02030_t04_02"  parameterClass="java.util.HashMap" resultClass="egovMap">
		        
		SELECT '' AS CHK
		     , '' AS ROW_STATUS 
		     , ACNT_UNT
		     , ACNT_YY
		     , VOU_NO
		     , PYMT_SEQ AS SEQ
		     , BACCT_DIV
		     , ACNT_NO
		     , BANK_CD
		     , DEPOSR
		     , PYMT_AMT AS AMT
		  FROM AC_PYMT WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, PYMT_SEQ
    </select> 
	
	 <!--
    #########################################################################################################################################
    # 계정대체 계정내역 (admi/ac/ac02/ac02010_p01_t03.xfdl)
    #########################################################################################################################################
    -->
    
    <!-- 계정내역 조회 -->
    <select id="ac02DAO.selectAc02010p01_t03_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_SEQ AS VOU_SEQ
		     , A.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , A.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(A.ACNT_UNT, A.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '40', '') AS ACNT_CD_MOK_NM
		     , A.ACNT_CD AS ACNT_CD
		     , dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '', CASE WHEN A.BAL_DIV = '10' THEN 'ACNT_INC_NM' ELSE 'ACNT_EXP_NM' END) AS ACNT_CD_NM
		     , A.BAL_DIV AS BAL_DIV
		     , A.DRCR_CD AS DRCR_CD
		     , A.FINC_CD AS FINC_CD
		     , dbo.F_AC_GET_BIZ_NM(A.ACNT_UNT, A.BIZ_CD, 'FINC_NM') AS FINC_CD_NM
		     , A.ACNT_NO AS ACNT_NO
		     , A.APLY_AMT AS APLY_AMT
		     , dbo.F_AC_ASGN_AMT_SUM(A.ACNT_YY, A.ACNT_UNT, A.BUDG_ORG_ID, A.BIZ_CD, A.ACNT_CD, A.BAL_DIV, '') AS ASGN_AMT_SUM
		     , dbo.F_AC_EXEC_AMT_SUM(A.ACNT_YY, A.ACNT_UNT, A.BUDG_ORG_ID, A.BIZ_CD, A.ACNT_CD, A.BAL_DIV, '') AS EXEC_AMT_SUM
		     , (dbo.F_AC_ASGN_AMT_SUM(A.ACNT_YY, A.ACNT_UNT, A.BUDG_ORG_ID, A.BIZ_CD, A.ACNT_CD, A.BAL_DIV, ''))
				-
			   (dbo.F_AC_EXEC_AMT_SUM(A.ACNT_YY, A.ACNT_UNT, A.BUDG_ORG_ID, A.BIZ_CD, A.ACNT_CD, A.BAL_DIV, '')) AS BUDG_BAL
		     , A.CFM_AMT AS CFM_AMT
		     , A.USE_ORG_ID AS USE_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
             , B.ORIGY_VOU_NO AS ORIGY_VOU_NO
             , dbo.F_AC_GET_VOU_KND(B.ACNT_UNT, B.ACNT_YY, B.ORIGY_VOU_NO) AS ORIGY_VOU_KND
             , CASE WHEN dbo.F_AC_GET_VOU_KND(B.ACNT_UNT, B.ACNT_YY, B.ORIGY_VOU_NO) = '11' THEN '10' ELSE '20' END AS ORIGY_BAL_DIV
             , A.INSERT_GB
		  FROM AC_VOU_DET A WITH(NOLOCK)
         INNER
          JOIN AC_VOU B WITH(NOLOCK)
            ON A.ACNT_UNT = B.ACNT_UNT
           AND A.ACNT_YY = B.ACNT_YY
           AND A.VOU_NO = B.VOU_NO
		 WHERE 1=1
		   AND A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ
    </select> 
    
    
    <!--
    #########################################################################################################################################
    # 자금대체 계정내역 (admi/ac/ac02/ac02010_p01_t04.xfdl)
    #########################################################################################################################################
    -->
    
    <!-- 계정내역 조회 -->
    <select id="ac02DAO.selectAc02010p01_t04_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
	 		 , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_SEQ AS VOU_SEQ
		     , A.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
             , A.DRCR_CD AS DRCR_CD
		     , A.ACNT_CD AS ACNT_CD
             , dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '40', '') AS ACNT_CD_MOK_NM
             , dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '', '') AS ACNT_CD_SEMOK_NM

		     , A.ACNT_NO AS ACNT_NO
		     , A.APLY_AMT AS APLY_AMT
		     , A.CFM_AMT AS CFM_AMT
             , A.USE_ORG_ID AS USE_ORG_ID
		  FROM AC_VOU_DET A WITH(NOLOCK)
         INNER
          JOIN AC_VOU B WITH(NOLOCK)
            ON A.ACNT_UNT = B.ACNT_UNT
           AND A.ACNT_YY = B.ACNT_YY
           AND A.VOU_NO = B.VOU_NO
		 WHERE 1=1
		   AND A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ
    </select> 
	
	<!-- 계정내역 신규 -->
    <insert id="ac02DAO.insertAc02010p01_t04_01" parameterClass="java.util.HashMap">
		INSERT INTO AC_VOU_DET
					(
					  ACNT_YY
				    , ACNT_UNT
				    , VOU_NO
				    , VOU_SEQ
				    , BUDG_ORG_ID
		            , DRCR_CD
				    , ACNT_CD
				    , BAL_DIV
   			        , ACNT_NO
				    , APLY_AMT
				    , CFM_AMT
				    , USE_ORG_ID 
					, INSERT_DT
					, INSERT_ID
					, INSERT_IP
					, INSERT_PGM		
					)
				VALUES
					(
					  #acntYy#
					, #acntUnt#
					, #vouNo#
					, ( 
						SELECT ISNULL(MAX(CONVERT(INT, VOU_SEQ)), 0) + 1
  				   		  FROM AC_VOU_DET
  				  		 WHERE 1=1
				           AND ACNT_YY = #acntYy#
				           AND ACNT_UNT = #acntUnt#
				    	   AND VOU_NO = #vouNo#
   					  )
					, #budgOrgId#
					, #drcrCd#
					, #acntCd#
					, #balDiv#
					, #acntNo#
					, CONVERT(BIGINT, #aplyAmt#)
					, CONVERT(BIGINT, #aplyAmt#)
					, #useOrgId#					
					, GETDATE()
					, #insertId#
					, #insertIp#
					, 'ac02010_p01_t04.xfdl'
					)
	</insert>
	
	<!-- 계정내역 저장 -->
	<update id="ac02DAO.updateAc02010p01_t04_01" parameterClass="java.util.HashMap">
		UPDATE AC_VOU_DET
		   SET BUDG_ORG_ID = #budgOrgId#
             , DRCR_CD = #drcrCd#
		     , ACNT_CD = #acntCd#
		     , BAL_DIV = #balDiv#
             , ACNT_NO = #acntNo#
		     , APLY_AMT = CONVERT(BIGINT, #aplyAmt#)
			 , CFM_AMT = CONVERT(BIGINT, #aplyAmt#)
			 , USE_ORG_ID = #useOrgId#
			 , UPDATE_DT = GETDATE()
			 , UPDATE_ID = #updateId#
			 , UPDATE_IP = #updateIp#
			 , UPDATE_PGM = 'ac02010_p01_t04.xfdl'
         WHERE ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
	</update>
	
	<!-- 계정내역 삭제 -->
	<delete id="ac02DAO.deleteAc02010p01_t04_01" parameterClass="java.util.HashMap">
		DELETE 
		  FROM AC_VOU_DET
         WHERE ACNT_YY = #acntYy#
   		   AND ACNT_UNT = #acntUnt#
   		   AND VOU_NO = #vouNo#
   		   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
	</delete>
		
	<!--
    #########################################################################################################################################
    # 결산대체 계정내역 (admi/ac/ac02/ac02010_p01_t05.xfdl)
    #########################################################################################################################################
    -->
    
    <!-- 계정내역 조회 -->
    <select id="ac02DAO.selectAc02010p01_t05_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
	 		 , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_SEQ AS VOU_SEQ
		     , A.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , A.BIZ_CD AS BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(A.ACNT_UNT, A.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
             , dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '40', '') AS ACNT_CD_MOK_NM
             , A.ACNT_CD AS ACNT_CD
             , dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '', '') AS ACNT_CD_SEMOK_NM
             , A.BAL_DIV AS BAL_DIV
             , A.DRCR_CD AS DRCR_CD
		     , A.FINC_CD AS FINC_CD
			 , dbo.F_AC_GET_BIZ_NM(A.ACNT_UNT, A.BIZ_CD, 'FINC_NM') AS FINC_CD_NM
		     , A.ACNT_NO AS ACNT_NO
		     , A.APLY_AMT AS APLY_AMT
		     , dbo.F_AC_ASGN_AMT_SUM(A.ACNT_YY, A.ACNT_UNT, A.BUDG_ORG_ID, A.BIZ_CD, A.ACNT_CD, A.BAL_DIV, '') AS ASGN_AMT_SUM
		     , dbo.F_AC_EXEC_AMT_SUM(A.ACNT_YY, A.ACNT_UNT, A.BUDG_ORG_ID, A.BIZ_CD, A.ACNT_CD, A.BAL_DIV, '') AS EXEC_AMT_SUM
		     , (dbo.F_AC_ASGN_AMT_SUM(A.ACNT_YY, A.ACNT_UNT, A.BUDG_ORG_ID, A.BIZ_CD, A.ACNT_CD, A.BAL_DIV, ''))
				-
			   (dbo.F_AC_EXEC_AMT_SUM(A.ACNT_YY, A.ACNT_UNT, A.BUDG_ORG_ID, A.BIZ_CD, A.ACNT_CD, A.BAL_DIV, '')) AS BUDG_BAL
		     , A.CFM_AMT AS CFM_AMT
		     , A.USE_ORG_ID AS USE_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
		  FROM AC_VOU_DET A WITH(NOLOCK)
         INNER
          JOIN AC_VOU B WITH(NOLOCK)
            ON A.ACNT_UNT = B.ACNT_UNT
           AND A.ACNT_YY = B.ACNT_YY
           AND A.VOU_NO = B.VOU_NO
		 WHERE 1=1
		   AND A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ
    </select> 
	
	<!-- 계정내역 신규 -->
    <insert id="ac02DAO.insertAc02010p01_t05_01" parameterClass="java.util.HashMap">
		INSERT INTO AC_VOU_DET
					(
					  ACNT_YY
				    , ACNT_UNT
				    , VOU_NO
				    , VOU_SEQ
				    , BUDG_ORG_ID
				    , BIZ_CD
				    , ACNT_CD
		            , BAL_DIV
		            , DRCR_CD
				    , FINC_CD
   			        , ACNT_NO
				    , APLY_AMT
				    , CFM_AMT
				    , USE_ORG_ID 
					, INSERT_DT
					, INSERT_ID
					, INSERT_IP
					, INSERT_PGM		
					)
				VALUES
					(
					  #acntYy#
					, #acntUnt#
					, #vouNo#
					, ( 
						SELECT ISNULL(MAX(CONVERT(INT, VOU_SEQ)), 0) + 1
  				   		  FROM AC_VOU_DET WITH(NOLOCK)
  				  		 WHERE 1=1
				           AND ACNT_YY = #acntYy#
				           AND ACNT_UNT = #acntUnt#
				    	   AND VOU_NO = #vouNo#
   					  )
					, #budgOrgId#
					, #bizCd#
					, #acntCd#
					, #balDiv#
					, #drcrCd#
					, #fincCd#
					, #acntNo#
					, CONVERT(BIGINT, #aplyAmt#)
					, CONVERT(BIGINT, #aplyAmt#)
					, #useOrgId#					
					, GETDATE()
					, #insertId#
					, #insertIp#
					, 'ac02010_p01_t05.xfdl'
					)
	</insert>
	
	<!-- 계정내역 저장 -->
	<update id="ac02DAO.updateAc02010p01_t05_01" parameterClass="java.util.HashMap">
		UPDATE AC_VOU_DET
		   SET BUDG_ORG_ID = #budgOrgId#  
		     , BIZ_CD = #bizCd# 
		     , ACNT_CD = #acntCd# 
             , BAL_DIV = #balDiv#
             , DRCR_CD = #drcrCd# 
		     , FINC_CD = #fincCd# 
 			 , ACNT_NO = #acntNo# 
		     , APLY_AMT = CONVERT(BIGINT, #aplyAmt#)
			 , CFM_AMT = CONVERT(BIGINT, #aplyAmt#)
			 , USE_ORG_ID = #useOrgId#
			 , UPDATE_DT = GETDATE()
			 , UPDATE_ID = #updateId#
			 , UPDATE_IP = #updateIp#
			 , UPDATE_PGM = 'ac02010_p01_t05.xfdl'
         WHERE ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
	</update>
	
	<!-- 계정내역 삭제 -->
	<delete id="ac02DAO.deleteAc02010p01_t05_01" parameterClass="java.util.HashMap">
		DELETE 
		  FROM AC_VOU_DET
         WHERE ACNT_YY = #acntYy#
   		   AND ACNT_UNT = #acntUnt#
   		   AND VOU_NO = #vouNo#
   		   AND VOU_SEQ = CONVERT(INT, #vouSeq#)
	</delete>	
	
	<!-- 전표접수자 저장 -->
	<update id="ac02DAO.updateSlipAccEmpId" parameterClass="java.util.HashMap">
		UPDATE AC_SLIP
		   SET SLIP_ACC_EMP_ID = #slipAccEmpId#
         WHERE ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND SLIP_NO = #slipNo#
	</update>
	
	<!--
    #########################################################################################################################################
    # 은행이관 (admi/ac/ac02/ac02040.xfdl)
    #########################################################################################################################################
    -->
    
    <select id="ac02DAO.selectAc02040_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
    	/* ac02DAO.selectAc02040_01 은행목록 */
		SELECT '' AS CHK
	 		 , '' AS ROW_STATUS
		     , B.VOU_ORG_ID
		     ,(SELECT dbo.F_COM_DEPT_NM(B.VOU_ORG_ID, 'DEPT_NM_KOR')) AS VOU_ORG_NM
		     , A.VOU_NO
		     , A.PYMT_SEQ
	         , A.ACNT_UNT
	         , A.ACNT_YY
		     , A.BANK_CD
		     , dbo.F_COM_CODE_NM('COM_COD_12', A.BANK_CD, 'KOR') AS BANK_CD_NM
		     , A.ACNT_NO
		     , A.DEPOSR
		     , A.PYMT_AMT
		     , A.PYMT_MSG AS PYMT_DESC
		     , D.FINC_NM
		     , C.ACNT_NO AS ACNT_NO2
	         , A.ERP_TRNS_GRP_ID
	         , A.ERP_TRNS_SEQ
	         , A.PYMT_MSG
	         , E.SLIP_NO
	         , dbo.F_COM_USER_NM(E.SLIP_CFM_USER_ID, '' ) AS SLIP_CFM_USER_NM
	         , E.SLIP_CFM_DT + '-' + dbo.FN_LPAD(E.SLIP_CFM_SEQ, 3, '0') AS SLIP_CFM_SEQ
		  FROM AC_PYMT A WITH(NOLOCK)
		     , AC_VOU B WITH(NOLOCK)
		     , (SELECT DISTINCT ACNT_UNT
		             , ACNT_YY
		             , VOU_NO
		             , FINC_CD
		             , ACNT_NO
		          FROM AC_VOU_DET  WITH(NOLOCK)) C
		     , BG_FINC D WITH(NOLOCK)
		     , AC_SLIP E WITH(NOLOCK)
		 WHERE A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.VOU_NO = B.VOU_NO
		   AND A.ACNT_UNT = E.ACNT_UNT
		   AND A.ACNT_YY = E.ACNT_YY
		   AND A.SLIP_NO = E.SLIP_NO
		   AND A.ACNT_UNT = C.ACNT_UNT
		   AND A.ACNT_YY = C.ACNT_YY
		   AND A.VOU_NO = C.VOU_NO
		   AND C.ACNT_UNT = D.ACNT_UNT
		   AND C.FINC_CD = D.FINC_CD
		   AND A.ACNT_YY = #acntYy# 
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.PYMT_DIV = '10'
		<isEqual property="privateSearchYn" compareValue="1">
		  AND ( E.SLIP_CFM_USER_ID = #memberNo# )
		</isEqual>
		<isNotEmpty property="slipCfmDt">
		   AND E.SLIP_CFM_DT = #slipCfmDt#
		</isNotEmpty>
		<isNotEmpty property="staCd">
			<isEqual property="staCd" compareValue="0">
		   		AND ERP_TRNS_GRP_ID IS NULL
		   	</isEqual>
			<isEqual property="staCd" compareValue="1">
		   		AND ERP_TRNS_GRP_ID IS NOT NULL
		   	</isEqual>
		</isNotEmpty>
		 ORDER BY E.SLIP_CFM_SEQ, A.PYMT_SEQ
    </select>
    
    <select id="ac02DAO.selectAc02040_02"  parameterClass="java.util.HashMap" resultClass="egovMap">
    
    	/* ac02DAO.selectAc02040_02 지급목록 */
		SELECT D.FINC_NM
		     , C.ACNT_NO
		     , COUNT(DISTINCT A.VOU_NO) AS VOU_CNT
		     , COUNT(1) AS PYMT_CNT
		     , SUM(A.PYMT_AMT) AS PYMT_SUM_AMT
		  FROM AC_PYMT A WITH(NOLOCK)
		     , AC_VOU B WITH(NOLOCK)
		     , (SELECT DISTINCT ACNT_UNT
		             , ACNT_YY
		             , VOU_NO
		             , FINC_CD
		             , ACNT_NO
		          FROM AC_VOU_DET  WITH(NOLOCK)) C
		     , BG_FINC D WITH(NOLOCK)
		     , AC_SLIP E WITH(NOLOCK)
		 WHERE A.ACNT_UNT = B.ACNT_UNT
		   AND A.ACNT_YY = B.ACNT_YY
		   AND A.VOU_NO = B.VOU_NO
		   AND A.ACNT_UNT = E.ACNT_UNT
		   AND A.ACNT_YY = E.ACNT_YY
		   AND A.SLIP_NO = E.SLIP_NO
		   AND A.ACNT_UNT = C.ACNT_UNT
		   AND A.ACNT_YY = C.ACNT_YY
		   AND A.VOU_NO = C.VOU_NO
		   AND C.ACNT_UNT = D.ACNT_UNT
		   AND C.FINC_CD = D.FINC_CD
		   AND A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.PYMT_DIV = '10'
		<isEqual property="privateSearchYn" compareValue="1">
		  AND ( E.SLIP_CFM_USER_ID = #memberNo# )
		</isEqual>
		<isNotEmpty property="slipCfmDt">
		   AND E.SLIP_CFM_DT = #slipCfmDt#
		</isNotEmpty>
		<isNotEmpty property="staCd">
			<isEqual property="staCd" compareValue="0">
		   		AND ERP_TRNS_GRP_ID IS NULL
		   	</isEqual>
			<isEqual property="staCd" compareValue="1">
		   		AND ERP_TRNS_GRP_ID IS NOT NULL
		   	</isEqual>
		</isNotEmpty>
		 GROUP BY D.FINC_NM
		     , C.ACNT_NO 
		 ORDER BY D.FINC_NM
		     , C.ACNT_NO
		     
    </select>
	
	<delete id="ac02DAO.oracle_delete_if_matrn_dummy" parameterClass="java.util.HashMap">
		/* ac02DAO.delete_if_matrn_dummy */
		DELETE
		  FROM IF_MATRN_DUMMY
	</delete>	
	
	<insert id="ac02DAO.oracle_pre_dummy_P_AC_BANK_PROC" parameterClass="java.util.HashMap">
    	/* ac02DAO.pre_dummy_P_AC_BANK_PROC */
		INSERT INTO IF_MATRN_DUMMY (
		       ACNT_UNT						/* 회계단위ID */
		     , ACNT_YY						/* 회계년도 */
		     , VOU_NO						/* 결의번호 */
		     , PYMT_SEQ       				/* 지급순번 */
		     , TRNF_KNDCD                   /* 이체종류코드 */
		     , TRNS_STCD                    /* 거래상태코드 */
		     , TRNS_STS_MSG                 /* 거래상태메시지 */
		     , BIC_TRNF_DED_PLDT            /* BIC이체실행예정일자 */
		     , FILE_NM                      /* 파일명 */
		     , DFRY_ACNO                    /* 출금계좌번호 */
		     , DFRY_ACNT_XPRSN_CNTN         /* 내통장표시 */
		     , DEPS_BNKCD                   /* 입금은행코드 */
		     , DEPS_ACNO                    /* 입금계좌번호 */
		     , BYC_TRNF_REG_AMT             /* 건별이체등록금액 */
		     , INPUT_DPWNM                  /* 입력예금주명 */
		     , DEPS_ACNT_XPRSN_CNTN         /* 받는분통장표시 */
		     , ERP_TRNS_GRP_ID              /* ERP거래그룹ID */
		     , ERP_TRNS_SEQ                 /* ERP거래일련번호 */ 
		     ) VALUES (
		       #acntUnt#					/* 회계단위id */
		     , #acntYy#						/* 회계년도 */
		     , #vouNo#						/* 결의번호 */
		     , CONVERT(INT,#pymtSeq#)		/* 지급순번 */
		     , '0'                          /* 이체종류코드0 */       
		     , '0'                          /* 거래상태코드0 */       
		     , ''                           /* 거래상태메시지 */     
		     , ''                           /* BIC이체실행예정일자 */
		     , SUBSTRING(ISNULL(#msg#,'동의대'),1,10)           /* 파일명 */          
		     , #acntNo2#                    /* 출금계좌번호 */       
		     , ''                           /* 내통장표시 */         
		     , #bankCd#                     /* 입금은행코드 */       
		     , #acntNo#                     /* 입금계좌번호 */       
		     , CONVERT(FLOAT,#pymtAmt#)     /* 건별이체등록금액 */   
		     , #deposr#                     /* 입력예금주명 */       
		     , SUBSTRING(#pymtDesc#,1,8)       /* 받는분통장표시 */ 
		     , #erpTrnsGrpId#               /* ERP거래그룹ID */
		     , CONVERT(BIGINT,#erpTrnsSeq#)  /* ERP거래일련번호 */
		     )
	</insert>
    
    <parameterMap id="P_AC_BANK_PROC_param" class="java.util.HashMap">
        <parameter property="procCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userIp" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userPgm" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="OUT_CNT" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.P_AC_BANK_PROC" parameterMap="P_AC_BANK_PROC_param"> 
        {call dbo.SP_AC_BANK_PROC(?, ?, ?, ?, ?, ?)}              
    </procedure>
    
    <parameterMap id="P_AC_BANK_PROC_POST_param" class="java.util.HashMap">
        <parameter property="procCd" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userIp" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="userPgm" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> 
        <parameter property="OUT_CNT" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.P_AC_BANK_PROC_POST" parameterMap="P_AC_BANK_PROC_POST_param"> 
        {call dbo.SP_AC_BANK_PROC_POST(?, ?, ?, ?, ?, ?)}              
    </procedure>
	
	<!--
    #########################################################################################################################################
    # 대체결의서접수 (admi/ac/ac02/ac02050.xfdl)
    #########################################################################################################################################
    -->
    
    <select id="ac02DAO.selectAc02050_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , (
		        SELECT ACNT_UNT_NM
		          FROM BG_UNT WITH(NOLOCK)
		         WHERE 1=1
		           AND ACNT_UNT = A.ACNT_UNT 
		       ) AS ACNT_UNT_NM
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_ORG_ID AS VOU_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.VOU_ORG_ID, 'DEPT_NM_KOR') AS VOU_ORG_ID_NM
		     , A.VOU_KND AS VOU_KND 
		     , dbo.F_COM_CODE_NM('AC001', A.VOU_KND, 'KOR') AS VOU_KND_NM 
		     , A.VOU_TTL AS VOU_TTL 
		     , A.STA_CD AS STA_CD 
		     , dbo.F_COM_CODE_NM('AC002', A.STA_CD, 'KOR') AS STA_CD_NM 
		     , ISNULL(C.VOU_SEQ, 0) AS VOU_SEQ_CNT
		     , dbo.F_AC_GET_VOU_AMT_SUM(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO) AS APLY_AMT_SUM
		     , A.APLY_USER_ID AS APLY_USER_ID
       		 , dbo.F_COM_USER_NM(A.APLY_USER_ID, 'NM') AS APLY_USER_ID_NM
       		 , A.APLY_DT AS APLY_DT
	         , A.CTRL_USER_ID AS CTRL_USER_ID
       		 , dbo.F_COM_USER_NM(A.CTRL_USER_ID, 'NM') AS CTRL_USER_ID_NM
       		 , A.CTRL_DT AS CTRL_DT
       	     , A.APPRO_USER_ID AS APPRO_USER_ID
       		 , dbo.F_COM_USER_NM(A.APPRO_USER_ID, 'NM') AS APPRO_USER_ID_NM
             , A.APPRO_DT AS APPRO_DT
		     , A.RECV_USER_ID AS RECV_USER_ID
       		 , dbo.F_COM_USER_NM(A.RECV_USER_ID, 'NM') AS RECV_USER_ID_NM
       		 , A.RECV_DT AS RECV_DT
	         , D.SLIP_CFM_USER_ID AS SLIP_CFM_USER_ID
             , dbo.F_COM_USER_NM(D.SLIP_CFM_USER_ID, 'NM') AS SLIP_CFM_USER_ID_NM
             , D.SLIP_CFM_DT AS SLIP_CFM_DT
		  FROM AC_VOU A WITH(NOLOCK)
		 INNER 
		  JOIN (
		        SELECT DISTINCT A.ACNT_UNT
		             , A.ACNT_YY
		             , A.VOU_NO
		          FROM AC_VOU A WITH(NOLOCK)
		          LEFT 
		         OUTER 
		          JOIN AC_VOU_DET B WITH(NOLOCK)
		            ON A.ACNT_UNT = B.ACNT_UNT
		           AND A.ACNT_YY = B.ACNT_YY
		           AND A.VOU_NO = B.VOU_NO
		         WHERE 1=1         
		        <isNotEmpty property="bizCd">
		           AND B.BIZ_CD = #bizCd#
		        </isNotEmpty>
		        <isNotEmpty property="acntCd">
		           AND B.ACNT_CD = #acntCd#
		        </isNotEmpty>
		      ) B
		   ON A.ACNT_UNT = B.ACNT_UNT
		  AND A.ACNT_YY = B.ACNT_YY
		  AND A.VOU_NO = B.VOU_NO
		 LEFT 
		OUTER 
		 JOIN ( 
		        SELECT ACNT_UNT
		             , ACNT_YY
		             , VOU_NO
		             , SUM(APLY_AMT) AS APLY_AMT
		             , COUNT(1) AS VOU_SEQ
		          FROM AC_VOU_DET WITH(NOLOCK)
		         GROUP BY ACNT_UNT, ACNT_YY, VOU_NO 
		      ) C
		   ON A.ACNT_UNT = C.ACNT_UNT
		  AND A.ACNT_YY = C.ACNT_YY
		  AND A.VOU_NO = C.VOU_NO
		  LEFT
		OUTER
		 JOIN AC_SLIP D WITH(NOLOCK)
		   ON A.ACNT_UNT = D.ACNT_UNT
		  AND A.ACNT_YY = D.ACNT_YY
		  AND A.SLIP_NO = D.SLIP_NO
		  AND A.VOU_NO = D.VOU_NO
		WHERE 1=1
		  AND A.ACNT_YY = #acntYy#
		  AND A.ACNT_UNT = #acntUnt#
		  AND A.VOU_KND NOT IN ('11', '12', '21', '22')
				  
		<isNotEmpty property="vouOrgId">
		  AND A.VOU_ORG_ID = #vouOrgId#
		</isNotEmpty>
			   
		<isNotEmpty property="vouKnd">
		  AND A.VOU_KND = #vouKnd#
		</isNotEmpty>
		   
		<isNotEmpty property="staCd">
		  AND A.STA_CD = #staCd#
		</isNotEmpty>

		  	
		<isNotEmpty property="dtDiv">

			<isEqual property="dtDiv" compareValue="10">
		  		<isNotEmpty property="sttDt">
		  			AND A.APPRO_DT &gt;= #sttDt#
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="endDt">
		  			AND A.APPRO_DT &lt;= #endDt# 
		  		</isNotEmpty>
		  		
		  		<isNotEmpty property="userId">
		  			AND A.APPRO_USER_ID = #userId# 
		  		</isNotEmpty>  		  		  		
		  	</isEqual>
			
			<isEqual property="dtDiv" compareValue="20">
		  		<isNotEmpty property="sttDt">
		  			AND A.RECV_DT &gt;= #sttDt#
				</isNotEmpty>
				
				<isNotEmpty property="endDt">
		  			AND A.RECV_DT &lt;= #endDt#
				</isNotEmpty>
				
				<isNotEmpty property="userId">
		  			AND A.RECV_USER_ID = #userId#
				</isNotEmpty>
		  	</isEqual>
		  	
		</isNotEmpty>
		
			   
		<isNotEmpty property="vouNo">
		  AND A.VOU_NO LIKE '%' + #vouNo# + '%'
		</isNotEmpty>
		   
		<isNotEmpty property="vouTtl">
		  AND A.VOU_TTL LIKE '%' + #vouTtl# + '%'
		</isNotEmpty>
				
     ORDER BY A.ACNT_YY, A.ACNT_UNT, A.VOU_NO, A.STA_CD
    </select>
	
	
	<!-- 대체결의접수 계정대체 상세 -->
	<select id="ac02DAO.selectAc02050_02_01"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
		     , '' AS ROW_STATUS
		     , ACNT_YY AS ACNT_YY
		     , ACNT_UNT AS ACNT_UNT
		     , VOU_NO AS VOU_NO
		     , VOU_SEQ AS VOU_SEQ
		     , BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
		     , BIZ_CD
		     , dbo.F_AC_GET_BIZ_NM(ACNT_UNT, BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
		     , dbo.F_AC_GET_ACNT_INFO(ACNT_YY, ACNT_UNT, ACNT_CD, '40', '') AS ACNT_CD_MOK_NM
		     , ACNT_CD
		     , dbo.F_AC_GET_ACNT_INFO(ACNT_YY, ACNT_UNT, ACNT_CD, '', CASE WHEN BAL_DIV = '10' THEN 'ACNT_INC_NM' ELSE 'ACNT_EXP_NM' END) AS ACNT_CD_SEMOK_NM
		     , BAL_DIV
		     , DRCR_CD
		     , FINC_CD
		     , dbo.F_AC_GET_BIZ_NM(ACNT_UNT, BIZ_CD, 'FINC_NM') AS FINC_CD_NM
		     , ACNT_NO
		     , dbo.F_AC_GET_VOU_AMT(ACNT_UNT, ACNT_YY, VOU_NO, VOU_SEQ) AS APLY_AMT
		     , dbo.F_AC_ASGN_AMT_SUM(ACNT_YY, ACNT_UNT, BUDG_ORG_ID, BIZ_CD, ACNT_CD, BAL_DIV, '') AS ASGN_AMT_SUM
		     , dbo.F_AC_EXEC_AMT_SUM(ACNT_YY, ACNT_UNT, BUDG_ORG_ID, BIZ_CD, ACNT_CD, BAL_DIV, '') AS EXEC_AMT_SUM
		     , (dbo.F_AC_ASGN_AMT_SUM(ACNT_YY, ACNT_UNT, BUDG_ORG_ID, BIZ_CD, ACNT_CD, BAL_DIV, ''))
				-
			   (dbo.F_AC_EXEC_AMT_SUM(ACNT_YY, ACNT_UNT, BUDG_ORG_ID, BIZ_CD, ACNT_CD, BAL_DIV, '')) AS BUDG_BAL
		     , CFM_AMT
		     , USE_ORG_ID
		     , dbo.F_COM_DEPT_NM(USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
		  FROM AC_VOU_DET WITH(NOLOCK)
		 WHERE 1=1
		   AND ACNT_YY = #acntYy#
		   AND ACNT_UNT = #acntUnt#
		   AND VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ
    </select>
    
    
    <!-- 대체결의접수 자금대체 상세 -->
    <select id="ac02DAO.selectAc02050_02_02"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK
	 		 , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_SEQ AS VOU_SEQ
		     , A.BUDG_ORG_ID AS BUDG_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM
             , A.BIZ_CD AS BIZ_CD
             , dbo.F_AC_GET_BIZ_NM(A.ACNT_UNT, A.BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM
             , dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '40', '') AS ACNT_CD_MOK_NM
             , A.ACNT_CD AS ACNT_CD
             , dbo.F_AC_GET_ACNT_INFO(A.ACNT_YY, A.ACNT_UNT, A.ACNT_CD, '', '') AS ACNT_CD_SEMOK_NM
             , A.BAL_DIV AS BAL_DIV
             , A.DRCR_CD AS DRCR_CD
             , A.FINC_CD AS FINC_CD
		     , dbo.F_AC_GET_BIZ_NM(A.ACNT_UNT, A.BIZ_CD, 'FINC_NM') AS FINC_CD_NM
		     , A.ACNT_NO AS ACNT_NO
             , dbo.F_AC_GET_VOU_AMT(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO, A.VOU_SEQ) AS APLY_AMT   
             , '' AS ASGN_AMT_SUM
		     , '' AS EXEC_AMT_SUM
		     , '' AS BUDG_BAL
		     , A.CFM_AMT AS CFM_AMT
		     , A.USE_ORG_ID AS USE_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
		  FROM AC_VOU_DET A WITH(NOLOCK)
         INNER
          JOIN AC_VOU B WITH(NOLOCK)
            ON A.ACNT_UNT = B.ACNT_UNT
           AND A.ACNT_YY = B.ACNT_YY
           AND A.VOU_NO = B.VOU_NO
		 WHERE 1=1
		   AND A.ACNT_YY = #acntYy#
		   AND A.ACNT_UNT = #acntUnt#
		   AND A.VOU_NO = #vouNo#
		 ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ
    </select>
    
    
    <!-- 대체결의접수 결산대체 상세 -->
    <select id="ac02DAO.selectAc02050_02_03"  parameterClass="java.util.HashMap" resultClass="egovMap">
		SELECT '' AS CHK 
			 , '' AS ROW_STATUS 
			 , ACNT_YY AS ACNT_YY 
			 , ACNT_UNT AS ACNT_UNT 
			 , VOU_NO AS VOU_NO 
			 , VOU_SEQ AS VOU_SEQ 
			 , BUDG_ORG_ID AS BUDG_ORG_ID 
			 , dbo.F_COM_DEPT_NM(BUDG_ORG_ID, 'DEPT_NM_KOR') AS BUDG_ORG_ID_NM 
			 , BIZ_CD 
			 , dbo.F_AC_GET_BIZ_NM(ACNT_UNT, BIZ_CD, 'BIZ_NM') AS BIZ_CD_NM 
			 , dbo.F_AC_GET_ACNT_INFO(ACNT_YY, ACNT_UNT, ACNT_CD, '40', '') AS ACNT_CD_MOK_NM 
			 , ACNT_CD 
			 , dbo.F_AC_GET_ACNT_INFO(ACNT_YY, ACNT_UNT, ACNT_CD, '', CASE WHEN BAL_DIV = '10' THEN 'ACNT_INC_NM' ELSE 'ACNT_EXP_NM' END) AS ACNT_CD_NM 
			 , BAL_DIV 
			 , DRCR_CD 
			 , FINC_CD 
			 , dbo.F_AC_GET_BIZ_NM(ACNT_UNT, BIZ_CD, 'FINC_NM') AS FINC_CD_NM 
			 , ACNT_NO 
			 , dbo.F_AC_GET_VOU_AMT(ACNT_UNT, ACNT_YY, VOU_NO, VOU_SEQ) AS APLY_AMT 
			 , dbo.F_AC_ASGN_AMT_SUM(ACNT_YY, ACNT_UNT, BUDG_ORG_ID, BIZ_CD, ACNT_CD, BAL_DIV, '') AS ASGN_AMT_SUM 
			 , dbo.F_AC_EXEC_AMT_SUM(ACNT_YY, ACNT_UNT, BUDG_ORG_ID, BIZ_CD, ACNT_CD, BAL_DIV, '') AS EXEC_AMT_SUM 
			 , (dbo.F_AC_ASGN_AMT_SUM(ACNT_YY, ACNT_UNT, BUDG_ORG_ID, BIZ_CD, ACNT_CD, BAL_DIV, '')) 
			   - 
			   (dbo.F_AC_EXEC_AMT_SUM(ACNT_YY, ACNT_UNT, BUDG_ORG_ID, BIZ_CD, ACNT_CD, BAL_DIV, '')) AS BUDG_BAL
			 , CFM_AMT 
			 , USE_ORG_ID 
			 , dbo.F_COM_DEPT_NM(USE_ORG_ID, 'DEPT_NM_KOR') AS USE_ORG_ID_NM
  		  FROM AC_VOU_DET WITH(NOLOCK)
         WHERE 1=1
           AND ACNT_YY = #acntYy#
   		   AND ACNT_UNT = #acntUnt#
   		   AND VOU_NO = #vouNo#
      ORDER BY ACNT_YY, ACNT_UNT, VOU_NO, VOU_SEQ 
    </select>
    
    
    <parameterMap id="spDeuOraMssqlApproChk" class="java.util.HashMap">
        <parameter property="V_OUT_CNT"          jdbcType="VARCHAR"          javaType="java.lang.String"     resultMap="result" mode="OUT" />
        <parameter property="V_OUT_MSG"          jdbcType="VARCHAR"          javaType="java.lang.String"     resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.saveSpDeuOraMssqlApproChk" parameterMap = "spDeuOraMssqlApproChk"> 
           {call dbo.SP_DEU_ORA_MSSQL_APPRO_CHK(?,?)}              
    </procedure>
    
    <parameterMap id="spDeuOraMssqlSlipChk" class="java.util.HashMap">
        <parameter property="V_OUT_CNT"          jdbcType="VARCHAR"          javaType="java.lang.String"     resultMap="result" mode="OUT" />
        <parameter property="V_OUT_MSG"          jdbcType="VARCHAR"          javaType="java.lang.String"     resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.saveSpDeuOraMssqlSlipChk" parameterMap = "spDeuOraMssqlSlipChk"> 
           {call dbo.SP_DEU_ORA_MSSQL_SLIP_CHK(?,?)}  
    </procedure>
	
	<select id="ac02DAO.selectAc02060"  parameterClass="java.util.HashMap" resultClass="egovMap">
		
		SELECT DISTINCT '' AS CHK
		     , '' AS ROW_STATUS
		     , A.ACNT_YY AS ACNT_YY
		     , A.ACNT_UNT AS ACNT_UNT
		     , (
		        SELECT ACNT_UNT_NM
		          FROM BG_UNT WITH(NOLOCK)
		         WHERE 1=1
		           AND ACNT_UNT = A.ACNT_UNT 
		       ) AS ACNT_UNT_NM
		     , A.VOU_NO AS VOU_NO
		     , A.VOU_ORG_ID AS VOU_ORG_ID
		     , dbo.F_COM_DEPT_NM(A.VOU_ORG_ID, 'DEPT_NM_KOR') AS VOU_ORG_ID_NM
		     , A.VOU_KND AS VOU_KND 
		     , dbo.F_COM_CODE_NM('AC001', A.VOU_KND, 'KOR') AS VOU_KND_NM 
		     , A.VOU_TTL AS VOU_TTL 
		     , A.STA_CD AS STA_CD 
		     , dbo.F_COM_CODE_NM('AC002', A.STA_CD, 'KOR') AS STA_CD_NM 
		     , ISNULL(C.VOU_SEQ, 0) AS VOU_SEQ_CNT
		     , ISNULL(dbo.F_AC_GET_VOU_AMT_SUM(A.ACNT_UNT, A.ACNT_YY, A.VOU_NO), 0) AS APLY_AMT_SUM
		     , A.APLY_USER_ID AS APLY_USER_ID
       		 , dbo.F_COM_USER_NM(A.APLY_USER_ID, 'NM') AS APLY_USER_ID_NM
       		 , A.APLY_DT AS APLY_DT
	         , A.CTRL_USER_ID AS CTRL_USER_ID
       		 , dbo.F_COM_USER_NM(A.CTRL_USER_ID, 'NM') AS CTRL_USER_ID_NM
       		 , A.CTRL_DT AS CTRL_DT
       	     , A.APPRO_USER_ID AS APPRO_USER_ID
       		 , dbo.F_COM_USER_NM(A.APPRO_USER_ID, 'NM') AS APPRO_USER_ID_NM
             , A.APPRO_DT AS APPRO_DT
		     , A.RECV_USER_ID AS RECV_USER_ID
       		 , dbo.F_COM_USER_NM(A.RECV_USER_ID, 'NM') AS RECV_USER_ID_NM
       		 , A.RECV_DT AS RECV_DT
	         , D.SLIP_CFM_USER_ID AS SLIP_CFM_USER_ID
             , dbo.F_COM_USER_NM(D.SLIP_CFM_USER_ID, 'NM') AS SLIP_CFM_USER_ID_NM
             , D.SLIP_CFM_DT AS SLIP_CFM_DT
             , A.LINK_ID AS LINK_ID
             , A.ELEC_APPRO_ID
             , A.APPROVAL_DOCID
             , A.PRE_EXP_YN
             , ISNULL(E.PRE_EXP_YN, '') AS PRE_EXP_YN_BILL
             , ISNULL(F.PRE_EXP_YN, '') AS PRE_EXP_YN_INC
             , ISNULL(A.PRE_EXP_CFM_YN, '0') AS PRE_EXP_CFM_YN
             , A.PRE_EXP_CFM_DT
		  FROM AC_VOU A WITH(NOLOCK)
		 INNER 
		  JOIN (
		        SELECT DISTINCT A.ACNT_UNT
		             , A.ACNT_YY
		             , A.VOU_NO
		          FROM AC_VOU A WITH(NOLOCK)
		          LEFT 
		         OUTER 
		          JOIN AC_VOU_DET B WITH(NOLOCK)
		            ON A.ACNT_UNT = B.ACNT_UNT
		           AND A.ACNT_YY = B.ACNT_YY
		           AND A.VOU_NO = B.VOU_NO
		         WHERE 1=1         
		        <isNotEmpty property="bizCd">
		           AND B.BIZ_CD = #bizCd#
		        </isNotEmpty>
		        <isNotEmpty property="acntCd">
		           AND B.ACNT_CD = #acntCd#
		        </isNotEmpty>
		      ) B
		   ON A.ACNT_UNT = B.ACNT_UNT
		  AND A.ACNT_YY = B.ACNT_YY
		  AND A.VOU_NO = B.VOU_NO
		 LEFT 
		OUTER 
		 JOIN ( 
		        SELECT ACNT_UNT
		             , ACNT_YY
		             , VOU_NO
		             , SUM(APLY_AMT) AS APLY_AMT
		             , COUNT(1) AS VOU_SEQ
		          FROM AC_VOU_DET WITH(NOLOCK)
		         GROUP BY ACNT_UNT, ACNT_YY, VOU_NO 
		      ) C
		   ON A.ACNT_UNT = C.ACNT_UNT
		  AND A.ACNT_YY = C.ACNT_YY
		  AND A.VOU_NO = C.VOU_NO
		 LEFT
		OUTER
		 JOIN AC_SLIP D WITH(NOLOCK)
		   ON A.ACNT_UNT = D.ACNT_UNT
		  AND A.ACNT_YY = D.ACNT_YY
		  AND A.SLIP_NO = D.SLIP_NO
		  AND A.VOU_NO = D.VOU_NO
		 LEFT
		OUTER
		 JOIN (SELECT A.ACNT_UNT
                 ,A.ACNT_YY
                 ,A.VOU_NO
                 ,E.PRE_EXP_YN
             FROM AC_BILL A WITH(NOLOCK)
             JOIN AC_BILL_EVDC E WITH(NOLOCK)
               ON A.ACNT_UNT = E.ACNT_UNT
              AND A.ACNT_YY = E.ACNT_YY
              AND A.VOU_NO = E.VOU_NO
              AND A.EVDC_SEQ = E.EVDC_SEQ) E
		   ON A.ACNT_UNT = E.ACNT_UNT
		  AND A.ACNT_YY = E.ACNT_YY
		  AND A.VOU_NO = E.VOU_NO
         LEFT
		OUTER
		 JOIN (SELECT A.ACNT_UNT
                 ,A.ACNT_YY
                 ,A.VOU_NO
                 ,F.EVDC_SEQ
                 ,F.PRE_EXP_YN
             FROM AC_INC A WITH(NOLOCK)
             JOIN AC_INC_EVDC F WITH(NOLOCK)
               ON A.ACNT_UNT = F.ACNT_UNT
              AND A.ACNT_YY = F.ACNT_YY
              AND A.VOU_NO = F.VOU_NO
              AND A.EVDC_SEQ = F.EVDC_SEQ) F
		   ON A.ACNT_UNT = F.ACNT_UNT
		  AND A.ACNT_YY = F.ACNT_YY
		  AND A.VOU_NO = F.VOU_NO 
		WHERE 1=1
		  AND A.ACNT_YY = #acntYy#
		  AND A.ACNT_UNT = #acntUnt#
		  AND A.STA_CD = '51'
		  AND A.PRE_EXP_YN = '1'
			   
		<isNotEmpty property="vouNo">
		  AND A.VOU_NO LIKE '%' + #vouNo# + '%'
		</isNotEmpty>
		   
		<isNotEmpty property="vouTtl">
		  AND A.VOU_TTL LIKE '%' + #vouTtl# + '%'
		</isNotEmpty>
		    		 		
		<isEqual property="preExpNoCfmYn" compareValue="1">
		  AND ISNULL(A.PRE_EXP_CFM_YN, '0') != '1'
		</isEqual>
				
     ORDER BY A.ACNT_YY, A.ACNT_UNT, A.VOU_NO DESC, A.STA_CD
  	 
    </select>
    
    
    <parameterMap id="P_AC_PRE_EXP_CFM_PROC_param" class="java.util.HashMap">
    	<parameter property="acntYy" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
    	<parameter property="acntUnt" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
    	<parameter property="vouNo" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
    	<parameter property="preExpCfmYn" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
    	<parameter property="preExpCfmDt" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
        <parameter property="OUT_CNT" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.P_AC_PRE_EXP_CFM_PROC" parameterMap="P_AC_PRE_EXP_CFM_PROC_param"> 
        {call dbo.SP_AC_PRE_EXP_CFM(?, ?, ?, ?, ?, ?, ?)}
    </procedure>
	
    <parameterMap id="P_AC_CFM_VOU_PROC_param" class="java.util.HashMap">
    	<parameter property="acntYy" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
    	<parameter property="acntUnt" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
    	<parameter property="vouNo" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
    	<parameter property="cfmRsn" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="IN" />
        <parameter property="OUT_CNT" jdbcType="INTEGER" javaType="java.lang.Integer" resultMap="result" mode="OUT" /> 
        <parameter property="OUT_MSG" jdbcType="VARCHAR" javaType="java.lang.String" resultMap="result" mode="OUT" />
   </parameterMap>
   
    <procedure id="ac02DAO.P_AC_CFM_VOU_PROC" parameterMap="P_AC_CFM_VOU_PROC_param"> 
        {call dbo.SP_AC_CFM_VOU(?, ?, ?, ?, ?, ?)}              
    </procedure>
</sqlMap>